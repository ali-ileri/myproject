{"version":3,"sources":["webpack://HyperFormula/webpack/universalModuleDefinition","webpack://HyperFormula/webpack/bootstrap","webpack://HyperFormula/./lib/index.js","webpack://HyperFormula/./lib/ArraySize.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.push.js","webpack://HyperFormula/./node_modules/core-js/internals/export.js","webpack://HyperFormula/./node_modules/core-js/internals/global.js","webpack://HyperFormula/(webpack)/buildin/global.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/descriptors.js","webpack://HyperFormula/./node_modules/core-js/internals/fails.js","webpack://HyperFormula/./node_modules/core-js/internals/function-call.js","webpack://HyperFormula/./node_modules/core-js/internals/function-bind-native.js","webpack://HyperFormula/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://HyperFormula/./node_modules/core-js/internals/create-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/to-indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/function-uncurry-this.js","webpack://HyperFormula/./node_modules/core-js/internals/classof-raw.js","webpack://HyperFormula/./node_modules/core-js/internals/require-object-coercible.js","webpack://HyperFormula/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://HyperFormula/./node_modules/core-js/internals/to-property-key.js","webpack://HyperFormula/./node_modules/core-js/internals/to-primitive.js","webpack://HyperFormula/./node_modules/core-js/internals/is-object.js","webpack://HyperFormula/./node_modules/core-js/internals/is-callable.js","webpack://HyperFormula/./node_modules/core-js/internals/document-all.js","webpack://HyperFormula/./node_modules/core-js/internals/is-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/get-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://HyperFormula/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-v8-version.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-user-agent.js","webpack://HyperFormula/./node_modules/core-js/internals/get-method.js","webpack://HyperFormula/./node_modules/core-js/internals/a-callable.js","webpack://HyperFormula/./node_modules/core-js/internals/try-to-string.js","webpack://HyperFormula/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://HyperFormula/./node_modules/core-js/internals/well-known-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/shared.js","webpack://HyperFormula/./node_modules/core-js/internals/is-pure.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-store.js","webpack://HyperFormula/./node_modules/core-js/internals/define-global-property.js","webpack://HyperFormula/./node_modules/core-js/internals/has-own-property.js","webpack://HyperFormula/./node_modules/core-js/internals/to-object.js","webpack://HyperFormula/./node_modules/core-js/internals/uid.js","webpack://HyperFormula/./node_modules/core-js/internals/ie8-dom-define.js","webpack://HyperFormula/./node_modules/core-js/internals/document-create-element.js","webpack://HyperFormula/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://HyperFormula/./node_modules/core-js/internals/object-define-property.js","webpack://HyperFormula/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://HyperFormula/./node_modules/core-js/internals/an-object.js","webpack://HyperFormula/./node_modules/core-js/internals/define-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/make-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/function-name.js","webpack://HyperFormula/./node_modules/core-js/internals/inspect-source.js","webpack://HyperFormula/./node_modules/core-js/internals/internal-state.js","webpack://HyperFormula/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-key.js","webpack://HyperFormula/./node_modules/core-js/internals/hidden-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://HyperFormula/./node_modules/core-js/internals/own-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://HyperFormula/./node_modules/core-js/internals/object-keys-internal.js","webpack://HyperFormula/./node_modules/core-js/internals/array-includes.js","webpack://HyperFormula/./node_modules/core-js/internals/to-absolute-index.js","webpack://HyperFormula/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://HyperFormula/./node_modules/core-js/internals/math-trunc.js","webpack://HyperFormula/./node_modules/core-js/internals/length-of-array-like.js","webpack://HyperFormula/./node_modules/core-js/internals/to-length.js","webpack://HyperFormula/./node_modules/core-js/internals/enum-bug-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://HyperFormula/./node_modules/core-js/internals/is-forced.js","webpack://HyperFormula/./node_modules/core-js/internals/array-set-length.js","webpack://HyperFormula/./node_modules/core-js/internals/is-array.js","webpack://HyperFormula/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://HyperFormula/./lib/AbsoluteCellRange.js","webpack://HyperFormula/./lib/Cell.js","webpack://HyperFormula/./lib/DependencyGraph/index.js","webpack://HyperFormula/./lib/DependencyGraph/DependencyGraph.js","webpack://HyperFormula/./lib/absolutizeDependencies.js","webpack://HyperFormula/./lib/parser/index.js","webpack://HyperFormula/./lib/parser/addressRepresentationConverters.js","webpack://HyperFormula/./lib/parser/CellAddress.js","webpack://HyperFormula/./lib/parser/ColumnAddress.js","webpack://HyperFormula/./lib/parser/RowAddress.js","webpack://HyperFormula/./lib/parser/parser-consts.js","webpack://HyperFormula/./lib/parser/ParserWithCaching.js","webpack://HyperFormula/external {\"root\":\"chevrotain\",\"commonjs2\":\"chevrotain\",\"commonjs\":\"chevrotain\",\"amd\":\"chevrotain\"}","webpack://HyperFormula/./lib/parser/Ast.js","webpack://HyperFormula/./lib/parser/binaryOpTokenMap.js","webpack://HyperFormula/./lib/parser/Cache.js","webpack://HyperFormula/./lib/parser/FormulaParser.js","webpack://HyperFormula/./lib/error-message.js","webpack://HyperFormula/./lib/parser/LexerConfig.js","webpack://HyperFormula/./lib/parser/CellReferenceMatcher.js","webpack://HyperFormula/./lib/parser/NamedExpressionMatcher.js","webpack://HyperFormula/./lib/parser/Unparser.js","webpack://HyperFormula/./lib/parser/collectDependencies.js","webpack://HyperFormula/./lib/parser/RelativeDependency.js","webpack://HyperFormula/./lib/ContentChanges.js","webpack://HyperFormula/./lib/SimpleRangeValue.js","webpack://HyperFormula/./lib/interpreter/InterpreterValue.js","webpack://HyperFormula/./lib/Span.js","webpack://HyperFormula/./lib/statistics/index.js","webpack://HyperFormula/./lib/statistics/EmptyStatistics.js","webpack://HyperFormula/./lib/statistics/Statistics.js","webpack://HyperFormula/./lib/statistics/StatType.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/AddressMapping.js","webpack://HyperFormula/./lib/errors.js","webpack://HyperFormula/./lib/DependencyGraph/ArrayMapping.js","webpack://HyperFormula/./lib/DependencyGraph/collectAddressesDependentToRange.js","webpack://HyperFormula/./lib/DependencyGraph/FormulaCellVertex.js","webpack://HyperFormula/./lib/ArrayValue.js","webpack://HyperFormula/./lib/DependencyGraph/RangeVertex.js","webpack://HyperFormula/./lib/DependencyGraph/Graph.js","webpack://HyperFormula/./lib/DependencyGraph/RangeMapping.js","webpack://HyperFormula/./lib/DependencyGraph/SheetMapping.js","webpack://HyperFormula/./lib/i18n/index.js","webpack://HyperFormula/./lib/i18n/TranslationPackage.js","webpack://HyperFormula/./lib/DependencyGraph/EmptyCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ValueCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ParsingErrorVertex.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/SparseStrategy.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/DenseStrategy.js","webpack://HyperFormula/./lib/interpreter/InterpreterState.js","webpack://HyperFormula/./lib/interpreter/plugin/FunctionPlugin.js","webpack://HyperFormula/./lib/interpreter/ArithmeticHelper.js","webpack://HyperFormula/external {\"root\":\"unorm\",\"commonjs2\":\"unorm\",\"commonjs\":\"unorm\",\"amd\":\"unorm\"}","webpack://HyperFormula/./lib/StringHelper.js","webpack://HyperFormula/./lib/CellValue.js","webpack://HyperFormula/./lib/Config.js","webpack://HyperFormula/./lib/ArgumentSanitization.js","webpack://HyperFormula/./lib/DateTimeDefault.js","webpack://HyperFormula/./lib/DateTimeHelper.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/ChooseAddressMappingPolicy.js","webpack://HyperFormula/./lib/format/format.js","webpack://HyperFormula/./lib/format/parser.js","webpack://HyperFormula/./lib/helpers/licenseKeyValidator.js","webpack://HyperFormula/./lib/helpers/licenseKeyHelper.js","webpack://HyperFormula/./lib/HyperFormula.js","webpack://HyperFormula/./lib/BuildEngineFactory.js","webpack://HyperFormula/./lib/CellContentParser.js","webpack://HyperFormula/./lib/ClipboardOperations.js","webpack://HyperFormula/./lib/CrudOperations.js","webpack://HyperFormula/./lib/NamedExpressions.js","webpack://HyperFormula/./lib/Operations.js","webpack://HyperFormula/./lib/dependencyTransformers/AddColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/Transformer.js","webpack://HyperFormula/./lib/dependencyTransformers/AddRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/CleanOutOfScopeDependenciesTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/MoveCellsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveSheetTransformer.js","webpack://HyperFormula/./lib/Sheet.js","webpack://HyperFormula/./lib/UndoRedo.js","webpack://HyperFormula/./lib/Evaluator.js","webpack://HyperFormula/./lib/Exporter.js","webpack://HyperFormula/./lib/GraphBuilder.js","webpack://HyperFormula/./lib/interpreter/FunctionRegistry.js","webpack://HyperFormula/./lib/interpreter/plugin/VersionPlugin.js","webpack://HyperFormula/./lib/interpreter/Interpreter.js","webpack://HyperFormula/./lib/interpreter/Criterion.js","webpack://HyperFormula/./lib/LazilyTransformingAstService.js","webpack://HyperFormula/./lib/dependencyTransformers/CombinedTransformer.js","webpack://HyperFormula/./lib/Lookup/SearchStrategy.js","webpack://HyperFormula/./lib/Lookup/ColumnBinarySearch.js","webpack://HyperFormula/./lib/Lookup/AdvancedFind.js","webpack://HyperFormula/./lib/interpreter/binarySearch.js","webpack://HyperFormula/./lib/Lookup/ColumnIndex.js","webpack://HyperFormula/./lib/NumberLiteralHelper.js","webpack://HyperFormula/./lib/Serialization.js","webpack://HyperFormula/./lib/Destroy.js","webpack://HyperFormula/./lib/Emitter.js","webpack://HyperFormula/external {\"root\":\"TinyEmitter\",\"commonjs2\":\"tiny-emitter\",\"commonjs\":\"tiny-emitter\",\"amd\":\"tiny-emitter\"}","webpack://HyperFormula/./lib/i18n/languages/enGB.js","webpack://HyperFormula/./lib/interpreter/index.js","webpack://HyperFormula/./lib/interpreter/plugin/index.js","webpack://HyperFormula/./lib/interpreter/plugin/AddressPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ArrayPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/AbsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitShiftPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitwiseLogicOperationsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BooleanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CharPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CodePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountBlankPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountUniquePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DateTimePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DegreesPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DeltaPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ExpPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FinancialPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FormulaTextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/HyperlinkPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/InformationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsEvenPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsOddPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LogarithmPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MathConstantsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MatrixPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MedianPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ModuloPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/NumericAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/PowerPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadiansPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadixConversionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RandomPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RoundingPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SqrtPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ConditionalAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/CriterionFunctionCompute.js","webpack://HyperFormula/./lib/generatorUtils.js","webpack://HyperFormula/./lib/interpreter/plugin/SumprodPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TrigonometryPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LookupPlugin.js","webpack://HyperFormula/./lib/Lookup/RowSearchStrategy.js","webpack://HyperFormula/./lib/interpreter/plugin/RomanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SimpleArithmertic.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/bessel/bessel.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/jstat/jstat.js","webpack://HyperFormula/./lib/interpreter/plugin/MathPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ComplexPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalAggregationPlugin.js"],"names":["_ArraySize","require","exports","ArraySize","_Cell","CellError","CellType","CellValueDetailedType","CellValueType","ErrorType","_CellValue","DetailedCellError","_Config","_ChooseAddressMappingPolicy","AlwaysDense","AlwaysSparse","DenseSparseChooseBasedOnThreshold","_errors","ConfigValueTooBigError","ConfigValueTooSmallError","EvaluationSuspendedError","ExpectedOneOfValuesError","ExpectedValueOfTypeError","FunctionPluginValidationError","InvalidAddressError","InvalidArgumentsError","LanguageAlreadyRegisteredError","LanguageNotRegisteredError","MissingTranslationError","NamedExpressionDoesNotExistError","NamedExpressionNameIsAlreadyTakenError","NamedExpressionNameIsInvalidError","NoOperationToRedoError","NoOperationToUndoError","NoRelativeAddressesAllowedError","NoSheetWithIdError","NoSheetWithNameError","NotAFormulaError","NothingToPasteError","ProtectedFunctionTranslationError","SheetNameAlreadyTakenError","SheetSizeLimitExceededError","SourceLocationHasArrayError","TargetLocationHasArrayError","UnableToParseError","_Exporter","ExportedCellChange","ExportedNamedExpressionChange","_HyperFormula","HyperFormula","_enGB","_interopRequireDefault","_interpreter","FunctionPlugin","FunctionArgumentType","plugins","_interopRequireWildcard","_SimpleRangeValue","SimpleRangeValue","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","HyperFormulaNS","defaultLanguage","Config","defaultConfig","language","registerLanguage","enGB","languages","langCode","pluginName","getOwnPropertyNames","startsWith","registerFunctionPlugin","_default","_AbsoluteCellRange","_InterpreterState","_FunctionPlugin","_parser","constructor","width","height","isRef","arguments","length","undefined","Error","fromArray","array","error","scalar","isScalar","arraySizeForBinaryOp","leftArraySize","rightArraySize","Math","max","arraySizeForUnaryOp","arraySize","ArraySizePredictor","config","functionRegistry","checkArraySize","ast","formulaAddress","checkArraySizeForAst","arraysFlag","useArrayArithmetic","state","type","AstNodeType","FUNCTION_CALL","checkArraySizeForFunction","COLUMN_RANGE","ROW_RANGE","CELL_RANGE","range","AbsoluteCellRange","fromAstOrUndef","ARRAY","heights","widths","row","args","sizes","map","h","min","size","w","reduce","total","push","STRING","NUMBER","CELL_REFERENCE","DIV_OP","CONCATENATE_OP","EQUALS_OP","GREATER_THAN_OP","GREATER_THAN_OR_EQUAL_OP","LESS_THAN_OP","LESS_THAN_OR_EQUAL_OP","MINUS_OP","NOT_EQUAL_OP","PLUS_OP","POWER_OP","TIMES_OP","left","right","MINUS_UNARY_OP","PLUS_UNARY_OP","PERCENT_OP","val","value","PARENTHESIS","expression","EMPTY","metadata","getMetadata","procedureName","pluginArraySizeFunction","getArraySizeFunction","subChecks","arg","_a","InterpreterState","arrayFunction","expandRanges","vectorizationForbidden","parameters","argumentDefinitions","repeatLastArgs","slice","maxWidth","maxHeight","i","argumentType","RANGE","ANY","_Span","WRONG_RANGE_SIZE","isSimpleCellRange","isSimpleCellAddress","start","end","simpleCellRange","sheet","SheetsNotEqual","simpleCellAddress","col","fromSimpleCellAddresses","Number","isFinite","AbsoluteRowRange","AbsoluteColumnRange","fromAst","baseAddress","fromCellRange","fromColumnRange","fromRowRangeAst","_e","x","toSimpleCellAddress","spanFrom","topLeftCorner","ret","spanFromOrUndef","fromCoordinates","x1","y1","x2","y2","doesOverlap","other","addressInRange","address","columnInRange","rowInRange","containsRange","intersectionWith","startRow","endRow","startCol","endCol","includesRow","includesColumn","column","shiftByRows","numberOfRows","expandByRows","shiftByColumns","numberOfColumns","shifted","byCols","byRows","expandByColumns","moveToSheet","toSheet","removeSpan","span","RowsSpan","removeRows","removeColumns","shouldBeRemoved","rangeWithSameWidth","rangeWithSameHeight","startColumn","toString","arrayOfAddressesInRange","result","y","withStart","newStart","sameDimensionsAs","sameAs","equalSimpleCellAddress","addressesArrayMap","dependencyGraph","op","currentRow","effectiveEndRow","currentColumn","tmp","effectiveEndColumn","addresses","limitRow","limitColumn","addressesWithDirection","bottom","getAddress","exceedsSheetSizeLimits","maxColumns","maxRows","_dependencyGraph","effectiveWidth","effectiveHeight","rowStart","rowEnd","columnStart","columnEnd","POSITIVE_INFINITY","toSimpleColumnAddress","_numberOfRows","_byRows","_maxRows","getSheetHeight","_rowStart","_rowEnd","toSimpleRowAddress","_numberOfColumns","_maxColumns","getSheetWidth","_columnStart","_columnEnd","_DependencyGraph","_errorMessage","_InterpreterValue","getCellType","vertex","ArrayVertex","isLeftCorner","ARRAYFORMULA","FormulaCellVertex","ParsingErrorVertex","FORMULA","ValueCellVertex","VALUE","CellValueNoNumber","CellValueJustNumber","assign","NumberType","CellValueTypeOrd","BOOLEAN","ERROR","getCellValueType","cellValue","EmptyValue","isExtendedNumber","getCellValueDetailedType","getTypeOfExtendedNumber","getCellValueFormat","getFormatOfExtendedNumber","message","root","parsingError","ErrorMessage","ParseError","attachRootVertex","simpleRowAddress","invalidSimpleRowAddress","simpleColumnAddress","invalidSimpleColumnAddress","invalidSimpleCellAddress","movedSimpleCellAddress","toRight","toBottom","addressKey","absoluteSheetReference","DependencyGraph","_AddressMapping","AddressMapping","_Graph","Graph","_RangeMapping","RangeMapping","_SheetMapping","SheetMapping","_ArrayMapping","ArrayMapping","_FormulaCellVertex","_EmptyCellVertex","EmptyCellVertex","_ValueCellVertex","_ParsingErrorVertex","_RangeVertex","RangeVertex","_SparseStrategy","SparseStrategy","_DenseStrategy","DenseStrategy","_absolutizeDependencies","_ContentChanges","_statistics","_2","_collectAddressesDependentToRange","addressMapping","rangeMapping","sheetMapping","arrayMapping","stats","lazilyTransformingAstService","namedExpressions","changes","ContentChanges","empty","dependencyQueryAddresses","rangeDependencyQuery","_ref","_","dependenciesResult","formulaDependencyQuery","dependencies","dependency","NamedExpressionDependency","namedExpressionOrPlaceholder","name","dependencyQueryVertices","fetchRange","namedExpression","fetchCell","allDeps","smallerRangeVertex","restRange","findSmallerRange","graph","adjacentNodes","cell","getCell","formula","FormulaVertex","getFormula","deps","collectDependencies","absolutizeDependencies","buildEmpty","chooseAddressMappingPolicy","translationPackage","setFormulaToCell","hasVolatileFunction","hasStructuralChangeFunction","newVertex","version","exchangeOrAddFormulaVertex","processCellDependencies","markNodeAsSpecialRecentlyChanged","markAsVolatile","markAsDependentOnStructureChange","correctInfiniteRangesDependency","getAndClearContentChanges","setParsingErrorToCell","errorVertex","shrinkPossibleArrayAndGetCell","exchangeOrAddGraphNode","setCell","setValueToCell","removeArray","getRange","oldValues","getValues","rawValue","setValues","parsedValue","setCellEmpty","emptyVertex","exchangeGraphNode","adjacentNodesCount","removeVertex","removeCell","ensureThatVertexIsNonArrayCellVertex","clearRecentlyChangedVertices","clearSpecialNodesRecentlyChanged","verticesToRecompute","Set","specialNodesRecentlyChanged","volatileVertices","cellDependencies","endVertex","forEach","dep","rangeVertex","setRange","addNode","markNodeAsInfiniteRange","addEdge","bruteForce","cellFromRange","removeEdge","getArray","fetchCellOrCreateEmpty","correctInfiniteRangesDependenciesByRangeVertex","sheetOfVertex","namedExpressionVertex","fetchNamedExpressionVertex","expressionName","sheetId","exchangeNode","addressFrom","addressTo","vertexFrom","vertexTo","infiniteRanges","infiniteRangeVertex","removedRows","measure","StatType","ADJUSTING_GRAPH","entriesFromRowsSpan","adjacentNode","shrinkArrayToCorner","ADJUSTING_ADDRESS_MAPPING","affectedArrays","ADJUSTING_RANGES","affectedRanges","truncateRanges","getArrayVerticesRelatedToRanges","ADJUSTING_ARRAY_MAPPING","fixArraysAfterRemovingRows","addStructuralNodesToChangeSet","contentChanges","removeSheet","removedSheetId","clearSheet","adr","sheetEntries","rangesToRemove","removeRangesInSheet","arrays","add","values","setArrayEmpty","removedColumns","entriesFromColumnsSpan","fixArraysAfterRemovingColumns","addRows","addedRows","moveAllRangesInSheetAfterRowByRows","fixRangesWhenAddingRows","verticesWithChangedSize","fixArraysAfterAddingRow","verticesFromRowsSpan","addColumns","addedColumns","moveAllRangesInSheetAfterColumnByColumns","fixRangesWhenAddingColumns","fixArraysAfterAddingColumn","verticesFromColumnsSpan","ensureNoArrayInRange","isFormulaArrayInRange","isThereSpaceForArray","arrayVertex","getRangeOrUndef","vertexUnderAddress","moveCells","sourceRange","sourceAddress","targetAddress","sourceVertex","targetVertex","rangeVerticesContainedInRange","newEmptyVertex","moveRangesInsideSourceRange","arrayRange","nodeDependencies","collectAddressesDependentToRange","addVertex","addArrayVertex","setAddressMappingForArrayVertex","arrayFormulaNodes","nodes","rowsSpan","columnsSpan","existsVertex","getCellValue","getRawValue","getScalarValue","ScalarExpected","existsEdge","fromNode","toNode","getSheetId","sheetName","fetch","getHeight","getWidth","setArray","topSortWithScc","markNodeAsSpecial","markNodeAsChangingWithStructure","forceApplyPostponedTransformations","ensureRecentData","specialNodes","ranges","arrayVertices","hasNode","Array","from","filter","node","rawValuesFromRange","entriesFromRange","oldNode","newNode","adjNodesStored","computeListOfValuesInRange","cleanAddressMappingUnderArray","adjacentVertex","adjacentArrayVertices","relevantDependencies","formulaDirectDependenciesToArray","rangeDirectDependenciesToArray","dependentToCorner","isArrayInternalCell","getAdjacentNodesAddresses","inputVertex","castVertex","intersection","oldValue","getArrayCellValue","addChange","REF","formulaDependencies","item","specialNodesStructuralChanges","originalValues","rangesInSheet","addedSubrangeInThatRange","currentRangeVertex","find","newRangeVertex","addAllFromRange","subrange","cellAddress","old","coordinate","verticesToRemove","verticesToMerge","existingVertex","mergedVertex","mergeRangeVertices","removeVertexAndCleanupDependencies","moveArrayVerticesAfterRowByRows","arraysInRows","fromRowStartAndEnd","destination","source","moveCell","setNoSpaceIfArray","moveArrayVerticesAfterColumnByColumns","arraysInCols","ColumnsSpan","fromColumnStartAndEnd","setNoSpace","removeRange","softRemoveEdge","removeNode","next","delete","candidate","absolutize","filterDependenciesOutOfScope","_addressRepresentationConverters","cellAddressFromString","simpleCellAddressFromString","simpleCellAddressToString","simpleCellRangeFromString","simpleCellRangeToString","_CellAddress","CellAddress","_ParserWithCaching","ParserWithCaching","_collectDependencies","_LexerConfig","buildLexerConfig","_FormulaParser","FormulaLexer","_Ast","ParsingErrorType","buildProcedureAst","buildCellRangeAst","buildParsingErrorAst","buildCellErrorAst","_Unparser","Unparser","_RelativeDependency","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","_ColumnAddress","_parserConsts","_RowAddress","addressRegex","RegExp","SHEET_NAME_PATTERN","ABSOLUTE_OPERATOR","columnRegex","rowRegex","simpleSheetNameRegex","UNQUOTED_SHEET_NAME_PATTERN","stringAddress","exec","columnLabelToIndex","extractSheetNumber","absolute","absoluteCol","absoluteRow","relative","columnAddressFromString","ColumnAddress","rowAddressFromString","RowAddress","sheetContext","split","RANGE_OPERATOR","startString","endString","sheetIndexMapping","sheetIndex","columnIndexToLabel","sheetIndexToString","columnStringRepresentation","toUpperCase","charCodeAt","nextLetter","String","fromCharCode","floor","sheetMappingFn","test","replace","regexResult","maybeSheetName","CellReferenceType","fromColAndRow","factoryMethod","isColumnAbsolute","isRowAbsolute","bind","CELL_REFERENCE_RELATIVE","CELL_REFERENCE_ABSOLUTE","CELL_REFERENCE_ABSOLUTE_COL","CELL_REFERENCE_ABSOLUTE_ROW","toColumnAddress","refType","isColumnRelative","ReferenceType","RELATIVE","ABSOLUTE","toRowAddress","isRowRelative","isAbsolute","shiftedByRows","shiftedByColumns","moved","newSheet","withSheet","isInvalid","shiftRelativeDimensions","shiftAbsoluteDimensions","hash","sheetPart","unparse","simpleAddress","rowDollar","colDollar","compareByAbsoluteAddress","colA","colB","_toBottom","dollar","rowA","rowB","ALL_WHITESPACE_PATTERN","ODFF_WHITESPACE_PATTERN","UNICODE_LETTER_PATTERN","NON_RESERVED_CHARACTER_PATTERN","QUOTED_SHEET_NAME_PATTERN","CELL_REFERENCE_PATTERN","COLUMN_REFERENCE_PATTERN","ROW_REFERENCE_PATTERN","R1C1_CELL_REFERENCE_PATTERN","CELL_REFERENCE_WITH_NEXT_CHARACTER_PATTERN","NAMED_EXPRESSION_PATTERN","ALL_DIGITS_ARRAY","ALL_UNICODE_LETTERS_ARRAY","code","_chevrotain","_binaryOpTokenMap","_Cache","statsCacheUsed","lexerConfig","lexer","formulaParser","FormulaParser","Cache","parse","text","lexerResult","tokenizeFormula","errors","e","LexingError","computeHashFromTokens","tokens","cacheResult","processedTokens","bindWhitespacesToTokens","parsingResult","parseFromTokens","astWithNoReversedRanges","convertReversedRangesToRegularRanges","ERROR_WITH_RAW_INPUT","NAMED_EXPRESSION","orderedEnds","orderCellRangeEnds","orderColumnRangeEnds","orderRowRangeEnds","valueFixed","leftFixed","rightFixed","exprFixed","argsFixed","argsRow","endA","endB","ends","sort","startSheet","endSheet","compareSheetIds","sheetA","sheetB","Infinity","fetchCachedResultForAst","computeHashFromAst","fetchCachedResult","relativeDependencies","idx","token","tokenMatcher","CellReference","image","concat","ProcedureName","canonicalProcedureName","functionMapping","ColumnRange","startAddress","endAddress","RowRange","rememberNewAst","maybeSetAndThenGet","computeHashOfAstNode","leadingWhitespace","imageWithWhitespace","formatNumber","decimalSeparator","join","functionArgSeparator","rightPart","internalWhitespace","reference","sheetReferenceType","RangeSheetReferenceType","BOTH_ABSOLUTE","getErrorTranslation","rawInput","binaryOpTokenMap","first","WhiteSpace","current","previous","buildEmptyArgAst","buildNumberAst","buildStringAst","buildCellReferenceAst","assertRangeConsistency","buildColumnRangeAst","buildRowRangeAst","buildConcatenateOpAst","buildEqualsOpAst","buildNotEqualOpAst","buildGreaterThanOpAst","buildLessThanOpAst","buildGreaterThanOrEqualOpAst","buildLessThanOrEqualOpAst","buildPlusOpAst","buildMinusOpAst","buildTimesOpAst","buildDivOpAst","buildPowerOpAst","buildMinusUnaryOpAst","buildPlusUnaryOpAst","buildPercentOpAst","hyperlink","buildArrayAst","buildNamedExpressionAst","buildParenthesisAst","buildErrorWithRawInputAst","buildCacheEntry","Map","astRelativeDependencies","cacheEntry","doesContainFunctions","isFunctionVolatile","isFunctionDependentOnSheetStructureChange","entryFromCache","functionCriterion","some","EmbeddedActionsParser","allTokens","outputCst","maxLookahead","booleanExpressionOrEmpty","RULE","OR","ALT","SUBRULE","booleanExpression","EMPTY_ALT","procedureExpression","procedureNameToken","CONSUME","argument","MANY","separator","ArgSeparator","SUBRULE2","rParenToken","RParen","namedExpressionExpression","NamedExpression","offsetProcedureExpression","OffsetProcedureName","LParen","MANY_SEP","SEP","DEF","handleOffsetHeuristic","columnRangeExpression","startImage","endImage","firstAddress","ACTION","secondAddress","NAME","ParserError","firstEnd","secondEnd","sheetRefType","fixSheetIdsForRangeEnds","rowRangeExpression","cellReference","endRangeReference","buildCellRange","endOfRangeExpression","ARGS","offsetProcedure","RangeOffsetNotAllowed","cellRangeExpression","CONSUME2","RangeSeparator","endRangeWithOffsetStartReference","endOfRangeWithOffsetStartExpression","offsetExpression","OPTION","insideArrayExpression","ArrayColSeparator","ArrayRowSeparator","SUBRULE3","parenthesisExpression","lParenToken","arrayExpression","ltoken","ArrayLParen","rtoken","ArrayRParen","numericStringToNumber","input","normalized","positiveAtomicExpression","atomicExpCache","number","NumberLiteral","str","StringLiteral","ErrorLiteral","errString","errorType","errorMapping","rightUnaryOpAtomicExpression","percentage","PercentOp","atomicExpression","AdditionOp","PlusOp","MinusOp","customParsingError","powerExpression","lhs","PowerOp","rhs","multiplicationExpression","MultiplicationOp","TimesOp","DivOp","additionExpression","concatenateExpression","ConcatenateOp","BooleanOp","EqualsOp","NotEqualOp","GreaterThanOp","LessThanOp","GreaterThanOrEqualOp","LessThanOrEqualOp","performSelfAnalysis","formulaWithContext","reset","rangeSheetReferenceType","secondEndFixed","cellArg","StaticOffsetError","rowsArg","rowShift","isInteger","columnsArg","colShift","heightArg","widthArg","OutOfSheet","bottomRightCorner","START_ABSOLUTE","Lexer","ensureOptimizations","lexingResult","tokenize","trimTrailingWhitespaces","skipWhitespacesInsideRanges","skipWhitespacesBeforeArgSeparators","filterTokensByNeighbors","shouldBeSkipped","filteredTokens","pop","DistinctSigns","WrongArgNumber","EmptyArg","EmptyArray","ArrayDimensions","NoSpaceForArrayResult","ValueSmall","ValueLarge","BadCriterion","RangeManySheets","CellRangeExpected","WrongDimension","NumberCoercion","NumberExpected","IntegerExpected","BadMode","DateBounds","WrongType","NaN","EqualLength","Negative","NotBinary","NotOctal","NotHex","EndStartPeriod","CellRefExpected","EmptyRange","BadRef","NumberRange","ValueNotFound","ValueBaseLarge","ValueBaseSmall","ValueBaseLong","NegativeLength","PatternNotFound","OneValue","TwoValues","ThreeValues","IndexBounds","IndexLarge","Formula","NegativeCount","SheetRef","PeriodLong","InvalidDate","BitshiftLong","EmptyString","LengthBounds","NegativeTime","NoDefault","NoConditionMet","Selector","StartEndDate","IncorrectDateTime","CharacterCodeBounds","NonZero","LessThanOne","WeekendString","InvalidRoman","WrongOrder","ComplexNumberExpected","ShouldBeIorJ","SizeMismatch","FunctionName","NamedExpressionName","LicenseKey","_CellReferenceMatcher","_NamedExpressionMatcher","createToken","pattern","NA","categories","cellReferenceMatcher","CellReferenceMatcher","match","start_chars_hint","POSSIBLE_START_CHARACTERS","line_breaks","namedExpressionMatcher","NamedExpressionMatcher","offsetProcedureNameLiteral","getFunctionTranslation","buildFunctionMapping","whitespaceTokenRegexp","ignoreWhiteSpace","arrayRowSeparator","arrayColumnSeparator","inject","cellReferenceRegexp","startOffset","lastIndex","execResult","namedExpressionRegexp","r1c1CellRefRegexp","_index","unparseAst","_b","isFunctionTranslated","originalNamedExpressionName","nearestNamedExpression","displayName","unparseSheetName","formatRange","unparsedExpr","startSheeet","unparsedStart","unparsedEnd","numericString","collectDependenciesFn","dependenciesSet","needArgument","functionNeedArgument","doesFunctionNeedArgumentToBeComputed","argAst","_baseAddress","addAll","change","newValue","addInterpreterValue","exportChanges","exporter","exportChange","isArray","getChanges","isEmpty","effectiveAddressesFromData","_data","_hasOnlyNumbers","data","ensureThatComputed","fromRange","onlyNumbers","onlyValues","onlyRange","fromScalar","isAdHoc","valuesFromTopLeftCorner","j","leftCorner","rowData","entriesFromTopLeftCorner","iterateValuesFromTopLeftCorner","numberOfElements","hasOnlyNumbers","v","rawNumbers","rawData","Symbol","num","RichNumber","format","fromNumber","cloneNumber","newVal","DateNumber","getDetailedType","NUMBER_DATE","CurrencyNumber","NUMBER_CURRENCY","TimeNumber","NUMBER_TIME","DateTimeNumber","NUMBER_DATETIME","PercentNumber","NUMBER_PERCENT","NUMBER_RAW","getTypeFormatOfExtendedNumber","fromNumberOfRows","rows","intersect","otherSpan","firstRow","fromNumberOfColumns","columns","firstColumn","_EmptyStatistics","EmptyStatistics","_Statistics","Statistics","_StatType","incrementCriterionFunctionFullCacheUsed","incrementCriterionFunctionPartialCacheUsed","_name","CRITERION_FUNCTION_FULL_CACHE_USED","CRITERION_FUNCTION_PARTIAL_CACHE_USED","startTimes","clear","Date","now","startTime","func","snapshot","policy","mapping","strategyFor","strategy","addSheet","autoAddSheet","sheetBoundaries","fill","strategyConstructor","getArrayCellRawValue","entries","getEntries","expectedArguments","sheet1","sheet2","replacer","JSON","stringify","expectedType","paramName","ConfigValueEmpty","minimum","maximum","functionNotDeclaredInPlugin","functionId","functionMethodNotFound","functionName","ProtectedFunctionError","cannotRegisterFunctionWithId","cannotUnregisterFunctionWithId","cannotUnregisterProtectedPlugin","AliasAlreadyExisting","getArrayByCorner","count","mtxKey","mtx","spansThroughSheetRows","spansThroughSheetColumn","isFormulaArrayInRow","isFormulaArrayInAllRows","isFormulaArrayInColumn","isFormulaArrayInAllColumns","isFormulaArrayAtAddress","updateArrayVerticesInSheet","fn","updated","d","_ArrayValue","updatingService","newAst","newAddress","newVersion","applyTransformations","ErroredArray","NotComputedArray","setCellValue","setErrorValue","ArrayValue","fromInterpreterValue","resize","simpleRangeValue","valueOrUndef","setArrayCellValue","SPILL","setAddress","setFormula","newFormula","isComputed","columnsFromArray","rowsFromArray","_updatingService","cachedCellValue","aboveRow","splice","nullArrays","aboveColumn","outOfBound","leftmostColumn","rightmostColumn","raw","newSize","functionCache","criterionFunctionCache","dependentCacheRanges","getFunctionValue","setFunctionValue","getCriterionFunctionValue","cacheKey","criterionString","getCriterionFunctionValues","setCriterionFunctionValues","addDependentCacheRange","dependentRange","clearCache","getStart","getEnd","NodeVisitStatus","dependencyQuery","edges","removeIncomingEdges","nodeEdges","nodesCount","edgesCount","edgesForNode","removeDependencies","getTopSortedWithSccSubgraphFrom","modifiedNodes","operatingFunction","onCycle","entranceTime","low","parent","inSCC","nodeStatus","order","time","sccNonSingletons","reverse","DFSstack","SCCstack","ON_STACK","u","t","PROCESSED","uLow","currentSCC","POPPED","shouldBeUpdatedMapping","sorted","cycled","s","getDependencies","sourceNode","getMappingSize","sheetMap","keyFromAddresses","maybeRange","entriesFromSheet","removeByKey","compareBy","oldKey","newKey","keyFromRange","getByKey","updateVerticesFromSheet","changedSize","iterator","valuesRangeEndRowLess","rowLessVertex","entry","leftStart","rightStart","leftEnd","rightEnd","_i18n","canonicalize","sheetDisplayName","toLowerCase","Sheet","id","canonicalName","mappingFromCanonicalName","mappingFromId","lastSheetId","fetchDisplayName","fetchSheetById","sheetNamePrefix","getUITranslation","UIElement","NEW_SHEET_PREFIX","newSheetDisplayName","newSheetCanonicalName","store","getDisplayName","displayNames","numberOfSheets","hasSheetWithId","hasSheetWithName","renameSheet","newDisplayName","currentDisplayName","sheetWithThisCanonicalName","currentCanonicalName","sheetNames","_TranslationPackage","buildTranslationPackage","TranslationPackage","functions","ui","_protectedTranslations","checkUI","checkErrors","checkFunctionTranslations","extendFunctions","additionalFunctionTranslations","keys","buildErrorMapping","getFunctionTranslations","functionIds","translations","getMaybeFunctionTranslation","LIC","functionNames","protectedTranslation","rawTranslationPackage","_cellValue","colMapping","rowMapping","tmpMapping","rowNumber","colNumber","rightmostRowRemoved","numberOfRowsRemoved","rightmostColumnRemoved","numberOfColumnsRemoved","verticesFromColumn","verticesFromRow","rowVertex","vertices","getCellVertex","newRows","formulaVertex","_ArithmeticHelper","interpreter","_this","coerceScalarToNumberOrError","arithmeticHelper","runFunction","functionImplementation","evaluatedArguments","evaluateArguments","argumentValues","argumentIgnorableFlags","_ref2","ignorable","argumentMetadata","buildMetadataForEachArgumentValue","isVectorizationOn","isNumberOfArgumentValuesValid","resultArrayHeight","resultArrayWidth","calculateSizeOfVectorizedResultArray","vectorizedArguments","vectorizeAndBroadcastArgumentsIfNecessary","calculateSingleCellOfResultArray","returnNumberType","resultArray","runFunctionWithReferenceArgument","noArgCallback","referenceCallback","nonReferenceCallback","returnNumberWrapper","columnSearch","serialization","arraySizePredictor","dateTimeHelper","evaluateAst","arraySizeForAst","listOfScalarValues","asts","scalarValue","coerceToType","coercedType","coerce","coerceRangeToScalar","INTEGER","coerced","maxValue","NUM","minValue","lessThan","greaterThan","coerceScalarToString","coerceScalarToBoolean","SCALAR","NOERROR","coerceToRange","COMPLEX","coerceScalarToComplex","passSubtype","argumentsMetadata","coercedArguments","coerceArgumentsToRequiredTypes","functionCalculationResult","argumentValue","defaultValue","coercedValue","isRangePassedAsAScalarArgument","vectorizeAndBroadcastRangeArgument","rowNum","colNum","targetRowNum","targetColNum","numberOfArgumentValuesPassed","isRepeatLastArgsValid","metadataForMissingArguments","areMissingArgumentsOptional","every","argMetadata","optionalArg","argumentsThatRequireVectorization","includes","params","implementedFunctions","ExtendedNumberFactory","_unorm","_StringHelper","COMPLEX_NUMBER_SYMBOL","complexParsingRegexp","ArithmeticHelper","numberLiteralsHelper","lt","compare","leq","gt","geq","eq","neq","pow","addWithEpsilonRaw","abs","actualEps","addWithEpsilon","typeOfResult","inferExtendedNumberTypeAdditive","unaryMinus","unaryPlus","unaryPercent","nonstrictadd","subtract","leftArg","rightArg","divide","DIV_BY_ZERO","inferExtendedNumberTypeMultiplicative","multiply","manyToExactComplex","coerceNumbersExactRanges","manyToNumbers","manyToExactNumbers","coerceNumbersCoerceRangesDropNulls","manyToCoercedNumbersDropNulls","manyToOnlyNumbersDropNulls","collator","collatorFromConfig","smartRounding","precisionEpsilon","eqMatcherFunction","regexp","buildRegex","normalizeString","neqMatcherFunction","searchString","index","requiresRegex","useRegularExpressions","useWildcards","matchWholeCell","c","charAt","isWildcard","needsEscape","floatCmp","mod","coerceToMaybeNumber","coerceNonDateScalarToMaybeNumber","dateStringToDateNumber","maybePercentNumber","coerceStringToMaybePercentNumber","maybeCurrencyNumber","coerceStringToMaybeCurrencyNumber","numericStringToMaybeNumber","trim","trimmedInput","endsWith","numOfPercents","parsedNumOfPercents","matchedCurrency","currencyMatcher","currencySymbol","currencyValue","parsedCurrencyValue","currency","coerceComplexExactRanges","vals","expandedVals","arr","coerceStringToComplex","typeFormat","regexpStr","escapeNoCharacters","caseSensitive","escapeNonWildcards","escapeAllCharacters","accentSensitive","leftTmp","rightTmp","coerceEmptyToValue","stringCmp","numberCmp","coerceBooleanToNumber","rangeFn","val1","parseComplexToken","val2","coerceComplexToString","symb","re","im","imStr","coerceToRangeNumbersOrError","argUppered","zeroIfEmpty","isNumberOverflow","isNaN","fixNegativeZero","escapedCharacters","leftType","leftFormat","rightType","rightFormat","forceNormalizeString","offset","form","normalize","unorm","sensitivity","caseFirst","ignorePunctuation","Intl","Collator","localeLang","valueOf","_ArgumentSanitization","_DateTimeDefault","_DateTimeHelper","_format","_licenseKeyValidator","privatePool","options","showDeprecatedWarns","binarySearchThreshold","dateFormats","evaluateNullToZero","functionPlugins","leapYear1900","licenseKey","nullYear","nullDate","parseDateTime","precisionRounding","stringifyDateTime","stringifyDuration","timeFormats","thousandSeparator","useStats","undoLimit","useColumnIndex","warnDeprecatedOptions","configValueFromParam","configValueFromParamCheck","validateNumberToBeAtLeast","validateNumberToBeAtMost","getLanguage","instanceOfSimpleDate","setupCurrencySymbol","licenseKeyValidityState","checkLicenseKeyValidity","configCheckIfParametersNotInConflict","valueAfterCheck","getConfig","getFullConfigFromPartial","mergeConfig","init","mergedConfig","warnDeprecatedIfUsed","inputValue","fromVersion","replacementName","console","warn","year","month","day","defaultParseToDateTime","defaultStringifyDateTime","defaultStringifyDuration","partialConfig","getDefaultConfig","typeCheck","valuesMap","_len","_key","param","names","duplicates","paramNames","validateArgToType","dateTimeString","dateFormat","timeFormat","ampmtoken","substring","dateItems","timeItems","defaultParseToTime","defaultParseToDate","parsedDate","parsedTime","secondsExtendedRegexp","precision","formatItems","ampm","hourIndex","indexOf","minuteIndex","secondIndex","findIndex","hourString","hours","minuteString","minutes","secondString","seconds","round","monthIndex","dayIndex","yearIndexLong","yearIndexShort","yearString","monthString","dayString","numDays","prefSumDays","SECONDS_PER_MINUTE","MINUTES_PER_HOUR","HOURS_PER_DAY","instanceOfSimpleTime","maxDate","DateTimeHelper","minDateAbsoluteValue","dateToNumberFromZero","maxDateValue","dateToNumber","epochYearZero","numberToSimpleDate","getWithinBounds","dayNumber","dateTime","parseDateTimeFromConfigFormats","timeToNumber","parseDateTimeFromFormats","getNullYear","getEpochYearZero","isValidDate","date","isLeapYear","relativeNumberToAbsoluteNumber","dateNumber","dayOfYear","dayToMonth","numberToSimpleDateTime","numberToSimpleTime","carryDays","leapYearsCount","daysInMonth","endOfMonth","toBasisUS","yearLengthForBasis","countLeapDays","parseSingleFormat","dateString","dateFormatsIterate","timeFormatsIterate","offsetMonth","totalM","truncateDayInMonth","roundToNearestSecond","roundToEpsilon","epsilon","argAsSeconds","argAsMinutes","argAsHours","toBasisEU","threshold","formatArg","dateHelper","tryDateTime","tryDuration","parseForNumberFormat","numberFormat","padLeft","padRight","countChars","char","TokenType","FREE_TEXT","tokenParts","integerFormat","decimalFormat","valueParts","toFixed","integerPart","decimalPart","padSizeInteger","substr","padSizeDecimal","parseForDateTimeFormat","fractionOfSecondPrecision","FORMAT","am","pm","dateFormatRegex","numberFormatRegex","formatToken","FormatExpressionType","matchDateFormat","m","matchNumberFormat","numberFormatToken","createTokens","regexTokens","beforeToken","lastToken","afterLastToken","dateFormatTokens","elem","isEscapeToken","DATE","numberFormatTokens","_licenseKeyHelper","consoleMessages","invalid","expired","keyValidityDate","missing","_notified","messageDescriptor","template","vars","checkKeySchema","releaseDays","getTime","keyValidityDays","extractTime","formatDate","monthNames","getMonth","getDate","getFullYear","_rl","_hd","parseInt","_pi","_nm","_ss","l","_cp","sp","a","b","padStart","_BuildEngineFactory","_CellContentParser","_Destroy","_Emitter","_FunctionRegistry","_Operations","_parser2","_config","_stats","_columnSearch","_unparser","_cellContentParser","_evaluator","_lazilyTransformingAstService","_crudOperations","_exporter","_namedExpressions","_serialization","_functionRegistry","_emitter","Emitter","_evaluationSuspended","evaluator","buildFromArray","configInput","buildFromEngineState","BuildEngineFactory","buildFromSheet","buildFromSheets","sheets","languageCode","registeredLanguages","languagePackage","unregisterLanguage","getRegisteredLanguagesCodes","plugin","FunctionRegistry","unregisterFunctionPlugin","registerFunction","unregisterFunction","unregisterAllFunctions","unregisterAll","getRegisteredFunctionNames","getRegisteredFunctionIds","getFunctionPlugin","getAllFunctionPlugins","getPlugins","engine","parser","unparser","cellContentParser","crudOperations","ensureEvaluationIsNotSuspended","getCellFormula","getCellHyperlink","getCellSerialized","getSheetValues","getSheetFormulas","getSheetSerialized","getAllSheetsDimensions","genericAllSheetsGetter","getSheetDimensions","getAllSheetsValues","getAllSheetsFormulas","getAllSheetsSerialized","updateConfig","newParams","isNewConfigTheSame","rebuildWithConfig","rebuildAndRecalculate","getStats","undo","recomputeIfDependencyGraphNeedsIt","redo","isThereSomethingToUndo","isThereSomethingToRedo","isItPossibleToSetCellContents","ensureRangeInSizeLimits","it","ensureItIsPossibleToChangeContent","setCellContents","topLeftCornerAddress","cellContents","swapRowIndexes","setRowOrder","isItPossibleToSwapRowIndexes","validateSwapRowIndexes","testRowOrderForArrays","newRowOrder","mappingFromOrder","isItPossibleToSetRowOrder","swapColumnIndexes","columnMapping","setColumnOrder","isItPossibleToSwapColumnIndexes","validateSwapColumnIndexes","testColumnOrderForArrays","newColumnOrder","isItPossibleToSetColumnOrder","isItPossibleToAddRows","indexes","normalizedIndexes","normalizeAddedIndexes","ensureItIsPossibleToAddRows","_len2","_key2","isItPossibleToRemoveRows","_len3","_key3","normalizeRemovedIndexes","ensureItIsPossibleToRemoveRows","_len4","_key4","isItPossibleToAddColumns","_len5","_key5","ensureItIsPossibleToAddColumns","_len6","_key6","isItPossibleToRemoveColumns","_len7","_key7","ensureItIsPossibleToRemoveColumns","_len8","_key8","isItPossibleToMoveCells","destinationLeftCorner","operations","ensureItIsPossibleToMoveCells","isItPossibleToMoveRows","targetRow","ensureItIsPossibleToMoveRows","moveRows","isItPossibleToMoveColumns","targetColumn","ensureItIsPossibleToMoveColumns","moveColumns","copy","getRangeValues","cut","paste","targetLeftCorner","isClipboardEmpty","clearClipboard","clearRedoStack","undoRedo","clearUndoStack","cellRange","subarray","getRangeFormulas","getRangeSerialized","getFillRangeData","target","offsetsFromTarget","targetRange","isItPossibleToAddSheet","ensureItIsPossibleToAddSheet","addedSheetName","emit","Events","SheetAdded","isItPossibleToRemoveSheet","ensureScopeIdIsValid","SheetRemoved","isItPossibleToClearSheet","isItPossibleToReplaceSheetContent","ensureItIsPossibleToChangeSheetContents","setSheetContent","getCellDependents","getCellPrecedents","getSheetName","getSheetNames","doesSheetExist","doesCellHaveSimpleValue","doesCellHaveFormula","cellType","isCellEmpty","isCellPartOfArray","countSheets","isItPossibleToRenameSheet","newName","ensureItIsPossibleToRenameSheet","oldName","SheetRenamed","batch","batchOperations","suspendEvaluation","beginUndoRedoBatchMode","commitUndoRedoBatchMode","resumeEvaluation","EvaluationSuspended","EvaluationResumed","isEvaluationSuspended","isItPossibleToAddNamedExpression","scope","ensureItIsPossibleToAddNamedExpression","addNamedExpression","NamedExpressionAdded","getNamedExpressionValue","namedExpressionForScope","getNamedExpressionFormula","getNamedExpression","isItPossibleToChangeNamedExpression","newExpression","ensureItIsPossibleToChangeNamedExpression","changeNamedExpression","changeNamedExpressionExpression","isItPossibleToRemoveNamedExpression","removeNamedExpression","removedNamedExpression","NamedExpressionRemoved","listNamedExpressions","getAllNamedExpressionsNamesInScope","getAllNamedExpressionsSerialized","normalizeFormula","formulaString","extractTemporaryFormula","calculateFormula","internalCellValue","runAndForget","exportScalarOrRange","validateFormula","numberToDateTime","inputNumber","numberToDate","numberToTime","on","event","listener","once","off","destroy","objectDestroy","parsedCellContent","CellContent","newConfig","configNewLanguage","serializedSheets","withNewConfig","serializedNamedExpressions","newEngine","verticesToRecomputeFrom","partialRun","exportedChanges","ValuesUpdated","buildDate","releaseDate","_ClipboardOperations","_CrudOperations","_Evaluator","_GraphBuilder","_Interpreter","_LazilyTransformingAstService","_SearchStrategy","_NamedExpressions","_NumberLiteralHelper","_Serialization","_Sheet","_UndoRedo","buildEngine","newsheetprefix","inputNamedExpressions","BUILD_ENGINE_TOTAL","NamedExpressions","LazilyTransformingAstService","buildColumnSearchStrategy","validateAsSheet","boundaries","findBoundaries","numberLiteralHelper","NumberLiteralHelper","CellContentParser","Operations","UndoRedo","clipboardOperations","ClipboardOperations","CrudOperations","Exporter","Serialization","Interpreter","GRAPH_BUILD","graphBuilder","GraphBuilder","buildGraph","Evaluator","run","Boolean","Empty","getSingletonInstance","instance","isFormula","isBoolean","tl","isError","upperCased","errorRegex","content","dateVal","timeVal","getHours","getMinutes","getSeconds","getMilliseconds","trimmedContent","mode","res","parseAsNum","parsedDateNumber","ClipboardOperationType","ClipboardCellType","Clipboard","sourceLeftCorner","getContent","clipboard","CUT","clipboardCell","getClipboardCell","COPY","abortCut","ensureItIsPossibleToCopyPaste","isCutClipboard","isCopyClipboard","addRowsCommand","AddRowsCommand","saveOperation","AddRowsUndoEntry","removeRowsCommand","RemoveRowsCommand","rowsRemovals","RemoveRowsUndoEntry","addColumnsCommand","AddColumnsCommand","AddColumnsUndoEntry","removeColumnsCommand","RemoveColumnsCommand","columnsRemovals","RemoveColumnsUndoEntry","overwrittenCellsData","addedGlobalNamedExpressions","MoveCellsUndoEntry","MoveRowsUndoEntry","MoveColumnsUndoEntry","ensureItIsPossibleToCopy","isPositiveInteger","oldContent","getRangeClipboardCells","restoreClipboardCells","PasteUndoEntry","beginBatchMode","commitBatchMode","AddSheetUndoEntry","originalName","oldSheetContent","getSheetClipboardCells","scopedNamedExpressions","RemoveSheetUndoEntry","RenameSheetUndoEntry","ClearSheetUndoEntry","ensureItIsPossibleToChangeCellContents","oldContents","newContent","setCellContent","SetCellContentsUndoEntry","SetSheetContentUndoEntry","SetRowOrderUndoEntry","validateRowOrColumnMapping","rowRange","SetColumnOrderUndoEntry","newOrder","rowOrColumn","limit","isUndoStackEmpty","isRedoStackEmpty","AddNamedExpressionUndoEntry","oldNamedExpression","ChangeNamedExpressionUndoEntry","RemoveNamedExpressionUndoEntry","ensureNamedExpressionNameIsValid","ensureNamedExpressionIsValid","sheetHeight","newRowsCount","numberOfRowsToAdd","isNonnegativeInteger","sheetWidth","newColumnsCount","numberOfColumnsToAdd","sourceStart","targetStart","existingSheetId","inputAddress","scopeId","sources","targets","isNameValid","isNameAvailable","parsedExpression","doesContainRelativeReferences","InternalNamedExpression","added","normalizeExpressionName","WorkbookStore","normalizedExpressionName","getExisting","remove","getAllNamedExpressions","ne","WorksheetStore","nextNamedExpressionRow","workbookStore","worksheetStores","addressCache","worksheetStore","namedExpressionInAddress","isExpressionInScope","a1CellRefRegexp","namedExpRegexp","worksheetStoreOrCreate","nextAddress","restoreNamedExpression","workbookNamedExpressionOrPlaceholder","getAllNamedExpressionsNames","storedNamedExpressions","expr","sheetNum","getAllNamedExpressionsForScope","SHEET_FOR_WORKBOOK_EXPRESSIONS","_AddColumnsTransformer","_AddRowsTransformer","_CleanOutOfScopeDependenciesTransformer","_MoveCellsTransformer","_RemoveColumnsTransformer","_RemoveRowsTransformer","_RemoveSheetTransformer","rowsSpans","normalizedIndex","columnsSpans","allocateNamedExpressionAddressSpace","cmd","rowsToRemove","rowsRemoval","doRemoveRows","doAddRows","doAddColumns","columnsToRemove","columnsRemoval","doRemoveColumns","TRANSFORM_ASTS","transformation","RemoveSheetTransformer","performEagerTransformations","addTransformation","namedexpression","removeSheetByName","rowsToAdd","beginCombinedMode","commitCombinedMode","columnsToAdd","currentDataAtTarget","valuesToRemove","removeValues","valuesToMove","moveValues","MoveCellsTransformer","updateNamedExpressionsForMovedCells","buffer","_col","storeNamedExpressionInCell","adjustNamedExpressionEdges","restoreCell","restoredNamedExpression","globalNamedExpression","isRowOrColumnRange","sourceSheetId","cells","addedNamedExpressions","updateNamedExpressionsForTargetAddress","setFormulaToCellFromCache","PARSING_ERROR","getOldContent","newCellContent","parserResult","newSheetContent","arrayChanges","applyChanges","_ref3","formulaHash","absoluteDependencies","cleanedAst","CleanOutOfScopeDependenciesTransformer","transformSingleAst","cleanedDependencies","rowEffectivelyNotInSheet","removedCells","RemoveRowsTransformer","rewriteAffectedArrays","rowFrom","rowCount","columnEffectivelyNotInSheet","RemoveColumnsTransformer","columnFrom","columnCount","AddRowsTransformer","AddColumnsTransformer","localVertex","globalVertex","sourceSheet","namedExpressionDependency","namedExpressionInTargetScope","targetScopeExpressionVertex","copyOrFetchGlobalNamedExpressionVertex","_ref4","_ref5","merged","acc","_ref6","startIndex","amount","shift","_ref7","_ref8","_ref9","_Transformer","Transformer","isIrreversible","transformRowRangeAst","_formulaAddress","transformCellRange","transformRange","transformRowRange","_start","_end","transformColumnRange","transformCellAddress","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","fixNodeAddress","newEnd","cachedAst","transformAst","transformCellReferenceAst","transformCellRangeAst","transformColumnRangeAst","newCellAddress","newRange","dependentFormulaTransformer","DependentFormulaTransformer","transformAddress","absoluteDependencyAddress","absoluteStart","absoluteEnd","shouldMove","actualStart","actualEnd","startSCA","endSCA","cellsCount","currentRowWidth","currentCol","currentValue","sheetSize","BaseUndoEntry","command","doUndo","undoRemoveRows","doRedo","redoRemoveRows","undoMoveCells","redoMoveCells","undoAddRows","redoAddRows","undoSetRowOrder","redoSetRowOrder","undoSetColumnOrder","redoSetColumnOrder","undoSetSheetContent","redoSetSheetContent","undoStart","undoEnd","undoMoveRows","redoMoveRows","undoMoveColumns","redoMoveColumns","undoAddColumns","redoAddColumns","undoRemoveColumns","redoRemoveColumns","undoAddSheet","redoAddSheet","undoRemoveSheet","redoRemoveSheet","undoRenameSheet","redoRenameSheet","undoClearSheet","redoClearSheet","undoSetCellContents","redoSetCellContents","undoPaste","redoPaste","undoAddNamedExpression","redoAddNamedExpression","undoRemoveNamedExpression","redoRemoveNamedExpression","undoChangeNamedExpression","redoChangeNamedExpression","BatchUndoEntry","operation","reversedOperations","undoBatch","redoBatch","oldData","undoStack","redoStack","batchUndoEntry","addUndoEntry","storeDataForVersion","astHash","currentOldData","undoEntry","batchOperation","restoreOldDataFromVersion","addedRowsSpans","addedColumnsSpans","cellContentData","oldContentAddress","restoreOperationOldContent","rowIndex","redoEntry","oldDataToRestore","entryToRestore","TOP_SORT","EVALUATION","recomputeFormulas","newCellValue","recomputeFormulaVertexValue","CYCLE","tmpRanges","evaluateAstToCellValue","interpreterValue","lazilyTransformingService","exportValue","detailedError","cellValueRounding","originAddress","magnitudeMultiplierExponent","log10","placesMultiplier","buildStrategy","SimpleStrategy","COLLECT_DEPENDENCIES","PROCESS_DEPENDENCIES","processDependencies","columnIndex","cellContent","parseResult","PARSER","shrinkArrayIfNeeded","_VersionPlugin","validateAndReturnMetadataFromName","aliases","arraySizeFunctions","volatileFunctions","arrayFunctions","structuralChangeFunctions","functionsWhichDoesNotNeedArgumentsToBeComputed","functionsMetadata","isArrayFunction","instancePlugins","loadPluginFunctions","protectedFunctions","loadFunctionUnprotected","categorizeFunction","loadTranslations","loadPluginFunction","functionIsProtected","protectedPlugin","protectedPlugins","registeredPlugin","_protectedPlugins","registry","methodName","method","initializePlugins","instances","foundPluginInstance","pluginInstance","arraySizeMethodName","arraySizeMethod","getFunction","pluginEntry","pluginFunction","functionMetadata","isVolatile","doesNotNeedArgumentsToBeComputed","isDependentOnSheetStructureChange","VersionPlugin","LICENSE_STATUS_MAP","validityState","status","_Criterion","equalOp","arg1","arg2","binaryErrorWrapper","notEqualOp","greaterThanOp","lessThanOp","greaterThanOrEqualOp","lessThanOrEqualOp","concatOp","plusOp","minusOp","timesOp","powerOp","divOp","unaryMinusOp","unaryErrorWrapper","percentOp","unaryPlusOp","criterionBuilder","CriterionBuilder","evaluateAstWithoutPostprocessing","wrapperForRootVertex","leftResult","rightResult","binaryRangeWrapper","unaryRangeWrapper","rangeSpansOneSheet","totalWidth","astRow","rowHeight","rowRet","astIt","newRaw","raw2","raw1","i1","i2","j1","j2","CriterionType","buildCriterion","operator","_c","_d","trueString","falseString","fromCellValue","criterion","parseCriterion","lambda","buildCriterionLambda","EQUAL","ANY_CRITERION_REGEX","criterionValue","criterionType","StrToCriterionType","boolvalue","NOT_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","_CombinedTransformer","transformations","combinedTransformer","CombinedTransformer","TRANSFORM_ASTS_POSTPONED","getTransformationsFrom","transformedAst","transformedAddress","_ColumnBinarySearch","_ColumnIndex","statistics","ColumnIndex","ColumnBinarySearch","_AdvancedFind","AdvancedFind","searchKey","rangeValue","searchOptions","basicFind","_binarySearch","advancedFind","keyMatcher","searchCoordinate","ordering","matchExactly","normalizedSearchKey","findNormalizedValue","findLastOccurrenceInOrderedRange","orderingDirection","searchArray","NOT_FOUND","getValueFromIndexFn","compareFn","foundIndex","findLastMatchingIndex","foundValue","findLastOccurrenceInOrderedArray","predicate","startRange","endRange","pivot","ceil","transformingService","binarySearchStrategy","arrayValue","addSingleCellValue","removeSingleValue","handlingDuplicates","resultUsingColumnIndex","findUsingColumnIndex","columnMap","getColumnMap","normalizedKey","valueIndexForTheKey","findRowBelongingToRange","valueIndex","positionInIndex","findInOrderedArray","isRowNumberBelongingToRange","getValueIndex","actualVersion","relevantTransformations","BUILD_COLUMN_INDEX","addValue","shiftRows","removeRowsFromValues","isRowNumberAlreadyInIndex","isFoundSpanValid","afterRow","handlingMisses","center","isIndexInRange","numberPattern","allThousandSeparatorsRegex","arrayVertexAddress","genericSheetGetter","getter","sheetGetter","idMap","newUnparser","object","Function","postMortem","_tinyEmitter","TinyEmitter","dictionary","FILTER","ADDRESS","ABS","ACOS","ACOSH","ACOT","ACOTH","AND","ARABIC","ASIN","ASINH","ATAN2","ATAN","ATANH","AVERAGE","AVERAGEA","AVERAGEIF","BASE","BIN2DEC","BIN2HEX","BIN2OCT","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","CEILING","CHAR","CHOOSE","CLEAN","CODE","COLUMN","COLUMNS","CONCATENATE","CORREL","COS","COSH","COT","COTH","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUNTUNIQUE","CSC","CSCH","CUMIPMT","CUMPRINC","DATEDIF","DATEVALUE","DAY","DAYS360","DAYS","DB","DDB","DEC2BIN","DEC2HEX","DEC2OCT","DECIMAL","DEGREES","DELTA","DOLLARDE","DOLLARFR","EDATE","EFFECT","EOMONTH","ERF","ERFC","EVEN","EXACT","EXP","FALSE","FIND","FORMULATEXT","FV","FVSCHEDULE","HEX2BIN","HEX2DEC","HEX2OCT","HLOOKUP","HOUR","HYPERLINK","IF","IFERROR","IFNA","IFS","INDEX","INT","INTERVAL","IPMT","ISBINARY","ISBLANK","ISERR","ISERROR","ISEVEN","ISFORMULA","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISODD","ISOWEEKNUM","ISPMT","ISREF","ISTEXT","LEFT","LEN","LN","LOG10","LOG","LOWER","MATCH","MAX","MAXA","MAXIFS","MAXPOOL","MEDIAN","MEDIANPOOL","MID","MIN","MINA","MINIFS","MINUTE","MIRR","MMULT","MOD","MONTH","NETWORKDAYS","NOMINAL","NOT","NOW","NPER","NPV","OCT2BIN","OCT2DEC","OCT2HEX","ODD","OFFSET","PI","PMT","PDURATION","PRODUCT","POWER","PPMT","PROPER","PV","RADIANS","RAND","RATE","REPLACE","REPT","RIGHT","ROMAN","ROUND","ROUNDDOWN","ROUNDUP","ROW","ROWS","RRI","SEARCH","SEC","SECH","SECOND","SHEET","SHEETS","SIN","SINH","SLN","SPLIT","SQRT","STDEVA","STDEVPA","SUBSTITUTE","SUBTOTAL","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SWITCH","SYD","T","TAN","TANH","TBILLEQ","TBILLPRICE","TBILLYIELD","TEXT","TIME","TIMEVALUE","TODAY","TRANSPOSE","TRIM","TRUE","TRUNC","UNICHAR","UNICODE","UPPER","VARA","VARPA","VLOOKUP","WEEKDAY","WEEKNUM","WORKDAY","XNPV","XOR","YEAR","YEARFRAC","VARP","VAR","STDEVP","STDEV","FISHER","FISHERINV","GAMMA","GAMMALN","GAUSS","FACT","FACTDOUBLE","COMBIN","COMBINA","GCD","LCM","MROUND","MULTINOMIAL","QUOTIENT","RANDBETWEEN","SERIESSUM","SIGN","SQRTPI","SUMX2MY2","SUMX2PY2","SUMXMY2","GAMMADIST","GAMMAINV","BETADIST","BETAINV","BINOMDIST","BESSELI","BESSELJ","BESSELK","BESSELY","CHIDIST","CHIINV","FDIST","FINV","WEIBULL","POISSON","HYPGEOMDIST","TDIST","TINV","LOGINV","LOGNORMDIST","NORMDIST","NORMINV","NORMSDIST","NORMSINV","PHI","IMABS","IMAGINARY","IMARGUMENT","IMCONJUGATE","IMCOS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMDIV","IMEXP","IMLN","IMLOG10","IMLOG2","IMPOWER","IMPRODUCT","IMREAL","IMSEC","IMSECH","IMSIN","IMSINH","IMSQRT","IMSUB","IMSUM","IMTAN","LARGE","SMALL","AVEDEV","CONFIDENCE","DEVSQ","GEOMEAN","HARMEAN","CRITBINOM","PEARSON","RSQ","STANDARDIZE","ZTEST","FTEST","STEYX","SLOPE","CHITEST","TTEST","SKEW","WEIBULLDIST","VARS","TINV2T","TDISTRT","TDIST2T","STDEVS","FINVRT","FDISTRT","CHIDISTRT","CHIINVRT","COVARIANCEP","COVARIANCES","LOGNORMINV","POISSONDIST","SKEWP","FLOOR","_AddressPlugin","AddressPlugin","_ArrayPlugin","ArrayPlugin","_AbsPlugin","AbsPlugin","_BitShiftPlugin","BitShiftPlugin","_BitwiseLogicOperationsPlugin","BitwiseLogicOperationsPlugin","_BooleanPlugin","BooleanPlugin","_CharPlugin","CharPlugin","_CodePlugin","CodePlugin","_CountBlankPlugin","CountBlankPlugin","_CountUniquePlugin","CountUniquePlugin","_DateTimePlugin","DateTimePlugin","_DegreesPlugin","DegreesPlugin","_DeltaPlugin","DeltaPlugin","_ExpPlugin","ExpPlugin","_FinancialPlugin","FinancialPlugin","_FormulaTextPlugin","FormulaTextPlugin","_HyperlinkPlugin","HyperlinkPlugin","_InformationPlugin","InformationPlugin","_IsEvenPlugin","IsEvenPlugin","_IsOddPlugin","IsOddPlugin","_LogarithmPlugin","LogarithmPlugin","_MathConstantsPlugin","MathConstantsPlugin","_MatrixPlugin","MatrixPlugin","_MedianPlugin","MedianPlugin","_ModuloPlugin","ModuloPlugin","_NumericAggregationPlugin","NumericAggregationPlugin","_PowerPlugin","PowerPlugin","_RadiansPlugin","RadiansPlugin","_RadixConversionPlugin","RadixConversionPlugin","_RandomPlugin","RandomPlugin","_RoundingPlugin","RoundingPlugin","_SqrtPlugin","SqrtPlugin","_ConditionalAggregationPlugin","ConditionalAggregationPlugin","_SumprodPlugin","SumprodPlugin","_TextPlugin","TextPlugin","_TrigonometryPlugin","TrigonometryPlugin","_LookupPlugin","LookupPlugin","_RomanPlugin","RomanPlugin","_SimpleArithmertic","SimpleArithmerticPlugin","_StatisticalPlugin","StatisticalPlugin","_MathPlugin","MathPlugin","_ComplexPlugin","ComplexPlugin","_StatisticalAggregationPlugin","StatisticalAggregationPlugin","AbsStyle","verifyAddressArguments","useA1Style","FullyAbsolute","RowAbsoluteColRelative","RowRelativeColAbsolute","argumentError","colLetter","sheetPrefix","r1c1ColSegment","r1c1RowSegment","FullyRelative","arrayformula","arrayformulaArraySize","arrayconstrain","numRows","numCols","arrayconstrainArraySize","rangeVals","rangeFilters","ok","filterArraySize","MAX_48BIT_INTEGER","SHIFT_MIN_POSITIONS","SHIFT_MAX_POSITIONS","bitlshift","shiftLeft","bitrshift","shiftRight","positions","validate","bitand","bitor","bitxor","literalTrue","literalFalse","conditionalIf","condition","arg3","ifs","and","or","not","xor","cnt","switch","selector","n","iferror","ifna","choose","trunc","unichar","fromCodePoint","unicode","codePointAt","countblank","counter","countunique","valuesSet","errorsSet","isoweeknumCore","absoluteDay","yearStart","yearStartAbsolute","firstThursdayAbs","days360Core","startDate","endDate","nStart","nEnd","delta","eomonth","numberOfMonthsToShift","days","hour","timeNumber","minute","second","numberRepresentation","weekday","weekdayOffsets","weeknum","isoweeknum","datevalue","timevalue","today","edate","newDate","datedif","unit","days360","yearfrac","interval","networkdays","holidays","networkdayscore","networkdaysintl","weekend","workday","workdaycore","workdayintl","multiplier","weekendPattern","computeWeekendPattern","filteredHolidays","simpleRangeToFilteredHolidays","countWorkdays","upper","lower","mid","sortedHolidays","ans","lowerBound","holidaysArr","processedHolidays","sortedArray","workdayPatterns","degrees","exp","pmt","pmtCore","ipmt","ipmtCore","ppmt","ppmtCore","fv","fvCore","cumipmt","rate","periods","cumprinc","db","cost","salvage","life","period","initial","ddb","factor","dollarde","fraction","dollarfr","effect","ispmt","nominal","nper","payment","present","future","log","guess","epsMax","iterMax","f","dy","df","pv","rri","sln","syd","tbilleq","settlement","maturity","discount","denom","tbillprice","tbillyield","price","fvschedule","ratios","npv","npvCore","mirr","frate","rrate","posFlag","negFlag","posValues","negValues","nom","pduration","xnpv","dates","valArr","valArrNum","dateArr","dateArrNum","term","formulatext","url","linkLabel","isbinary","iserr","iserror","isformula","isblank","isna","isnumber","islogical","isref","istext","isnontext","_f","na","_ast","_state","sheetNumber","iseven","isodd","base","ln","parseFloat","pi","sqrtpi","sqrt","arraySizeForMultiplication","arraySizeForPoolFunction","inputArray","windowSize","stride","mmult","leftMatrix","rightMatrix","outputSize","createKernel","sum","thread","mmultArraySize","maxpool","matrix","leftCornerX","leftCornerY","currentMax","medianpool","_this2","currentMin","iter","medianGuess","medianGuessCount","i3","j3","maxpoolArraySize","windowArg","window","strideArg","medianpoolArraySize","transpose","inputSize","transposeArraySize","kernel","apply","median","large","small","dividend","divisor","zeroForInfinite","MomentsAggregate","sumsq","single","compose","averageValue","varSValue","varPValue","doSum","strictlyNumbers","doMax","maxa","NEGATIVE_INFINITY","numbersBooleans","doMin","mina","doCount","counta","doCounta","average","doAverage","averagea","doVarS","varp","doVarP","vara","reduceAggregateA","varpa","stdevs","doStdevS","stdevp","doStdevP","stdeva","stdevpa","product","doProduct","subtotal","functionType","reduceAggregate","initialAccValue","reducingFunction","mapFunction","coercionFunction","evaluateRange","coercedRangeValues","err","rangeValues","rangeResult","actualRange","cachedValue","power","radians","MAX_LENGTH","DECIMAL_NUMBER_OF_BITS","MIN_BASE","MAX_BASE","ALPHABET","dec2bin","places","decimalToBaseWithExactPadding","dec2oct","dec2hex","bin2dec","binary","binaryWithSign","coerceStringToBase","twoComplementToDecimal","bin2oct","bin2hex","oct2dec","octal","octalWithSign","oct2bin","oct2hex","hex2dec","hexadecimal","hexadecimalWithSign","hex2bin","hex2oct","decimalToBaseWithMinimumPadding","decimal","maxLength","baseAlphabet","regex","maxValFromBase","minValFromBase","decimalToRadixComplement","parsed","rand","random","randbetween","findNextOddNumber","ceiled","findNextEvenNumber","roundup","numberToRound","rounddown","intFunc","coercedNumberToRound","even","odd","ceilingmath","significance","ceiling","ceilingprecise","floormath","floorprecise","_CriterionFunctionCompute","AverageResult","conditionalAggregationFunctionCacheKey","conditions","conditionsStrings","conditionRange","mapToRawScalarValue","sumif","computeFn","computeConditionalAggregationFunction","sumifs","averageif","averageResult","countif","countifs","minifs","_this3","composeFunction","minResult","maxifs","_this4","maxResult","valuesRange","conditionArgs","reduceInitialValue","conditionArg","criterionPackage","Condition","CriterionFunctionCompute","compute","_generatorUtils","findSmallerRangeForMany","conditionRanges","restValuesRange","restConditionRanges","simpleValuesRange","valuesRangeVertex","tryToGetRangeVertexForRangeValue","conditionsVertices","fullCriterionString","cachedResult","findAlreadyComputedValueInCache","buildNewCriterionCache","evaluateRangeValue","reduceFunction","iterable","criterionLambdas","conditionsIterators","filteredValues","ifFilter","simpleConditionRanges","smallerCache","newCache","rcr","newCacheValue","conditionalIterables","computableIterable","computable","conditionalSplits","conditionalIterable","cs","conditionalFirsts","zip","conditionalFirst","criterionLambda","rest","arr1","arr2","done","sumproduct","iterators","coercedVal","concatenate","stringToSplit","indexToUse","splittedString","len","proper","word","clean","exact","rept","repeat","startPosition","numberOfChars","newText","search","normalizedPattern","normalizedText","substitute","oldText","occurrence","oldTextRegexp","shiftedText","acos","asin","cos","sin","tan","atan","atan2","cot","acot","sec","csc","sinh","asinh","cosh","acosh","tanh","atanh","coth","acoth","sech","csch","_RowSearchStrategy","rowSearch","RowSearchStrategy","vlookup","doVlookup","hlookup","doHlookup","doMatch","searchInRange","searchStrategy","searchedRange","colIndex","roman","romanMode","arabic","inputString","minusSign","work","eatToken","inputAcc","absorb","valAcc","gte","lte","minus","uminus","upercent","uplus","_bessel","_jstat","erf","upperBound","erfc","expondist","cumulative","exponential","cdf","pdf","fisher","fisherinv","gamma","gammafn","gammadist","alphaVal","betaVal","gammaln","gammainv","inv","gauss","z","normal","betadist","A","B","beta","betainv","binomialdist","succ","trials","prob","binomial","binomialinv","alpha","besselifn","besseli","besseljfn","besselj","besselkfn","besselk","besselyfn","bessely","chisqdist","deg","chisquare","chisqdistrt","chisqinv","p","chisqinvrt","fdist","deg1","deg2","centralF","fdistrt","finv","finvrt","weibulldist","shape","scale","weibull","poissondist","mean","poisson","hypgeomdist","numberS","populationS","numberPop","hypgeom","tdist","studentt","tdist2t","tdistrt","tdistold","tinv","tinv2t","lognormdist","stddev","lognormal","lognorminv","normdist","norminv","normsdist","normsinv","phi","negbinomdist","nf","ns","negbin","confidencenorm","normalci","confidencet","tci","standardize","NEGBINOMDIST","EXPONDIST","M","_horner","_bessel_iter","f0","f1","sign","tdx","f2","o","_bessel_wrap","bessel0","bessel1","nonzero","bessel","b0","b1","W","b0_a1a","b0_a2a","b0_a1b","b0_a2b","a1","a2","xx","b1_a1a","b1_a2a","b1_a1b","b1_a2b","jsum","bjp","bj","bjm","tox","b0_a","b0_b","b1_a","b1_b","bip","bi","bim","cof","isneg","dd","ty","erfcinv","pp","q","fact","xden","xnum","yi","lowRegGamma","gammapinv","ser","aln","ap","del","ITMAX","an","EPS","gln","lna1","afac","std","betafn","betaln","ibeta","ibetainv","lna","lnb","al","bt","betacf","fpmin","qab","qap","qam","m2","aa","k","combination","betacdf","eps","betinc","a0","m9","c9","combinationln","factorial","factorialln","dof","df1","df2","N","scaledPDF","samplesDone","scaledCDF","dof2","mu","sigma","r","sumsqerr","meanv","variance","flag","stdev","prod","geomean","covariance","arr1Len","sq_dev","corrcoeff","factdouble","combin","combina","gcd","processedArgs","binaryGCD","MAX_SAFE_INTEGER","lcm","binaryLCM","mround","multinomial","quotient","seriessum","coefs","coef","sumx2my2","rangeX","rangeY","valsX","valsY","valX","valY","sumx2py2","sumxmy2","complex","imabs","imaginary","_re","imreal","_im","imargument","imconjugate","imcos","imcosh","imcot","div","imcsc","imcsch","imsec","imsech","imsin","imsinh","imtan","imdiv","improduct","mul","imsum","imsub","sub","imexp","imln","imlog10","imlog2","impower","imsqrt","re1","im1","re2","im2","_ref10","_ref11","_ref12","nomRe","nomIm","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","avedev","avg","devsq","harmean","correl","dataX","dataY","parseTwoArrays","rsq","covariancep","covariances","ztest","ftest","arrX","arrY","vx","vy","steyx","slope","chisqtest","ttest","tails","sx","sy","skew","_this5","skewp","_this6","COVAR","xit","yit","xval","yval"],"mappings":"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C,EAAE;MAC5C,IAAI,CAACC,mBAAmB,CAACzvC,MAAM,CAACwvC,YAAY,CAAC;IACjD,CAAC,MACI;MACD,MAAM,IAAIp2D,kCAA0B,CAAC,CAAC;IAC1C;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOw2D,2BAA2BA,CAAA,EAAG;IACjC,OAAO1zC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACszC,mBAAmB,CAAClf,IAAI,CAAC,CAAC,CAAC;EACtD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOjzC,sBAAsBA,CAACuyD,MAAM,EAAElf,YAAY,EAAE;IAChDmf,kCAAgB,CAACxyD,sBAAsB,CAACuyD,MAAM,EAAElf,YAAY,CAAC;EACjE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOof,wBAAwBA,CAACF,MAAM,EAAE;IACpCC,kCAAgB,CAACC,wBAAwB,CAACF,MAAM,CAAC;EACrD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOG,gBAAgBA,CAACpqB,UAAU,EAAEiqB,MAAM,EAAElf,YAAY,EAAE;IACtD,IAAA0S,uCAAiB,EAACzd,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC;IACrDkqB,kCAAgB,CAACE,gBAAgB,CAACpqB,UAAU,EAAEiqB,MAAM,EAAElf,YAAY,CAAC;EACvE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOsf,kBAAkBA,CAACrqB,UAAU,EAAE;IAClC,IAAAyd,uCAAiB,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,CAACzyC,WAAW,CAAC;EAC5D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI0yC,iBAAiBA,CAAC1yC,WAAW,EAAE;IAC3B,IAAI,CAAC,IAAAna,yBAAmB,EAACma,WAAW,CAAC,EAAE;MACnC,MAAM,IAAIxlB,gCAAwB,CAAC,mBAAmB,EAAE,aAAa,CAAC;IAC1E;IACA,IAAI,CAAC+3D,8BAA8B,CAAC,CAAC;IACrC,OAAO,IAAI,CAACnC,cAAc,CAACsC,iBAAiB,CAAC1yC,WAAW,CAAC;EAC7D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI2yC,cAAcA,CAACp7C,OAAO,EAAE;IACpB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAACg7C,8BAA8B,CAAC,CAAC;IACrC,OAAO,IAAI,CAACnC,cAAc,CAACuC,cAAc,CAACp7C,OAAO,CAAC;EACtD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIq7C,gBAAgBA,CAACr7C,OAAO,EAAE;IACtB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,OAAO,IAAI,CAAC64C,cAAc,CAACwC,gBAAgB,CAACr7C,OAAO,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIs7C,kBAAkBA,CAACt7C,OAAO,EAAE;IACxB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAACg7C,8BAA8B,CAAC,CAAC;IACrC,OAAO,IAAI,CAACnC,cAAc,CAACyC,kBAAkB,CAACt7C,OAAO,CAAC;EAC1D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIu7C,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAAC1C,cAAc,CAAC2C,sBAAsB,CAAEruD,GAAG,IAAK,IAAI,CAACsuD,kBAAkB,CAACtuD,GAAG,CAAC,CAAC;EAC5F;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIsuD,kBAAkBA,CAACz7C,OAAO,EAAE;IACxB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,OAAO;MACHjY,KAAK,EAAE,IAAI,CAACkL,eAAe,CAACkC,aAAa,CAAC6K,OAAO,CAAC;MAClDhY,MAAM,EAAE,IAAI,CAACiL,eAAe,CAAC4B,cAAc,CAACmL,OAAO;IACvD,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI07C,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACV,8BAA8B,CAAC,CAAC;IACrC,OAAO,IAAI,CAACnC,cAAc,CAAC6C,kBAAkB,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,oBAAoBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAAC9C,cAAc,CAAC8C,oBAAoB,CAAC,CAAC;EACrD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,sBAAsBA,CAAA,EAAG;IACrB,IAAI,CAACZ,8BAA8B,CAAC,CAAC;IACrC,OAAO,IAAI,CAACnC,cAAc,CAAC+C,sBAAsB,CAAC,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAYA,CAACC,SAAS,EAAE;IACpB,MAAMC,kBAAkB,GAAG51D,MAAM,CAAC6oC,OAAO,CAAC8sB,SAAS,CAAC,CAAC/a,KAAK,CAACtmC,IAAA;MAAA,IAAC,CAACnU,GAAG,EAAEmG,KAAK,CAAC,GAAAgO,IAAA;MAAA,OAAK,IAAI,CAAC09C,OAAO,CAAC7xD,GAAG,CAAC,KAAKmG,KAAK;IAAA,EAAC;IACzG,IAAIsvD,kBAAkB,EAAE;MACpB;IACJ;IACA,IAAI,CAACC,iBAAiB,CAACF,SAAS,CAAC;EACrC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIlQ,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACuM,OAAO,CAACvM,SAAS,CAAC,CAAC;EACnC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIqQ,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAACD,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAC9B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC9D,MAAM,CAAC/pB,QAAQ,CAAC,CAAC;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI8tB,IAAIA,CAAA,EAAG;IACH,IAAI,CAACzD,eAAe,CAACyD,IAAI,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACC,iCAAiC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,IAAIA,CAAA,EAAG;IACH,IAAI,CAAC3D,eAAe,CAAC2D,IAAI,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACD,iCAAiC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAAC5D,eAAe,CAAC4D,sBAAsB,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAAC7D,eAAe,CAAC6D,sBAAsB,CAAC,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,6BAA6BA,CAACjsD,OAAO,EAAE;IACnC,IAAIpG,KAAK;IACT,IAAI,IAAAmE,yBAAmB,EAACiC,OAAO,CAAC,EAAE;MAC9BpG,KAAK,GAAG,IAAIC,oCAAiB,CAACmG,OAAO,EAAEA,OAAO,CAAC;IACnD,CAAC,MACI,IAAI,IAAAlC,oCAAiB,EAACkC,OAAO,CAAC,EAAE;MACjCpG,KAAK,GAAG,IAAIC,oCAAiB,CAACmG,OAAO,CAAChC,KAAK,EAAEgC,OAAO,CAAC/B,GAAG,CAAC;IAC7D,CAAC,MACI;MACD,MAAM,IAAIvL,gCAAwB,CAAC,qCAAqC,EAAE,SAAS,CAAC;IACxF;IACA,IAAI;MACA,IAAI,CAACy1D,eAAe,CAAC+D,uBAAuB,CAACtyD,KAAK,CAAC;MACnD,KAAK,MAAMuyD,EAAE,IAAIvyD,KAAK,CAACqJ,SAAS,CAAC,IAAI,CAACS,gBAAgB,CAAC,EAAE;QACrD,IAAI,CAACykD,eAAe,CAACiE,iCAAiC,CAACD,EAAE,CAAC;MAC9D;IACJ,CAAC,CACD,OAAOxpC,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI0pC,eAAeA,CAACC,oBAAoB,EAAEC,YAAY,EAAE;IAChD,IAAI,CAACpE,eAAe,CAACkE,eAAe,CAACC,oBAAoB,EAAEC,YAAY,CAAC;IACxE,OAAO,IAAI,CAACV,iCAAiC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIW,cAAcA,CAAC/8C,OAAO,EAAEq7B,UAAU,EAAE;IAChC,IAAAkS,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAAC04C,eAAe,CAACsE,WAAW,CAACh9C,OAAO,EAAEq7B,UAAU,CAAC;IACrD,OAAO,IAAI,CAAC+gB,iCAAiC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIa,4BAA4BA,CAACj9C,OAAO,EAAEq7B,UAAU,EAAE;IAC9C,IAAAkS,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI;MACA,IAAI,CAAC04C,eAAe,CAACwE,sBAAsB,CAACl9C,OAAO,EAAEq7B,UAAU,CAAC;MAChE,IAAI,CAACqd,eAAe,CAACyE,qBAAqB,CAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIsE,gBAAgBA,CAAA,EAAG;IACf,OAAO,IAAI,CAAChI,eAAe,CAACgI,gBAAgB,CAAC,CAAC;EAClD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,cAAcA,CAAA,EAAG;IACb,IAAI,CAACjI,eAAe,CAACiI,cAAc,CAAC,CAAC;EACzC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,cAAcA,CAAA,EAAG;IACb,IAAI,CAAClI,eAAe,CAACmI,QAAQ,CAACD,cAAc,CAAC,CAAC;EAClD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,cAAcA,CAAA,EAAG;IACb,IAAI,CAACpI,eAAe,CAACmI,QAAQ,CAACC,cAAc,CAAC,CAAC;EAClD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIR,cAAcA,CAACh3C,MAAM,EAAE;IACnB,IAAI,CAAC,IAAAjb,oCAAiB,EAACib,MAAM,CAAC,EAAE;MAC5B,MAAM,IAAIrmB,gCAAwB,CAAC,iBAAiB,EAAE,QAAQ,CAAC;IACnE;IACA,MAAM89D,SAAS,GAAG,IAAI32D,oCAAiB,CAACkf,MAAM,CAAC/a,KAAK,EAAE+a,MAAM,CAAC9a,GAAG,CAAC;IACjE,OAAOuyD,SAAS,CAACvuD,uBAAuB,CAAC,CAAC,CAAC5H,GAAG,CAAEo2D,QAAQ,IAAKA,QAAQ,CAACp2D,GAAG,CAAE2F,OAAO,IAAK,IAAI,CAACuU,YAAY,CAACvU,OAAO,CAAC,CAAC,CAAC;EACvH;EACA;AACJ;AACA;A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K;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIzR,WAAWA,CAACzB,OAAO,EAAE;IACjB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,MAAM0oB,WAAW,GAAG,IAAI,CAAC3uB,YAAY,CAACo/B,cAAc,CAACn5B,OAAO,CAAC;IAC7D,IAAI,CAAC04C,eAAe,CAACj3C,WAAW,CAACzB,OAAO,CAAC;IACzC,MAAM5F,OAAO,GAAG,IAAI,CAACgiD,iCAAiC,CAAC,CAAC;IACxD,IAAI,CAACrD,QAAQ,CAAC2I,IAAI,CAACC,eAAM,CAACI,YAAY,EAAEr5B,WAAW,EAAEtuB,OAAO,CAAC;IAC7D,OAAOA,OAAO;EAClB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI4nD,wBAAwBA,CAAChiD,OAAO,EAAE;IAC9B,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI;MACA,IAAI,CAAC04C,eAAe,CAACoJ,oBAAoB,CAAC9hD,OAAO,CAAC;MAClD,OAAO,IAAI;IACf,CAAC,CACD,OAAOkT,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIvR,UAAUA,CAAC3B,OAAO,EAAE;IAChB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAAC04C,eAAe,CAAC/2C,UAAU,CAAC3B,OAAO,CAAC;IACxC,OAAO,IAAI,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AM,KAAKtN,SAAS,EAAE;MACtB,OAAO,EAAE;IACb;IACA,OAAO,IAAI,CAAC6L,gBAAgB,CAACsG,wBAAwB,CAAC7E,MAAM,CAAC;EACjE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI4sD,YAAYA,CAACtiD,OAAO,EAAE;IAClB,IAAAutC,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,OAAO,IAAI,CAACjG,YAAY,CAACo/B,cAAc,CAACn5B,OAAO,CAAC;EACpD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIuiD,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACxoD,YAAY,CAAC8/B,UAAU,CAAC,CAAC;EACzC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIx0B,UAAUA,CAACC,SAAS,EAAE;IAClB,IAAAioC,uCAAiB,EAACjoC,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC;IACnD,OAAO,IAAI,CAACvL,YAAY,CAAC/T,GAAG,CAACsf,SAAS,CAAC;EAC3C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIk9C,cAAcA,CAACl9C,SAAS,EAAE;IACtB,IAAAioC,uCAAiB,EAACjoC,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC;IACnD,OAAO,IAAI,CAACvL,YAAY,CAACw/B,gBAAgB,CAACj0B,SAAS,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7P,WAAWA,CAACgT,WAAW,EAAE;IACrB,IAAI,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;IAChC,IAAI,CAACF,QAAQ,CAAC2I,IAAI,CAACC,eAAM,CAAC+B,mBAAmB,CAAC;EAClD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACID,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAACxK,oBAAoB,GAAG,KAAK;IACjC,MAAM7+C,OAAO,GAAG,IAAI,CAACgiD,iCAAiC,CAAC,CAAC;IACxD,IAAI,CAACrD,QAAQ,CAAC2I,IAAI,CAACC,eAAM,CAACgC,iBAAiB,EAAEvpD,OAAO,CAAC;IACrD,OAAOA,OAAO;EAClB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIwpD,qBAAqBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAAC3K,oBAAoB;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI4K,gCAAgCA,CAAC9jD,cAAc,EAAEpT,UAAU,EAAEm3D,KAAK,EAAE;IAChE,IAAAvW,uCAAiB,EAACxtC,cAAc,EAAE,QAAQ,EAAE,gBAAgB,CAAC;IAC7D,IAAI+jD,KAAK,KAAK17D,SAAS,EAAE;MACrB,IAAAmlD,uCAAiB,EAACuW,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC/C;IACA,IAAI;MACA,IAAI,CAACpL,eAAe,CAACqL,sCAAsC,CAAChkD,cAAc,EAAEpT,UAAU,EAAEm3D,KAAK,CAAC;MAC9F,OAAO,IAAI;IACf,CAAC,CACD,OAAO5wC,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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IACf;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI2qD,oBAAoBA,CAACjB,KAAK,EAAE;IACxB,IAAIA,KAAK,KAAK17D,SAAS,EAAE;MACrB,IAAAmlD,uCAAiB,EAACuW,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC/C;IACA,IAAI,CAACpL,eAAe,CAACoJ,oBAAoB,CAACgC,KAAK,CAAC;IAChD,OAAO,IAAI,CAAClL,iBAAiB,CAACoM,kCAAkC,CAAClB,KAAK,CAAC;EAC3E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACImB,gCAAgCA,CAAA,EAAG;IAC/B,OAAO,IAAI,CAACpM,cAAc,CAACoM,gCAAgC,CAAC,CAAC;EACjE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,gBAAgBA,CAACC,aAAa,EAAE;IAC5B,IAAA5X,uCAAiB,EAAC4X,aAAa,EAAE,QAAQ,EAAE,eAAe,CAAC;IAC3D,MAAM;MAAE77D,GAAG;MAAEiH;IAAQ,CAAC,GAAG,IAAI,CAAC60D,uBAAuB,CAACD,aAAa,CAAC;IACpE,IAAI77D,GAAG,KAAKlB,SAAS,EAAE;MACnB,MAAM,IAAIpE,wBAAgB,CAAC,CAAC;IAChC;IACA,OAAO,IAAI,CAACs0D,SAAS,CAAC3nC,OAAO,CAACrnB,GAAG,EAAEiH,OAAO,CAAC;EAC/C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI80D,gBAAgBA,CAACF,aAAa,EAAEnlD,OAAO,EAAE;IACrC,IAAAutC,uCAAiB,EAAC4X,aAAa,EAAE,QAAQ,EAAE,eAAe,CAAC;IAC3D,IAAA5X,uCAAiB,EAACvtC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAAC04C,eAAe,CAACoJ,oBAAoB,CAAC9hD,OAAO,CAAC;IAClD,MAAM;MAAE1W,GAAG;MAAEiH,OAAO;MAAEsK;IAAa,CAAC,GAAG,IAAI,CAACuqD,uBAAuB,CAACD,aAAa,EAAEnlD,OAAO,CAAC;IAC3F,IAAI1W,GAAG,KAAKlB,SAAS,EAAE;MACnB,MAAM,IAAIpE,wBAAgB,CAAC,CAAC;IAChC;IACA,MAAMshE,iBAAiB,GAAG,IAAI,CAACpM,SAAS,CAACqM,YAAY,CAACj8D,GAAG,EAAEiH,OAAO,EAAEsK,YAAY,CAAC;IACjF,OAAO,IAAI,CAAC89C,SAAS,CAAC6M,mBAAmB,CAACF,iBAAiB,CAAC;EAChE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,eAAeA,CAACN,aAAa,EAAE;IAC3B,IAAA5X,uCAAiB,EAAC4X,aAAa,EAAE,QAAQ,EAAE,eAAe,CAAC;IAC3D,MAAM;MAAE77D;IAAI,CAAC,GAAG,IAAI,CAAC87D,uBAAuB,CAACD,aAAa,CAAC;IAC3D,IAAI77D,GAAG,KAAKlB,SAAS,EAAE;MACnB,OAAO,KAAK;IAChB;IACA,IAAIkB,GAAG,CAACM,IAAI,KAAKC,oBAAW,CAAC4M,KAAK,IAAI,CAACnN,GAAG,CAACd,KAAK,EAAE;MAC9C,OAAO,KAAK,CAAC,CAAC;IAClB;;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI8xD,0BAA0BA,CAAA,EAAG;IACzB,MAAMtzD,QAAQ,GAAGpC,YAAY,CAACymD,WAAW,CAAC,IAAI,CAAC8M,OAAO,CAACnxD,QAAQ,CAAC;IAChE,OAAOA,QAAQ,CAAC2zC,uBAAuB,CAAC,IAAI,CAACme,iBAAiB,CAACyB,wBAAwB,CAAC,CAAC,CAAC;EAC9F;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,iBAAiBA,CAAC1qB,UAAU,EAAE;IAC1B,IAAAyd,uCAAiB,EAACzd,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC;IACrD,OAAO,IAAI,CAACgpB,iBAAiB,CAAC0B,iBAAiB,CAAC1qB,UAAU,CAAC;EAC/D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI2qB,qBAAqBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAAC3B,iBAAiB,CAAC4B,UAAU,CAAC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIgL,gBAAgBA,CAACC,WAAW,EAAE;IAC1B,IAAApY,uCAAiB,EAACoY,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC;IAC/C,OAAO,IAAI,CAACnN,UAAU,CAACnc,WAAW,CAACgC,cAAc,CAACkT,sBAAsB,CAACoU,WAAW,CAAC;EACzF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAYA,CAACD,WAAW,EAAE;IACtB,IAAApY,uCAAiB,EAACoY,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC;IAC/C,OAAO,IAAI,CAACnN,UAAU,CAACnc,WAAW,CAACgC,cAAc,CAACkS,kBAAkB,CAACoV,WAAW,CAAC;EACrF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,YAAYA,CAACF,WAAW,EAAE;IACtB,IAAApY,uCAA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","file":"hyperformula.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chevrotain\"), require(\"unorm\"), require(\"tiny-emitter\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"HyperFormula\", [\"chevrotain\", \"unorm\", \"tiny-emitter\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HyperFormula\"] = factory(require(\"chevrotain\"), require(\"unorm\"), require(\"tiny-emitter\"));\n\telse\n\t\troot[\"HyperFormula\"] = factory(root[\"chevrotain\"], root[\"unorm\"], root[\"TinyEmitter\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__85__, __WEBPACK_EXTERNAL_MODULE__125__, __WEBPACK_EXTERNAL_MODULE__172__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from './ArraySize';\r\nimport { CellError, CellType, CellValueDetailedType, CellValueType, ErrorType } from './Cell';\r\nimport { DetailedCellError } from './CellValue';\r\nimport { Config } from './Config';\r\nimport { AlwaysDense, AlwaysSparse, DenseSparseChooseBasedOnThreshold } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\r\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError, UnableToParseError } from './errors';\r\nimport { ExportedCellChange, ExportedNamedExpressionChange } from './Exporter';\r\nimport { HyperFormula } from './HyperFormula';\r\nimport enGB from './i18n/languages/enGB';\r\nimport { FunctionPlugin, FunctionArgumentType } from './interpreter';\r\nimport * as plugins from './interpreter/plugin';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\n/**\r\n * Aggregate class for default export\r\n */\r\nclass HyperFormulaNS extends HyperFormula {\r\n}\r\nHyperFormulaNS.HyperFormula = HyperFormula;\r\nHyperFormulaNS.ErrorType = ErrorType;\r\nHyperFormulaNS.CellError = CellError;\r\nHyperFormulaNS.CellType = CellType;\r\nHyperFormulaNS.CellValueType = CellValueType;\r\nHyperFormulaNS.CellValueDetailedType = CellValueDetailedType;\r\nHyperFormulaNS.DetailedCellError = DetailedCellError;\r\nHyperFormulaNS.ExportedCellChange = ExportedCellChange;\r\nHyperFormulaNS.ExportedNamedExpressionChange = ExportedNamedExpressionChange;\r\nHyperFormulaNS.ConfigValueTooBigError = ConfigValueTooBigError;\r\nHyperFormulaNS.ConfigValueTooSmallError = ConfigValueTooSmallError;\r\nHyperFormulaNS.EvaluationSuspendedError = EvaluationSuspendedError;\r\nHyperFormulaNS.ExpectedOneOfValuesError = ExpectedOneOfValuesError;\r\nHyperFormulaNS.ExpectedValueOfTypeError = ExpectedValueOfTypeError;\r\nHyperFormulaNS.ArraySize = ArraySize;\r\nHyperFormulaNS.SimpleRangeValue = SimpleRangeValue;\r\nHyperFormulaNS.FunctionPlugin = FunctionPlugin;\r\nHyperFormulaNS.FunctionArgumentType = FunctionArgumentType;\r\nHyperFormulaNS.FunctionPluginValidationError = FunctionPluginValidationError;\r\nHyperFormulaNS.InvalidAddressError = InvalidAddressError;\r\nHyperFormulaNS.InvalidArgumentsError = InvalidArgumentsError;\r\nHyperFormulaNS.LanguageNotRegisteredError = LanguageNotRegisteredError;\r\nHyperFormulaNS.LanguageAlreadyRegisteredError = LanguageAlreadyRegisteredError;\r\nHyperFormulaNS.MissingTranslationError = MissingTranslationError;\r\nHyperFormulaNS.NamedExpressionDoesNotExistError = NamedExpressionDoesNotExistError;\r\nHyperFormulaNS.NamedExpressionNameIsAlreadyTakenError = NamedExpressionNameIsAlreadyTakenError;\r\nHyperFormulaNS.NamedExpressionNameIsInvalidError = NamedExpressionNameIsInvalidError;\r\nHyperFormulaNS.NoOperationToRedoError = NoOperationToRedoError;\r\nHyperFormulaNS.NoOperationToUndoError = NoOperationToUndoError;\r\nHyperFormulaNS.NoRelativeAddressesAllowedError = NoRelativeAddressesAllowedError;\r\nHyperFormulaNS.NoSheetWithIdError = NoSheetWithIdError;\r\nHyperFormulaNS.NoSheetWithNameError = NoSheetWithNameError;\r\nHyperFormulaNS.NotAFormulaError = NotAFormulaError;\r\nHyperFormulaNS.NothingToPasteError = NothingToPasteError;\r\nHyperFormulaNS.ProtectedFunctionTranslationError = ProtectedFunctionTranslationError;\r\nHyperFormulaNS.SheetNameAlreadyTakenError = SheetNameAlreadyTakenError;\r\nHyperFormulaNS.SheetSizeLimitExceededError = SheetSizeLimitExceededError;\r\nHyperFormulaNS.SourceLocationHasArrayError = SourceLocationHasArrayError;\r\nHyperFormulaNS.TargetLocationHasArrayError = TargetLocationHasArrayError;\r\nHyperFormulaNS.UnableToParseError = UnableToParseError;\r\nconst defaultLanguage = Config.defaultConfig.language;\r\nHyperFormula.registerLanguage(defaultLanguage, enGB);\r\nHyperFormula.languages[enGB.langCode] = enGB;\r\nfor (const pluginName of Object.getOwnPropertyNames(plugins)) {\r\n    if (!pluginName.startsWith('_')) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        HyperFormula.registerFunctionPlugin(plugins[pluginName]);\r\n    }\r\n}\r\nexport default HyperFormulaNS;\r\nexport { AlwaysDense, AlwaysSparse, DenseSparseChooseBasedOnThreshold, HyperFormula, CellType, CellValueType, CellValueDetailedType, ErrorType, ExportedCellChange, ExportedNamedExpressionChange, DetailedCellError, CellError, ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, ArraySize, FunctionPlugin, FunctionArgumentType, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SimpleRangeValue, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError, UnableToParseError, };\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { InterpreterState } from './interpreter/InterpreterState';\r\nimport { FunctionArgumentType } from './interpreter/plugin/FunctionPlugin';\r\nimport { AstNodeType } from './parser';\r\nexport class ArraySize {\r\n    constructor(width, height, isRef = false) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.isRef = isRef;\r\n        if (width <= 0 || height <= 0) {\r\n            throw Error('Incorrect array size');\r\n        }\r\n    }\r\n    static fromArray(array) {\r\n        return new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\r\n    }\r\n    static error() {\r\n        return new ArraySize(1, 1, true);\r\n    }\r\n    static scalar() {\r\n        return new ArraySize(1, 1, false);\r\n    }\r\n    isScalar() {\r\n        return (this.width <= 1 && this.height <= 1) || this.isRef;\r\n    }\r\n}\r\nfunction arraySizeForBinaryOp(leftArraySize, rightArraySize) {\r\n    return new ArraySize(Math.max(leftArraySize.width, rightArraySize.width), Math.max(leftArraySize.height, rightArraySize.height));\r\n}\r\nfunction arraySizeForUnaryOp(arraySize) {\r\n    return new ArraySize(arraySize.width, arraySize.height);\r\n}\r\nexport class ArraySizePredictor {\r\n    constructor(config, functionRegistry) {\r\n        this.config = config;\r\n        this.functionRegistry = functionRegistry;\r\n    }\r\n    checkArraySize(ast, formulaAddress) {\r\n        return this.checkArraySizeForAst(ast, { formulaAddress, arraysFlag: this.config.useArrayArithmetic });\r\n    }\r\n    checkArraySizeForAst(ast, state) {\r\n        switch (ast.type) {\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                return this.checkArraySizeForFunction(ast, state);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                const range = AbsoluteCellRange.fromAstOrUndef(ast, state.formulaAddress);\r\n                if (range === undefined) {\r\n                    return ArraySize.error();\r\n                }\r\n                else {\r\n                    return new ArraySize(range.width(), range.height(), true);\r\n                }\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const heights = [];\r\n                const widths = [];\r\n                for (const row of ast.args) {\r\n                    const sizes = row.map(ast => this.checkArraySizeForAst(ast, state));\r\n                    const h = Math.min(...sizes.map(size => size.height));\r\n                    const w = sizes.reduce((total, size) => total + size.width, 0);\r\n                    heights.push(h);\r\n                    widths.push(w);\r\n                }\r\n                const height = heights.reduce((total, h) => total + h, 0);\r\n                const width = Math.min(...widths);\r\n                return new ArraySize(width, height);\r\n            }\r\n            case AstNodeType.STRING:\r\n            case AstNodeType.NUMBER:\r\n                return ArraySize.scalar();\r\n            case AstNodeType.CELL_REFERENCE:\r\n                return new ArraySize(1, 1, true);\r\n            case AstNodeType.DIV_OP:\r\n            case AstNodeType.CONCATENATE_OP:\r\n            case AstNodeType.EQUALS_OP:\r\n            case AstNodeType.GREATER_THAN_OP:\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.LESS_THAN_OP:\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.MINUS_OP:\r\n            case AstNodeType.NOT_EQUAL_OP:\r\n            case AstNodeType.PLUS_OP:\r\n            case AstNodeType.POWER_OP:\r\n            case AstNodeType.TIMES_OP: {\r\n                const left = this.checkArraySizeForAst(ast.left, state);\r\n                const right = this.checkArraySizeForAst(ast.right, state);\r\n                if (!state.arraysFlag && (left.height > 1 || left.width > 1 || right.height > 1 || right.width > 1)) {\r\n                    return ArraySize.error();\r\n                }\r\n                return arraySizeForBinaryOp(left, right);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP:\r\n            case AstNodeType.PLUS_UNARY_OP:\r\n            case AstNodeType.PERCENT_OP: {\r\n                const val = this.checkArraySizeForAst(ast.value, state);\r\n                if (!state.arraysFlag && (val.height > 1 || val.width > 1)) {\r\n                    return ArraySize.error();\r\n                }\r\n                return arraySizeForUnaryOp(val);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return this.checkArraySizeForAst(ast.expression, state);\r\n            }\r\n            case AstNodeType.EMPTY:\r\n                return ArraySize.error();\r\n            default:\r\n                return ArraySize.error();\r\n        }\r\n    }\r\n    checkArraySizeForFunction(ast, state) {\r\n        const metadata = this.functionRegistry.getMetadata(ast.procedureName);\r\n        const pluginArraySizeFunction = this.functionRegistry.getArraySizeFunction(ast.procedureName);\r\n        if (pluginArraySizeFunction !== undefined) {\r\n            return pluginArraySizeFunction(ast, state);\r\n        }\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.checkArraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        if (metadata === undefined || metadata.expandRanges || !state.arraysFlag || metadata.vectorizationForbidden || metadata.parameters === undefined) {\r\n            return new ArraySize(1, 1);\r\n        }\r\n        const argumentDefinitions = [...metadata.parameters];\r\n        if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < subChecks.length) {\r\n            return ArraySize.error();\r\n        }\r\n        if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < subChecks.length &&\r\n            (subChecks.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\r\n            return ArraySize.error();\r\n        }\r\n        while (argumentDefinitions.length < subChecks.length) {\r\n            argumentDefinitions.push(...argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs));\r\n        }\r\n        let maxWidth = 1;\r\n        let maxHeight = 1;\r\n        for (let i = 0; i < subChecks.length; i++) {\r\n            if (argumentDefinitions[i].argumentType !== FunctionArgumentType.RANGE && argumentDefinitions[i].argumentType !== FunctionArgumentType.ANY) {\r\n                maxHeight = Math.max(maxHeight, subChecks[i].height);\r\n                maxWidth = Math.max(maxWidth, subChecks[i].width);\r\n            }\r\n        }\r\n        return new ArraySize(maxWidth, maxHeight);\r\n    }\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || this || Function('return this')();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.30.2',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","module.exports = false;\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { equalSimpleCellAddress, isSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { SheetsNotEqual } from './errors';\r\nimport { AstNodeType } from './parser';\r\nimport { RowsSpan } from './Span';\r\nexport const WRONG_RANGE_SIZE = 'AbsoluteCellRange: Wrong range size';\r\nexport function isSimpleCellRange(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'start' in obj && isSimpleCellAddress(obj.start) && 'end' in obj && isSimpleCellAddress(obj.end);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const simpleCellRange = (start, end) => ({ start, end });\r\nexport class AbsoluteCellRange {\r\n    constructor(start, end) {\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        this.start = simpleCellAddress(start.sheet, start.col, start.row);\r\n        this.end = simpleCellAddress(end.sheet, end.col, end.row);\r\n    }\r\n    get sheet() {\r\n        return this.start.sheet;\r\n    }\r\n    static fromSimpleCellAddresses(start, end) {\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        const width = end.col - start.col;\r\n        const height = end.row - start.row;\r\n        if (Number.isFinite(height) && Number.isFinite(width)) {\r\n            return new AbsoluteCellRange(start, end);\r\n        }\r\n        if (Number.isFinite(height)) {\r\n            return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n        }\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n    static fromAst(ast, baseAddress) {\r\n        if (ast.type === AstNodeType.CELL_RANGE) {\r\n            return AbsoluteCellRange.fromCellRange(ast, baseAddress);\r\n        }\r\n        else if (ast.type === AstNodeType.COLUMN_RANGE) {\r\n            return AbsoluteColumnRange.fromColumnRange(ast, baseAddress);\r\n        }\r\n        else {\r\n            return AbsoluteRowRange.fromRowRangeAst(ast, baseAddress);\r\n        }\r\n    }\r\n    static fromAstOrUndef(ast, baseAddress) {\r\n        try {\r\n            return AbsoluteCellRange.fromAst(ast, baseAddress);\r\n        }\r\n        catch (_e) {\r\n            return undefined;\r\n        }\r\n    }\r\n    static fromCellRange(x, baseAddress) {\r\n        return new AbsoluteCellRange(x.start.toSimpleCellAddress(baseAddress), x.end.toSimpleCellAddress(baseAddress));\r\n    }\r\n    static spanFrom(topLeftCorner, width, height) {\r\n        const ret = AbsoluteCellRange.spanFromOrUndef(topLeftCorner, width, height);\r\n        if (ret === undefined) {\r\n            throw new Error(WRONG_RANGE_SIZE);\r\n        }\r\n        return ret;\r\n    }\r\n    static spanFromOrUndef(topLeftCorner, width, height) {\r\n        if (!Number.isFinite(width) && Number.isFinite(height)) {\r\n            if (topLeftCorner.col !== 0) {\r\n                return undefined;\r\n            }\r\n            return new AbsoluteRowRange(topLeftCorner.sheet, topLeftCorner.row, topLeftCorner.row + height - 1);\r\n        }\r\n        else if (!Number.isFinite(height) && Number.isFinite(width)) {\r\n            if (topLeftCorner.row !== 0) {\r\n                return undefined;\r\n            }\r\n            return new AbsoluteColumnRange(topLeftCorner.sheet, topLeftCorner.col, topLeftCorner.col + width - 1);\r\n        }\r\n        else if (Number.isFinite(height) && Number.isFinite(width)) {\r\n            return new AbsoluteCellRange(topLeftCorner, simpleCellAddress(topLeftCorner.sheet, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1));\r\n        }\r\n        return undefined;\r\n    }\r\n    static fromCoordinates(sheet, x1, y1, x2, y2) {\r\n        return new AbsoluteCellRange(simpleCellAddress(sheet, x1, y1), simpleCellAddress(sheet, x2, y2));\r\n    }\r\n    isFinite() {\r\n        return Number.isFinite(this.size());\r\n    }\r\n    doesOverlap(other) {\r\n        if (this.start.sheet != other.start.sheet) {\r\n            return false;\r\n        }\r\n        if (this.end.row < other.start.row || this.start.row > other.end.row) {\r\n            return false;\r\n        }\r\n        if (this.end.col < other.start.col || this.start.col > other.end.col) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    addressInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.row <= address.row\r\n            && this.end.row >= address.row\r\n            && this.start.col <= address.col\r\n            && this.end.col >= address.col;\r\n    }\r\n    columnInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.col <= address.col && this.end.col >= address.col;\r\n    }\r\n    rowInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.row <= address.row && this.end.row >= address.row;\r\n    }\r\n    containsRange(range) {\r\n        return this.addressInRange(range.start) && this.addressInRange(range.end);\r\n    }\r\n    intersectionWith(other) {\r\n        if (this.sheet !== other.start.sheet) {\r\n            return undefined;\r\n        }\r\n        const startRow = Math.max(this.start.row, other.start.row);\r\n        const endRow = Math.min(this.end.row, other.end.row);\r\n        const startCol = Math.max(this.start.col, other.start.col);\r\n        const endCol = Math.min(this.end.col, other.end.col);\r\n        if (startRow > endRow || startCol > endCol) {\r\n            return undefined;\r\n        }\r\n        return new AbsoluteCellRange(simpleCellAddress(this.sheet, startCol, startRow), simpleCellAddress(this.sheet, endCol, endRow));\r\n    }\r\n    includesRow(row) {\r\n        return this.start.row < row && this.end.row >= row;\r\n    }\r\n    includesColumn(column) {\r\n        return this.start.col < column && this.end.col >= column;\r\n    }\r\n    shiftByRows(numberOfRows) {\r\n        this.start.row += numberOfRows;\r\n        this.end.row += numberOfRows;\r\n    }\r\n    expandByRows(numberOfRows) {\r\n        this.end.row += numberOfRows;\r\n    }\r\n    shiftByColumns(numberOfColumns) {\r\n        this.start.col += numberOfColumns;\r\n        this.end.col += numberOfColumns;\r\n    }\r\n    shifted(byCols, byRows) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col + byCols, this.start.row + byRows), this.width(), this.height());\r\n    }\r\n    expandByColumns(numberOfColumns) {\r\n        this.end.col += numberOfColumns;\r\n    }\r\n    moveToSheet(toSheet) {\r\n        this.start.sheet = toSheet;\r\n        this.end.sheet = toSheet;\r\n    }\r\n    removeSpan(span) {\r\n        if (span instanceof RowsSpan) {\r\n            this.removeRows(span.start, span.end);\r\n        }\r\n        else {\r\n            this.removeColumns(span.start, span.end);\r\n        }\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.width() <= 0 || this.height() <= 0;\r\n    }\r\n    rangeWithSameWidth(startRow, numberOfRows) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col, startRow), this.width(), numberOfRows);\r\n    }\r\n    rangeWithSameHeight(startColumn, numberOfColumns) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, startColumn, this.start.row), numberOfColumns, this.height());\r\n    }\r\n    toString() {\r\n        return `${this.start.sheet},${this.start.col},${this.start.row},${this.end.col},${this.end.row}`;\r\n    }\r\n    width() {\r\n        return this.end.col - this.start.col + 1;\r\n    }\r\n    height() {\r\n        return this.end.row - this.start.row + 1;\r\n    }\r\n    size() {\r\n        return this.height() * this.width();\r\n    }\r\n    arrayOfAddressesInRange() {\r\n        const result = [];\r\n        for (let y = 0; y < this.height(); ++y) {\r\n            result[y] = [];\r\n            for (let x = 0; x < this.width(); ++x) {\r\n                const value = simpleCellAddress(this.sheet, this.start.col + x, this.start.row + y);\r\n                result[y].push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    withStart(newStart) {\r\n        return new AbsoluteCellRange(newStart, this.end);\r\n    }\r\n    sameDimensionsAs(other) {\r\n        return this.width() === other.width() && this.height() === other.height();\r\n    }\r\n    sameAs(other) {\r\n        return equalSimpleCellAddress(this.start, other.start) && equalSimpleCellAddress(this.end, other.end);\r\n    }\r\n    addressesArrayMap(dependencyGraph, op) {\r\n        const ret = [];\r\n        let currentRow = this.start.row;\r\n        while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n            let currentColumn = this.start.col;\r\n            const tmp = [];\r\n            while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                tmp.push(op(simpleCellAddress(this.start.sheet, currentColumn, currentRow)));\r\n                currentColumn++;\r\n            }\r\n            ret.push(tmp);\r\n            currentRow++;\r\n        }\r\n        return ret;\r\n    }\r\n    addresses(dependencyGraph) {\r\n        const ret = [];\r\n        let currentRow = this.start.row;\r\n        const limitRow = this.effectiveEndRow(dependencyGraph);\r\n        const limitColumn = this.effectiveEndColumn(dependencyGraph);\r\n        while (currentRow <= limitRow) {\r\n            let currentColumn = this.start.col;\r\n            while (currentColumn <= limitColumn) {\r\n                ret.push(simpleCellAddress(this.start.sheet, currentColumn, currentRow));\r\n                currentColumn++;\r\n            }\r\n            currentRow++;\r\n        }\r\n        return ret;\r\n    }\r\n    *addressesWithDirection(right, bottom, dependencyGraph) {\r\n        if (right > 0) {\r\n            if (bottom > 0) {\r\n                let currentRow = this.effectiveEndRow(dependencyGraph);\r\n                while (currentRow >= this.start.row) {\r\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\r\n                    while (currentColumn >= this.start.col) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn -= 1;\r\n                    }\r\n                    currentRow -= 1;\r\n                }\r\n            }\r\n            else {\r\n                let currentRow = this.start.row;\r\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\r\n                    while (currentColumn >= this.start.col) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn -= 1;\r\n                    }\r\n                    currentRow += 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (bottom > 0) {\r\n                let currentRow = this.effectiveEndRow(dependencyGraph);\r\n                while (currentRow >= this.start.row) {\r\n                    let currentColumn = this.start.col;\r\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn += 1;\r\n                    }\r\n                    currentRow -= 1;\r\n                }\r\n            }\r\n            else {\r\n                let currentRow = this.start.row;\r\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n                    let currentColumn = this.start.col;\r\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn += 1;\r\n                    }\r\n                    currentRow += 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAddress(col, row) {\r\n        if (col < 0 || row < 0 || row > this.height() - 1 || col > this.width() - 1) {\r\n            throw Error('Index out of bound');\r\n        }\r\n        return simpleCellAddress(this.start.sheet, this.start.col + col, this.start.row + row);\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\r\n        return this.end.col >= maxColumns || this.end.row >= maxRows;\r\n    }\r\n    effectiveEndColumn(_dependencyGraph) {\r\n        return this.end.col;\r\n    }\r\n    effectiveEndRow(_dependencyGraph) {\r\n        return this.end.row;\r\n    }\r\n    effectiveWidth(_dependencyGraph) {\r\n        return this.width();\r\n    }\r\n    effectiveHeight(_dependencyGraph) {\r\n        return this.height();\r\n    }\r\n    removeRows(rowStart, rowEnd) {\r\n        if (rowStart > this.end.row) {\r\n            return;\r\n        }\r\n        if (rowEnd < this.start.row) {\r\n            const numberOfRows = rowEnd - rowStart + 1;\r\n            return this.shiftByRows(-numberOfRows);\r\n        }\r\n        if (rowStart <= this.start.row) {\r\n            this.start.row = rowStart;\r\n        }\r\n        this.end.row -= Math.min(rowEnd, this.end.row) - rowStart + 1;\r\n    }\r\n    removeColumns(columnStart, columnEnd) {\r\n        if (columnStart > this.end.col) {\r\n            return;\r\n        }\r\n        if (columnEnd < this.start.col) {\r\n            const numberOfColumns = columnEnd - columnStart + 1;\r\n            return this.shiftByColumns(-numberOfColumns);\r\n        }\r\n        if (columnStart <= this.start.col) {\r\n            this.start.col = columnStart;\r\n        }\r\n        this.end.col -= Math.min(columnEnd, this.end.col) - columnStart + 1;\r\n    }\r\n}\r\nexport class AbsoluteColumnRange extends AbsoluteCellRange {\r\n    constructor(sheet, columnStart, columnEnd) {\r\n        super(simpleCellAddress(sheet, columnStart, 0), simpleCellAddress(sheet, columnEnd, Number.POSITIVE_INFINITY));\r\n    }\r\n    static fromColumnRange(x, baseAddress) {\r\n        const start = x.start.toSimpleColumnAddress(baseAddress);\r\n        const end = x.end.toSimpleColumnAddress(baseAddress);\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.width() <= 0;\r\n    }\r\n    shiftByRows(_numberOfRows) {\r\n        return;\r\n    }\r\n    expandByRows(_numberOfRows) {\r\n        return;\r\n    }\r\n    shifted(byCols, _byRows) {\r\n        return new AbsoluteColumnRange(this.sheet, this.start.col + byCols, this.end.col + byCols);\r\n    }\r\n    rangeWithSameHeight(startColumn, numberOfColumns) {\r\n        return new AbsoluteColumnRange(this.sheet, startColumn, startColumn + numberOfColumns - 1);\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, _maxRows) {\r\n        return this.end.col >= maxColumns;\r\n    }\r\n    effectiveEndRow(dependencyGraph) {\r\n        return this.effectiveHeight(dependencyGraph) - 1;\r\n    }\r\n    effectiveHeight(dependencyGraph) {\r\n        return dependencyGraph.getSheetHeight(this.sheet);\r\n    }\r\n    removeRows(_rowStart, _rowEnd) {\r\n        return;\r\n    }\r\n}\r\nexport class AbsoluteRowRange extends AbsoluteCellRange {\r\n    constructor(sheet, rowStart, rowEnd) {\r\n        super(simpleCellAddress(sheet, 0, rowStart), simpleCellAddress(sheet, Number.POSITIVE_INFINITY, rowEnd));\r\n    }\r\n    static fromRowRangeAst(x, baseAddress) {\r\n        const start = x.start.toSimpleRowAddress(baseAddress);\r\n        const end = x.end.toSimpleRowAddress(baseAddress);\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.height() <= 0;\r\n    }\r\n    shiftByColumns(_numberOfColumns) {\r\n        return;\r\n    }\r\n    expandByColumns(_numberOfColumns) {\r\n        return;\r\n    }\r\n    shifted(byCols, byRows) {\r\n        return new AbsoluteRowRange(this.sheet, this.start.row + byRows, this.end.row + byRows);\r\n    }\r\n    rangeWithSameWidth(startRow, numberOfRows) {\r\n        return new AbsoluteRowRange(this.sheet, startRow, startRow + numberOfRows - 1);\r\n    }\r\n    exceedsSheetSizeLimits(_maxColumns, maxRows) {\r\n        return this.end.row >= maxRows;\r\n    }\r\n    effectiveEndColumn(dependencyGraph) {\r\n        return this.effectiveWidth(dependencyGraph) - 1;\r\n    }\r\n    effectiveWidth(dependencyGraph) {\r\n        return dependencyGraph.getSheetWidth(this.sheet);\r\n    }\r\n    removeColumns(_columnStart, _columnEnd) {\r\n        return;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\r\nimport { ErrorMessage } from './error-message';\r\nimport { EmptyValue, getFormatOfExtendedNumber, getTypeOfExtendedNumber, isExtendedNumber, NumberType, } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\n/**\r\n * Possible errors returned by our interpreter.\r\n */\r\nexport var ErrorType;\r\n(function (ErrorType) {\r\n    /** Division by zero. */\r\n    ErrorType[\"DIV_BY_ZERO\"] = \"DIV_BY_ZERO\";\r\n    /** Unknown function name. */\r\n    ErrorType[\"NAME\"] = \"NAME\";\r\n    ErrorType[\"VALUE\"] = \"VALUE\";\r\n    ErrorType[\"NUM\"] = \"NUM\";\r\n    ErrorType[\"NA\"] = \"NA\";\r\n    /** Cyclic dependency. */\r\n    ErrorType[\"CYCLE\"] = \"CYCLE\";\r\n    /** Wrong address reference. */\r\n    ErrorType[\"REF\"] = \"REF\";\r\n    /** Array spill error. */\r\n    ErrorType[\"SPILL\"] = \"SPILL\";\r\n    /** Invalid/missing licence error. */\r\n    ErrorType[\"LIC\"] = \"LIC\";\r\n    /** Generic error */\r\n    ErrorType[\"ERROR\"] = \"ERROR\";\r\n})(ErrorType || (ErrorType = {}));\r\nexport var CellType;\r\n(function (CellType) {\r\n    CellType[\"FORMULA\"] = \"FORMULA\";\r\n    CellType[\"VALUE\"] = \"VALUE\";\r\n    CellType[\"ARRAY\"] = \"ARRAY\";\r\n    CellType[\"EMPTY\"] = \"EMPTY\";\r\n    CellType[\"ARRAYFORMULA\"] = \"ARRAYFORMULA\";\r\n})(CellType || (CellType = {}));\r\nexport const getCellType = (vertex, address) => {\r\n    if (vertex instanceof ArrayVertex) {\r\n        if (vertex.isLeftCorner(address)) {\r\n            return CellType.ARRAYFORMULA;\r\n        }\r\n        else {\r\n            return CellType.ARRAY;\r\n        }\r\n    }\r\n    if (vertex instanceof FormulaCellVertex || vertex instanceof ParsingErrorVertex) {\r\n        return CellType.FORMULA;\r\n    }\r\n    if (vertex instanceof ValueCellVertex) {\r\n        return CellType.VALUE;\r\n    }\r\n    return CellType.EMPTY;\r\n};\r\nexport var CellValueNoNumber;\r\n(function (CellValueNoNumber) {\r\n    CellValueNoNumber[\"EMPTY\"] = \"EMPTY\";\r\n    CellValueNoNumber[\"NUMBER\"] = \"NUMBER\";\r\n    CellValueNoNumber[\"STRING\"] = \"STRING\";\r\n    CellValueNoNumber[\"BOOLEAN\"] = \"BOOLEAN\";\r\n    CellValueNoNumber[\"ERROR\"] = \"ERROR\";\r\n})(CellValueNoNumber || (CellValueNoNumber = {}));\r\nexport var CellValueJustNumber;\r\n(function (CellValueJustNumber) {\r\n    CellValueJustNumber[\"NUMBER\"] = \"NUMBER\";\r\n})(CellValueJustNumber || (CellValueJustNumber = {}));\r\nexport const CellValueType = Object.assign(Object.assign({}, CellValueNoNumber), CellValueJustNumber);\r\nexport const CellValueDetailedType = Object.assign(Object.assign({}, CellValueNoNumber), NumberType);\r\nexport const CellValueTypeOrd = (arg) => {\r\n    switch (arg) {\r\n        case CellValueType.EMPTY:\r\n            return 0;\r\n        case CellValueType.NUMBER:\r\n            return 1;\r\n        case CellValueType.STRING:\r\n            return 2;\r\n        case CellValueType.BOOLEAN:\r\n            return 3;\r\n        case CellValueType.ERROR:\r\n            return 4;\r\n    }\r\n    throw new Error('Cell value not computed');\r\n};\r\nexport const getCellValueType = (cellValue) => {\r\n    if (cellValue === EmptyValue) {\r\n        return CellValueType.EMPTY;\r\n    }\r\n    if (cellValue instanceof CellError || cellValue instanceof SimpleRangeValue) {\r\n        return CellValueType.ERROR;\r\n    }\r\n    if (typeof cellValue === 'string') {\r\n        return CellValueType.STRING;\r\n    }\r\n    else if (isExtendedNumber(cellValue)) {\r\n        return CellValueType.NUMBER;\r\n    }\r\n    else if (typeof cellValue === 'boolean') {\r\n        return CellValueType.BOOLEAN;\r\n    }\r\n    throw new Error('Cell value not computed');\r\n};\r\nexport const getCellValueDetailedType = (cellValue) => {\r\n    if (isExtendedNumber(cellValue)) {\r\n        return getTypeOfExtendedNumber(cellValue);\r\n    }\r\n    else {\r\n        return getCellValueType(cellValue);\r\n    }\r\n};\r\nexport const getCellValueFormat = (cellValue) => {\r\n    if (isExtendedNumber(cellValue)) {\r\n        return getFormatOfExtendedNumber(cellValue);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nexport class CellError {\r\n    constructor(type, message, root) {\r\n        this.type = type;\r\n        this.message = message;\r\n        this.root = root;\r\n    }\r\n    static parsingError() {\r\n        return new CellError(ErrorType.ERROR, ErrorMessage.ParseError);\r\n    }\r\n    attachRootVertex(vertex) {\r\n        if (this.root === undefined) {\r\n            return new CellError(this.type, this.message, vertex);\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport const simpleRowAddress = (sheet, row) => ({ sheet, row });\r\nexport const invalidSimpleRowAddress = (address) => (address.row < 0);\r\nexport const simpleColumnAddress = (sheet, col) => ({ sheet, col });\r\nexport const invalidSimpleColumnAddress = (address) => (address.col < 0);\r\nexport const simpleCellAddress = (sheet, col, row) => ({ sheet, col, row });\r\nexport const invalidSimpleCellAddress = (address) => (address.col < 0 || address.row < 0);\r\nexport const movedSimpleCellAddress = (address, toSheet, toRight, toBottom) => {\r\n    return simpleCellAddress(toSheet, address.col + toRight, address.row + toBottom);\r\n};\r\nexport const addressKey = (address) => `${address.sheet},${address.row},${address.col}`;\r\nexport function isSimpleCellAddress(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'col' in obj && typeof obj.col === 'number' && 'row' in obj && typeof obj.row === 'number' && 'sheet' in obj && typeof obj.sheet === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const absoluteSheetReference = (address, baseAddress) => {\r\n    var _a;\r\n    return (_a = address.sheet) !== null && _a !== void 0 ? _a : baseAddress.sheet;\r\n};\r\nexport const equalSimpleCellAddress = (left, right) => {\r\n    return left.sheet === right.sheet && left.col === right.col && left.row === right.row;\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport { DependencyGraph } from './DependencyGraph';\r\nexport { AddressMapping } from './AddressMapping/AddressMapping';\r\nexport { Graph } from './Graph';\r\nexport { RangeMapping } from './RangeMapping';\r\nexport { SheetMapping } from './SheetMapping';\r\nexport { ArrayMapping } from './ArrayMapping';\r\nexport { FormulaCellVertex } from './FormulaCellVertex';\r\nexport { EmptyCellVertex } from './EmptyCellVertex';\r\nexport { ValueCellVertex } from './ValueCellVertex';\r\nexport { ParsingErrorVertex } from './ParsingErrorVertex';\r\nexport { RangeVertex } from './RangeVertex';\r\nexport { SparseStrategy } from './AddressMapping/SparseStrategy';\r\nexport { DenseStrategy } from './AddressMapping/DenseStrategy';\r\nexport { ArrayVertex } from './FormulaCellVertex';\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, simpleCellRange } from '../AbsoluteCellRange';\r\nimport { absolutizeDependencies } from '../absolutizeDependencies';\r\nimport { CellError, ErrorType, isSimpleCellAddress, simpleCellAddress } from '../Cell';\r\nimport { ContentChanges } from '../ContentChanges';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { collectDependencies, NamedExpressionDependency } from '../parser';\r\nimport { ColumnsSpan, RowsSpan } from '../Span';\r\nimport { StatType } from '../statistics';\r\nimport { ArrayVertex, EmptyCellVertex, FormulaCellVertex, RangeVertex, ValueCellVertex, } from './';\r\nimport { AddressMapping } from './AddressMapping/AddressMapping';\r\nimport { ArrayMapping } from './ArrayMapping';\r\nimport { collectAddressesDependentToRange } from './collectAddressesDependentToRange';\r\nimport { FormulaVertex } from './FormulaCellVertex';\r\nimport { Graph } from './Graph';\r\nimport { RangeMapping } from './RangeMapping';\r\nimport { SheetMapping } from './SheetMapping';\r\nexport class DependencyGraph {\r\n    constructor(addressMapping, rangeMapping, sheetMapping, arrayMapping, stats, lazilyTransformingAstService, functionRegistry, namedExpressions) {\r\n        this.addressMapping = addressMapping;\r\n        this.rangeMapping = rangeMapping;\r\n        this.sheetMapping = sheetMapping;\r\n        this.arrayMapping = arrayMapping;\r\n        this.stats = stats;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.functionRegistry = functionRegistry;\r\n        this.namedExpressions = namedExpressions;\r\n        this.changes = ContentChanges.empty();\r\n        this.dependencyQueryAddresses = (vertex) => {\r\n            if (vertex instanceof RangeVertex) {\r\n                return this.rangeDependencyQuery(vertex).map(([address, _]) => address);\r\n            }\r\n            else {\r\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\r\n                if (dependenciesResult !== undefined) {\r\n                    const [address, dependencies] = dependenciesResult;\r\n                    return dependencies.map((dependency) => {\r\n                        if (dependency instanceof NamedExpressionDependency) {\r\n                            return this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet).address;\r\n                        }\r\n                        else if (isSimpleCellAddress(dependency)) {\r\n                            return dependency;\r\n                        }\r\n                        else {\r\n                            return simpleCellRange(dependency.start, dependency.end);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return [];\r\n                }\r\n            }\r\n        };\r\n        this.dependencyQueryVertices = (vertex) => {\r\n            if (vertex instanceof RangeVertex) {\r\n                return this.rangeDependencyQuery(vertex);\r\n            }\r\n            else {\r\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\r\n                if (dependenciesResult !== undefined) {\r\n                    const [address, dependencies] = dependenciesResult;\r\n                    return dependencies.map((dependency) => {\r\n                        if (dependency instanceof AbsoluteCellRange) {\r\n                            return [dependency.start, this.rangeMapping.fetchRange(dependency.start, dependency.end)];\r\n                        }\r\n                        else if (dependency instanceof NamedExpressionDependency) {\r\n                            const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet);\r\n                            return [namedExpression.address, this.addressMapping.fetchCell(namedExpression.address)];\r\n                        }\r\n                        else {\r\n                            return [dependency, this.addressMapping.fetchCell(dependency)];\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return [];\r\n                }\r\n            }\r\n        };\r\n        this.rangeDependencyQuery = (vertex) => {\r\n            const allDeps = [];\r\n            const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(vertex.range); //checking whether this range was splitted by bruteForce or not\r\n            let range;\r\n            if (smallerRangeVertex !== undefined && this.graph.adjacentNodes(smallerRangeVertex).has(vertex)) {\r\n                range = restRange;\r\n                allDeps.push([new AbsoluteCellRange(smallerRangeVertex.start, smallerRangeVertex.end), smallerRangeVertex]);\r\n            }\r\n            else { //did we ever need to use full range\r\n                range = vertex.range;\r\n            }\r\n            for (const address of range.addresses(this)) {\r\n                const cell = this.addressMapping.getCell(address);\r\n                if (cell !== undefined) {\r\n                    allDeps.push([address, cell]);\r\n                }\r\n            }\r\n            return allDeps;\r\n        };\r\n        this.formulaDependencyQuery = (vertex) => {\r\n            let formula;\r\n            let address;\r\n            if (vertex instanceof FormulaVertex) {\r\n                address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                formula = vertex.getFormula(this.lazilyTransformingAstService);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n            const deps = collectDependencies(formula, this.functionRegistry);\r\n            return [address, absolutizeDependencies(deps, address)];\r\n        };\r\n        this.graph = new Graph(this.dependencyQueryVertices);\r\n    }\r\n    /**\r\n     * Invariants:\r\n     * - empty cell has associated EmptyCellVertex if and only if it is a dependency (possibly indirect, through range) to some formula\r\n     */\r\n    static buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats) {\r\n        return new DependencyGraph(new AddressMapping(config.chooseAddressMappingPolicy), new RangeMapping(), new SheetMapping(config.translationPackage), new ArrayMapping(), stats, lazilyTransformingAstService, functionRegistry, namedExpressions);\r\n    }\r\n    setFormulaToCell(address, ast, dependencies, size, hasVolatileFunction, hasStructuralChangeFunction) {\r\n        const newVertex = FormulaVertex.fromAst(ast, address, size, this.lazilyTransformingAstService.version());\r\n        this.exchangeOrAddFormulaVertex(newVertex);\r\n        this.processCellDependencies(dependencies, newVertex);\r\n        this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\r\n        if (hasVolatileFunction) {\r\n            this.markAsVolatile(newVertex);\r\n        }\r\n        if (hasStructuralChangeFunction) {\r\n            this.markAsDependentOnStructureChange(newVertex);\r\n        }\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setParsingErrorToCell(address, errorVertex) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        this.exchangeOrAddGraphNode(vertex, errorVertex);\r\n        this.addressMapping.setCell(address, errorVertex);\r\n        this.graph.markNodeAsSpecialRecentlyChanged(errorVertex);\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setValueToCell(address, value) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.arrayMapping.removeArray(vertex.getRange());\r\n        }\r\n        if (vertex instanceof ValueCellVertex) {\r\n            const oldValues = vertex.getValues();\r\n            if (oldValues.rawValue !== value.rawValue) {\r\n                vertex.setValues(value);\r\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n            }\r\n        }\r\n        else {\r\n            const newVertex = new ValueCellVertex(value.parsedValue, value.rawValue);\r\n            this.exchangeOrAddGraphNode(vertex, newVertex);\r\n            this.addressMapping.setCell(address, newVertex);\r\n            this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\r\n        }\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setCellEmpty(address) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex === undefined) {\r\n            return ContentChanges.empty();\r\n        }\r\n        if (this.graph.adjacentNodes(vertex).size > 0) {\r\n            const emptyVertex = new EmptyCellVertex();\r\n            this.exchangeGraphNode(vertex, emptyVertex);\r\n            if (this.graph.adjacentNodesCount(emptyVertex) === 0) {\r\n                this.removeVertex(emptyVertex);\r\n                this.addressMapping.removeCell(address);\r\n            }\r\n            else {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\r\n                this.addressMapping.setCell(address, emptyVertex);\r\n            }\r\n        }\r\n        else {\r\n            this.removeVertex(vertex);\r\n            this.addressMapping.removeCell(address);\r\n        }\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    ensureThatVertexIsNonArrayCellVertex(vertex) {\r\n        if (vertex instanceof ArrayVertex) {\r\n            throw new Error('Illegal operation');\r\n        }\r\n    }\r\n    clearRecentlyChangedVertices() {\r\n        this.graph.clearSpecialNodesRecentlyChanged();\r\n    }\r\n    verticesToRecompute() {\r\n        return new Set([...this.graph.specialNodesRecentlyChanged, ...this.volatileVertices()]);\r\n    }\r\n    processCellDependencies(cellDependencies, endVertex) {\r\n        cellDependencies.forEach((dep) => {\r\n            if (dep instanceof AbsoluteCellRange) {\r\n                const range = dep;\r\n                let rangeVertex = this.getRange(range.start, range.end);\r\n                if (rangeVertex === undefined) {\r\n                    rangeVertex = new RangeVertex(range);\r\n                    this.rangeMapping.setRange(rangeVertex);\r\n                }\r\n                this.graph.addNode(rangeVertex);\r\n                if (!range.isFinite()) {\r\n                    this.graph.markNodeAsInfiniteRange(rangeVertex);\r\n                }\r\n                const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(range);\r\n                if (smallerRangeVertex !== undefined) {\r\n                    this.graph.addEdge(smallerRangeVertex, rangeVertex);\r\n                    if (rangeVertex.bruteForce) {\r\n                        rangeVertex.bruteForce = false;\r\n                        for (const cellFromRange of range.addresses(this)) { //if we ever switch heuristic to processing by sorted sizes, this would be unnecessary\r\n                            this.graph.removeEdge(this.fetchCell(cellFromRange), rangeVertex);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    rangeVertex.bruteForce = true;\r\n                }\r\n                const array = this.arrayMapping.getArray(restRange);\r\n                if (array !== undefined) {\r\n                    this.graph.addEdge(array, rangeVertex);\r\n                }\r\n                else {\r\n                    for (const cellFromRange of restRange.addresses(this)) {\r\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(cellFromRange), rangeVertex);\r\n                    }\r\n                }\r\n                this.graph.addEdge(rangeVertex, endVertex);\r\n                if (range.isFinite()) {\r\n                    this.correctInfiniteRangesDependenciesByRangeVertex(rangeVertex);\r\n                }\r\n            }\r\n            else if (dep instanceof NamedExpressionDependency) {\r\n                const sheetOfVertex = endVertex.getAddress(this.lazilyTransformingAstService).sheet;\r\n                const namedExpressionVertex = this.fetchNamedExpressionVertex(dep.name, sheetOfVertex);\r\n                this.graph.addEdge(namedExpressionVertex, endVertex);\r\n            }\r\n            else {\r\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(dep), endVertex);\r\n            }\r\n        });\r\n    }\r\n    fetchNamedExpressionVertex(expressionName, sheetId) {\r\n        const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(expressionName, sheetId);\r\n        return this.fetchCellOrCreateEmpty(namedExpression.address);\r\n    }\r\n    exchangeNode(addressFrom, addressTo) {\r\n        const vertexFrom = this.fetchCellOrCreateEmpty(addressFrom);\r\n        const vertexTo = this.fetchCellOrCreateEmpty(addressTo);\r\n        this.addressMapping.removeCell(addressFrom);\r\n        this.exchangeGraphNode(vertexFrom, vertexTo);\r\n    }\r\n    correctInfiniteRangesDependency(address) {\r\n        let vertex = undefined;\r\n        for (const range of this.graph.infiniteRanges) {\r\n            const infiniteRangeVertex = range;\r\n            if (infiniteRangeVertex.range.addressInRange(address)) {\r\n                vertex = vertex !== null && vertex !== void 0 ? vertex : this.fetchCellOrCreateEmpty(address);\r\n                this.graph.addEdge(vertex, infiniteRangeVertex);\r\n            }\r\n        }\r\n    }\r\n    fetchCellOrCreateEmpty(address) {\r\n        let vertex = this.addressMapping.getCell(address);\r\n        if (vertex === undefined) {\r\n            vertex = new EmptyCellVertex();\r\n            this.graph.addNode(vertex);\r\n            this.addressMapping.setCell(address, vertex);\r\n        }\r\n        return vertex;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\r\n            for (const [address, vertex] of this.addressMapping.entriesFromRowsSpan(removedRows)) {\r\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n                }\r\n                if (vertex instanceof ArrayVertex) {\r\n                    if (vertex.isLeftCorner(address)) {\r\n                        this.shrinkArrayToCorner(vertex);\r\n                        this.arrayMapping.removeArray(vertex.getRange());\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n                this.removeVertex(vertex);\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.removeRows(removedRows);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const affectedRanges = this.truncateRanges(removedRows, address => address.row);\r\n            return this.getArrayVerticesRelatedToRanges(affectedRanges);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            this.fixArraysAfterRemovingRows(removedRows.sheet, removedRows.rowStart, removedRows.numberOfRows);\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n        return {\r\n            affectedArrays,\r\n            contentChanges: this.getAndClearContentChanges()\r\n        };\r\n    }\r\n    removeSheet(removedSheetId) {\r\n        this.clearSheet(removedSheetId);\r\n        for (const [adr, vertex] of this.addressMapping.sheetEntries(removedSheetId)) {\r\n            for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n            }\r\n            this.removeVertex(vertex);\r\n            this.addressMapping.removeCell(adr);\r\n        }\r\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const rangesToRemove = this.rangeMapping.removeRangesInSheet(removedSheetId);\r\n            for (const range of rangesToRemove) {\r\n                this.removeVertex(range);\r\n            }\r\n            this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n                this.addressMapping.removeSheet(removedSheetId);\r\n            });\r\n        });\r\n    }\r\n    clearSheet(sheetId) {\r\n        const arrays = new Set();\r\n        for (const [address, vertex] of this.addressMapping.sheetEntries(sheetId)) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                arrays.add(vertex);\r\n            }\r\n            else {\r\n                this.setCellEmpty(address);\r\n            }\r\n        }\r\n        for (const array of arrays.values()) {\r\n            this.setArrayEmpty(array);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n    }\r\n    removeColumns(removedColumns) {\r\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\r\n            for (const [address, vertex] of this.addressMapping.entriesFromColumnsSpan(removedColumns)) {\r\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n                }\r\n                if (vertex instanceof ArrayVertex) {\r\n                    if (vertex.isLeftCorner(address)) {\r\n                        this.shrinkArrayToCorner(vertex);\r\n                        this.arrayMapping.removeArray(vertex.getRange());\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n                this.removeVertex(vertex);\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.removeColumns(removedColumns);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const affectedRanges = this.truncateRanges(removedColumns, address => address.col);\r\n            return this.getArrayVerticesRelatedToRanges(affectedRanges);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            return this.fixArraysAfterRemovingColumns(removedColumns.sheet, removedColumns.columnStart, removedColumns.numberOfColumns);\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n        return {\r\n            affectedArrays,\r\n            contentChanges: this.getAndClearContentChanges(),\r\n        };\r\n    }\r\n    addRows(addedRows) {\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.addRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const result = this.rangeMapping.moveAllRangesInSheetAfterRowByRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n            this.fixRangesWhenAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n            return this.getArrayVerticesRelatedToRanges(result.verticesWithChangedSize);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            this.fixArraysAfterAddingRow(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n        });\r\n        for (const vertex of this.addressMapping.verticesFromRowsSpan(addedRows)) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n        return { affectedArrays };\r\n    }\r\n    addColumns(addedColumns) {\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.addColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const result = this.rangeMapping.moveAllRangesInSheetAfterColumnByColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n            this.fixRangesWhenAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n            return this.getArrayVerticesRelatedToRanges(result.verticesWithChangedSize);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            return this.fixArraysAfterAddingColumn(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n        });\r\n        for (const vertex of this.addressMapping.verticesFromColumnsSpan(addedColumns)) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n        return { affectedArrays, contentChanges: this.getAndClearContentChanges() };\r\n    }\r\n    ensureNoArrayInRange(range) {\r\n        if (this.arrayMapping.isFormulaArrayInRange(range)) {\r\n            throw Error('It is not possible to move / replace cells with array');\r\n        }\r\n    }\r\n    isThereSpaceForArray(arrayVertex) {\r\n        const range = arrayVertex.getRangeOrUndef();\r\n        if (range === undefined) {\r\n            return false;\r\n        }\r\n        for (const address of range.addresses(this)) {\r\n            const vertexUnderAddress = this.addressMapping.getCell(address);\r\n            if (vertexUnderAddress !== undefined && !(vertexUnderAddress instanceof EmptyCellVertex) && vertexUnderAddress !== arrayVertex) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    moveCells(sourceRange, toRight, toBottom, toSheet) {\r\n        for (const sourceAddress of sourceRange.addressesWithDirection(toRight, toBottom, this)) {\r\n            const targetAddress = simpleCellAddress(toSheet, sourceAddress.col + toRight, sourceAddress.row + toBottom);\r\n            let sourceVertex = this.addressMapping.getCell(sourceAddress);\r\n            const targetVertex = this.addressMapping.getCell(targetAddress);\r\n            this.addressMapping.removeCell(sourceAddress);\r\n            if (sourceVertex !== undefined) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\r\n                this.addressMapping.setCell(targetAddress, sourceVertex);\r\n                let emptyVertex = undefined;\r\n                for (const adjacentNode of this.graph.adjacentNodes(sourceVertex)) {\r\n                    if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\r\n                        emptyVertex = emptyVertex !== null && emptyVertex !== void 0 ? emptyVertex : this.fetchCellOrCreateEmpty(sourceAddress);\r\n                        this.graph.addEdge(emptyVertex, adjacentNode);\r\n                        this.graph.removeEdge(sourceVertex, adjacentNode);\r\n                    }\r\n                }\r\n                if (emptyVertex) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\r\n                    this.addressMapping.setCell(sourceAddress, emptyVertex);\r\n                }\r\n            }\r\n            if (targetVertex !== undefined) {\r\n                if (sourceVertex === undefined) {\r\n                    this.addressMapping.removeCell(targetAddress);\r\n                }\r\n                for (const adjacentNode of this.graph.adjacentNodes(targetVertex)) {\r\n                    sourceVertex = sourceVertex !== null && sourceVertex !== void 0 ? sourceVertex : this.fetchCellOrCreateEmpty(targetAddress);\r\n                    this.graph.addEdge(sourceVertex, adjacentNode);\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\r\n                }\r\n                this.removeVertex(targetVertex);\r\n            }\r\n        }\r\n        for (const rangeVertex of this.rangeMapping.rangeVerticesContainedInRange(sourceRange)) {\r\n            for (const adjacentNode of this.graph.adjacentNodes(rangeVertex)) {\r\n                if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\r\n                    this.graph.removeEdge(rangeVertex, adjacentNode);\r\n                    for (const address of rangeVertex.range.addresses(this)) {\r\n                        const newEmptyVertex = this.fetchCellOrCreateEmpty(address);\r\n                        this.graph.addEdge(newEmptyVertex, adjacentNode);\r\n                        this.addressMapping.setCell(address, newEmptyVertex);\r\n                        this.graph.markNodeAsSpecialRecentlyChanged(newEmptyVertex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.rangeMapping.moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet);\r\n    }\r\n    setArrayEmpty(arrayVertex) {\r\n        const arrayRange = AbsoluteCellRange.spanFrom(arrayVertex.getAddress(this.lazilyTransformingAstService), arrayVertex.width, arrayVertex.height);\r\n        const adjacentNodes = this.graph.adjacentNodes(arrayVertex);\r\n        for (const address of arrayRange.addresses(this)) {\r\n            this.addressMapping.removeCell(address);\r\n        }\r\n        for (const adjacentNode of adjacentNodes.values()) {\r\n            const nodeDependencies = collectAddressesDependentToRange(this.functionRegistry, adjacentNode, arrayVertex.getRange(), this.lazilyTransformingAstService, this);\r\n            for (const address of nodeDependencies) {\r\n                const vertex = this.fetchCellOrCreateEmpty(address);\r\n                this.graph.addEdge(vertex, adjacentNode);\r\n            }\r\n            if (nodeDependencies.length > 0) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n            }\r\n        }\r\n        this.removeVertex(arrayVertex);\r\n        this.arrayMapping.removeArray(arrayVertex.getRange());\r\n    }\r\n    addVertex(address, vertex) {\r\n        this.graph.addNode(vertex);\r\n        this.addressMapping.setCell(address, vertex);\r\n    }\r\n    addArrayVertex(address, vertex) {\r\n        this.graph.addNode(vertex);\r\n        this.setAddressMappingForArrayVertex(vertex, address);\r\n    }\r\n    *arrayFormulaNodes() {\r\n        for (const vertex of this.graph.nodes) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        yield* this.addressMapping.entriesFromRowsSpan(rowsSpan);\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        yield* this.addressMapping.entriesFromColumnsSpan(columnsSpan);\r\n    }\r\n    existsVertex(address) {\r\n        return this.addressMapping.has(address);\r\n    }\r\n    fetchCell(address) {\r\n        return this.addressMapping.fetchCell(address);\r\n    }\r\n    getCell(address) {\r\n        return this.addressMapping.getCell(address);\r\n    }\r\n    getCellValue(address) {\r\n        return this.addressMapping.getCellValue(address);\r\n    }\r\n    getRawValue(address) {\r\n        return this.addressMapping.getRawValue(address);\r\n    }\r\n    getScalarValue(address) {\r\n        const value = this.addressMapping.getCellValue(address);\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        return value;\r\n    }\r\n    existsEdge(fromNode, toNode) {\r\n        return this.graph.existsEdge(fromNode, toNode);\r\n    }\r\n    getSheetId(sheetName) {\r\n        return this.sheetMapping.fetch(sheetName);\r\n    }\r\n    getSheetHeight(sheet) {\r\n        return this.addressMapping.getHeight(sheet);\r\n    }\r\n    getSheetWidth(sheet) {\r\n        return this.addressMapping.getWidth(sheet);\r\n    }\r\n    getArray(range) {\r\n        return this.arrayMapping.getArray(range);\r\n    }\r\n    setArray(range, vertex) {\r\n        this.arrayMapping.setArray(range, vertex);\r\n    }\r\n    getRange(start, end) {\r\n        return this.rangeMapping.getRange(start, end);\r\n    }\r\n    topSortWithScc() {\r\n        return this.graph.topSortWithScc();\r\n    }\r\n    markAsVolatile(vertex) {\r\n        this.graph.markNodeAsSpecial(vertex);\r\n    }\r\n    markAsDependentOnStructureChange(vertex) {\r\n        this.graph.markNodeAsChangingWithStructure(vertex);\r\n    }\r\n    forceApplyPostponedTransformations() {\r\n        for (const vertex of this.graph.nodes.values()) {\r\n            if (vertex instanceof FormulaCellVertex) {\r\n                vertex.ensureRecentData(this.lazilyTransformingAstService);\r\n            }\r\n        }\r\n    }\r\n    volatileVertices() {\r\n        return this.graph.specialNodes;\r\n    }\r\n    getArrayVerticesRelatedToRanges(ranges) {\r\n        const arrayVertices = ranges.map(range => {\r\n            if (this.graph.hasNode(range)) {\r\n                return Array.from(this.graph.adjacentNodes(range)).filter(node => node instanceof ArrayVertex);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        return new Set(...arrayVertices);\r\n    }\r\n    *rawValuesFromRange(range) {\r\n        for (const address of range.addresses(this)) {\r\n            const value = this.getScalarValue(address);\r\n            if (value !== EmptyValue) {\r\n                yield [getRawValue(value), address];\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRange(range) {\r\n        for (const address of range.addresses(this)) {\r\n            yield [address, this.getCell(address)];\r\n        }\r\n    }\r\n    exchangeGraphNode(oldNode, newNode) {\r\n        this.graph.addNode(newNode);\r\n        const adjNodesStored = this.graph.adjacentNodes(oldNode);\r\n        this.removeVertex(oldNode);\r\n        adjNodesStored.forEach((adjacentNode) => {\r\n            if (this.graph.hasNode(adjacentNode)) {\r\n                this.graph.addEdge(newNode, adjacentNode);\r\n            }\r\n        });\r\n    }\r\n    exchangeOrAddGraphNode(oldNode, newNode) {\r\n        if (oldNode) {\r\n            this.exchangeGraphNode(oldNode, newNode);\r\n        }\r\n        else {\r\n            this.graph.addNode(newNode);\r\n        }\r\n    }\r\n    computeListOfValuesInRange(range) {\r\n        const values = [];\r\n        for (const cellFromRange of range.addresses(this)) {\r\n            const value = this.getScalarValue(cellFromRange);\r\n            values.push(value);\r\n        }\r\n        return values;\r\n    }\r\n    shrinkArrayToCorner(array) {\r\n        this.cleanAddressMappingUnderArray(array);\r\n        for (const adjacentVertex of this.adjacentArrayVertices(array)) {\r\n            let relevantDependencies;\r\n            if (adjacentVertex instanceof FormulaVertex) {\r\n                relevantDependencies = this.formulaDirectDependenciesToArray(adjacentVertex, array);\r\n            }\r\n            else {\r\n                relevantDependencies = this.rangeDirectDependenciesToArray(adjacentVertex, array);\r\n            }\r\n            let dependentToCorner = false;\r\n            for (const [address, vertex] of relevantDependencies) {\r\n                if (array.isLeftCorner(address)) {\r\n                    dependentToCorner = true;\r\n                }\r\n                this.graph.addEdge(vertex, adjacentVertex);\r\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n            }\r\n            if (!dependentToCorner) {\r\n                this.graph.removeEdge(array, adjacentVertex);\r\n            }\r\n        }\r\n        this.graph.markNodeAsSpecialRecentlyChanged(array);\r\n    }\r\n    isArrayInternalCell(address) {\r\n        const vertex = this.getCell(address);\r\n        return vertex instanceof ArrayVertex && !vertex.isLeftCorner(address);\r\n    }\r\n    getAndClearContentChanges() {\r\n        const changes = this.changes;\r\n        this.changes = ContentChanges.empty();\r\n        return changes;\r\n    }\r\n    getAdjacentNodesAddresses(inputVertex) {\r\n        const deps = this.graph.adjacentNodes(inputVertex);\r\n        const ret = [];\r\n        deps.forEach((vertex) => {\r\n            const castVertex = vertex;\r\n            if (castVertex instanceof RangeVertex) {\r\n                ret.push(simpleCellRange(castVertex.start, castVertex.end));\r\n            }\r\n            else {\r\n                ret.push(castVertex.getAddress(this.lazilyTransformingAstService));\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    correctInfiniteRangesDependenciesByRangeVertex(vertex) {\r\n        for (const range of this.graph.infiniteRanges) {\r\n            const infiniteRangeVertex = range;\r\n            const intersection = vertex.range.intersectionWith(infiniteRangeVertex.range);\r\n            if (intersection === undefined) {\r\n                continue;\r\n            }\r\n            for (const address of intersection.addresses(this)) {\r\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(address), range);\r\n            }\r\n        }\r\n    }\r\n    cleanAddressMappingUnderArray(vertex) {\r\n        const arrayRange = vertex.getRange();\r\n        for (const address of arrayRange.addresses(this)) {\r\n            const oldValue = vertex.getArrayCellValue(address);\r\n            if (this.getCell(address) === vertex) {\r\n                if (vertex.isLeftCorner(address)) {\r\n                    this.changes.addChange(new CellError(ErrorType.REF), address, oldValue);\r\n                }\r\n                else {\r\n                    this.addressMapping.removeCell(address);\r\n                    this.changes.addChange(EmptyValue, address, oldValue);\r\n                }\r\n            }\r\n            else {\r\n                this.changes.addChange(EmptyValue, address, oldValue);\r\n            }\r\n        }\r\n    }\r\n    *formulaDirectDependenciesToArray(vertex, array) {\r\n        var _a;\r\n        const [, formulaDependencies] = (_a = this.formulaDependencyQuery(vertex)) !== null && _a !== void 0 ? _a : [];\r\n        if (formulaDependencies === undefined) {\r\n            return;\r\n        }\r\n        for (const dependency of formulaDependencies) {\r\n            if (dependency instanceof NamedExpressionDependency || dependency instanceof AbsoluteCellRange) {\r\n                continue;\r\n            }\r\n            if (array.getRange().addressInRange(dependency)) {\r\n                const vertex = this.fetchCellOrCreateEmpty(dependency);\r\n                yield [dependency, vertex];\r\n            }\r\n        }\r\n    }\r\n    *rangeDirectDependenciesToArray(vertex, array) {\r\n        const { restRange: range } = this.rangeMapping.findSmallerRange(vertex.range);\r\n        for (const address of range.addresses(this)) {\r\n            if (array.getRange().addressInRange(address)) {\r\n                const cell = this.fetchCellOrCreateEmpty(address);\r\n                yield [address, cell];\r\n            }\r\n        }\r\n    }\r\n    *adjacentArrayVertices(vertex) {\r\n        const adjacentNodes = this.graph.adjacentNodes(vertex);\r\n        for (const item of adjacentNodes) {\r\n            if (item instanceof FormulaVertex || item instanceof RangeVertex) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    addStructuralNodesToChangeSet() {\r\n        for (const vertex of this.graph.specialNodesStructuralChanges) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n    }\r\n    fixRangesWhenAddingRows(sheet, row, numberOfRows) {\r\n        const originalValues = Array.from(this.rangeMapping.rangesInSheet(sheet));\r\n        for (const rangeVertex of originalValues) {\r\n            if (rangeVertex.range.includesRow(row + numberOfRows)) {\r\n                if (rangeVertex.bruteForce) {\r\n                    const addedSubrangeInThatRange = rangeVertex.range.rangeWithSameWidth(row, numberOfRows);\r\n                    for (const address of addedSubrangeInThatRange.addresses(this)) {\r\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\r\n                    }\r\n                }\r\n                else {\r\n                    let currentRangeVertex = rangeVertex;\r\n                    let find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\r\n                    if (find.smallerRangeVertex !== undefined) {\r\n                        continue;\r\n                    }\r\n                    while (find.smallerRangeVertex === undefined) {\r\n                        const newRangeVertex = new RangeVertex(AbsoluteCellRange.spanFrom(currentRangeVertex.range.start, currentRangeVertex.range.width(), currentRangeVertex.range.height() - 1));\r\n                        this.rangeMapping.setRange(newRangeVertex);\r\n                        this.graph.addNode(newRangeVertex);\r\n                        const restRange = new AbsoluteCellRange(simpleCellAddress(currentRangeVertex.range.start.sheet, currentRangeVertex.range.start.col, currentRangeVertex.range.end.row), currentRangeVertex.range.end);\r\n                        this.addAllFromRange(restRange, currentRangeVertex);\r\n                        this.graph.addEdge(newRangeVertex, currentRangeVertex);\r\n                        currentRangeVertex = newRangeVertex;\r\n                        find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\r\n                    }\r\n                    this.graph.addEdge(find.smallerRangeVertex, currentRangeVertex);\r\n                    this.addAllFromRange(find.restRange, currentRangeVertex);\r\n                    this.graph.removeEdge(find.smallerRangeVertex, rangeVertex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addAllFromRange(range, vertex) {\r\n        for (const address of range.addresses(this)) {\r\n            this.graph.addEdge(this.fetchCellOrCreateEmpty(address), vertex);\r\n        }\r\n    }\r\n    fixRangesWhenAddingColumns(sheet, column, numberOfColumns) {\r\n        for (const rangeVertex of this.rangeMapping.rangesInSheet(sheet)) {\r\n            if (rangeVertex.range.includesColumn(column + numberOfColumns)) {\r\n                let subrange;\r\n                if (rangeVertex.bruteForce) {\r\n                    subrange = rangeVertex.range.rangeWithSameHeight(column, numberOfColumns);\r\n                }\r\n                else {\r\n                    subrange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, column, rangeVertex.range.end.row), numberOfColumns, 1);\r\n                }\r\n                for (const address of subrange.addresses(this)) {\r\n                    this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exchangeOrAddFormulaVertex(vertex) {\r\n        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n        const range = AbsoluteCellRange.spanFrom(address, vertex.width, vertex.height);\r\n        const oldNode = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.setArray(range, vertex);\r\n        }\r\n        this.exchangeOrAddGraphNode(oldNode, vertex);\r\n        this.addressMapping.setCell(address, vertex);\r\n        if (vertex instanceof ArrayVertex) {\r\n            if (!this.isThereSpaceForArray(vertex)) {\r\n                return;\r\n            }\r\n            for (const cellAddress of range.addresses(this)) {\r\n                if (vertex.isLeftCorner(cellAddress)) {\r\n                    continue;\r\n                }\r\n                const old = this.getCell(cellAddress);\r\n                this.exchangeOrAddGraphNode(old, vertex);\r\n            }\r\n        }\r\n        for (const cellAddress of range.addresses(this)) {\r\n            this.addressMapping.setCell(cellAddress, vertex);\r\n        }\r\n    }\r\n    setAddressMappingForArrayVertex(vertex, formulaAddress) {\r\n        this.addressMapping.setCell(formulaAddress, vertex);\r\n        if (!(vertex instanceof ArrayVertex)) {\r\n            return;\r\n        }\r\n        const range = AbsoluteCellRange.spanFromOrUndef(formulaAddress, vertex.width, vertex.height);\r\n        if (range === undefined) {\r\n            return;\r\n        }\r\n        this.setArray(range, vertex);\r\n        if (!this.isThereSpaceForArray(vertex)) {\r\n            return;\r\n        }\r\n        for (const address of range.addresses(this)) {\r\n            this.addressMapping.setCell(address, vertex);\r\n        }\r\n    }\r\n    truncateRanges(span, coordinate) {\r\n        const { verticesToRemove, verticesToMerge, verticesWithChangedSize } = this.rangeMapping.truncateRanges(span, coordinate);\r\n        for (const [existingVertex, mergedVertex] of verticesToMerge) {\r\n            this.mergeRangeVertices(existingVertex, mergedVertex);\r\n        }\r\n        for (const rangeVertex of verticesToRemove) {\r\n            this.removeVertexAndCleanupDependencies(rangeVertex);\r\n        }\r\n        return verticesWithChangedSize;\r\n    }\r\n    fixArraysAfterAddingRow(sheet, rowStart, numberOfRows) {\r\n        this.arrayMapping.moveArrayVerticesAfterRowByRows(sheet, rowStart, numberOfRows);\r\n        if (rowStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart - 1, rowStart - 1))) {\r\n            const arrayRange = array.getRange();\r\n            for (let col = arrayRange.start.col; col <= arrayRange.end.col; ++col) {\r\n                for (let row = rowStart; row <= arrayRange.end.row; ++row) {\r\n                    const destination = simpleCellAddress(sheet, col, row);\r\n                    const source = simpleCellAddress(sheet, col, row + numberOfRows);\r\n                    const value = array.getArrayCellValue(destination);\r\n                    this.addressMapping.moveCell(source, destination);\r\n                    this.changes.addChange(EmptyValue, source, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterRemovingRows(sheet, rowStart, numberOfRows) {\r\n        this.arrayMapping.moveArrayVerticesAfterRowByRows(sheet, rowStart, -numberOfRows);\r\n        if (rowStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart - 1, rowStart - 1))) {\r\n            if (this.isThereSpaceForArray(array)) {\r\n                for (const address of array.getRange().addresses(this)) {\r\n                    this.addressMapping.setCell(address, array);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoSpaceIfArray(array);\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterAddingColumn(sheet, columnStart, numberOfColumns) {\r\n        this.arrayMapping.moveArrayVerticesAfterColumnByColumns(sheet, columnStart, numberOfColumns);\r\n        if (columnStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInCols(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart - 1, columnStart - 1))) {\r\n            const arrayRange = array.getRange();\r\n            for (let row = arrayRange.start.row; row <= arrayRange.end.row; ++row) {\r\n                for (let col = columnStart; col <= arrayRange.end.col; ++col) {\r\n                    const destination = simpleCellAddress(sheet, col, row);\r\n                    const source = simpleCellAddress(sheet, col + numberOfColumns, row);\r\n                    const value = array.getArrayCellValue(destination);\r\n                    this.addressMapping.moveCell(source, destination);\r\n                    this.changes.addChange(EmptyValue, source, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterRemovingColumns(sheet, columnStart, numberOfColumns) {\r\n        this.arrayMapping.moveArrayVerticesAfterColumnByColumns(sheet, columnStart, -numberOfColumns);\r\n        if (columnStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInCols(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart - 1, columnStart - 1))) {\r\n            if (this.isThereSpaceForArray(array)) {\r\n                for (const address of array.getRange().addresses(this)) {\r\n                    this.addressMapping.setCell(address, array);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoSpaceIfArray(array);\r\n            }\r\n        }\r\n    }\r\n    shrinkPossibleArrayAndGetCell(address) {\r\n        const vertex = this.getCell(address);\r\n        if (!(vertex instanceof ArrayVertex)) {\r\n            return vertex;\r\n        }\r\n        this.setNoSpaceIfArray(vertex);\r\n        return this.getCell(address);\r\n    }\r\n    setNoSpaceIfArray(vertex) {\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.shrinkArrayToCorner(vertex);\r\n            vertex.setNoSpace();\r\n        }\r\n    }\r\n    removeVertex(vertex) {\r\n        this.removeVertexAndCleanupDependencies(vertex);\r\n        if (vertex instanceof RangeVertex) {\r\n            this.rangeMapping.removeRange(vertex);\r\n        }\r\n    }\r\n    mergeRangeVertices(existingVertex, newVertex) {\r\n        const adjNodesStored = this.graph.adjacentNodes(newVertex);\r\n        this.removeVertexAndCleanupDependencies(newVertex);\r\n        this.graph.softRemoveEdge(existingVertex, newVertex);\r\n        adjNodesStored.forEach((adjacentNode) => {\r\n            if (this.graph.hasNode(adjacentNode)) {\r\n                this.graph.addEdge(existingVertex, adjacentNode);\r\n            }\r\n        });\r\n    }\r\n    removeVertexAndCleanupDependencies(inputVertex) {\r\n        const dependencies = new Set(this.graph.removeNode(inputVertex));\r\n        while (dependencies.size > 0) {\r\n            const dependency = dependencies.values().next().value;\r\n            dependencies.delete(dependency);\r\n            const [address, vertex] = dependency;\r\n            if (this.graph.hasNode(vertex) && this.graph.adjacentNodesCount(vertex) === 0) {\r\n                if (vertex instanceof RangeVertex || vertex instanceof EmptyCellVertex) {\r\n                    this.graph.removeNode(vertex).forEach((candidate) => dependencies.add(candidate));\r\n                }\r\n                if (vertex instanceof RangeVertex) {\r\n                    this.rangeMapping.removeRange(vertex);\r\n                }\r\n                else if (vertex instanceof EmptyCellVertex) {\r\n                    this.addressMapping.removeCell(address);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress } from './Cell';\r\nimport { NamedExpressionDependency } from './parser';\r\n/**\r\n * Converts dependencies from maybe relative addressing to absolute addressing.\r\n *\r\n * @param deps - list of addresses in R0C0 format\r\n * @param baseAddress - base address with regard to which make a convertion\r\n */\r\nexport const absolutizeDependencies = (deps, baseAddress) => {\r\n    return deps.map(dep => dep.absolutize(baseAddress));\r\n};\r\nexport const filterDependenciesOutOfScope = (deps) => {\r\n    return deps.filter(dep => {\r\n        if (dep instanceof NamedExpressionDependency) {\r\n            return true;\r\n        }\r\n        if (dep instanceof AbsoluteCellRange) {\r\n            return !(invalidSimpleCellAddress(dep.start) || invalidSimpleCellAddress(dep.end));\r\n        }\r\n        else {\r\n            return !invalidSimpleCellAddress(dep);\r\n        }\r\n    });\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString, } from './addressRepresentationConverters';\r\nexport { CellAddress } from './CellAddress';\r\nexport { ParserWithCaching, } from './ParserWithCaching';\r\nexport { collectDependencies, } from './collectDependencies';\r\nexport { buildLexerConfig, } from './LexerConfig';\r\nexport { FormulaLexer, } from './FormulaParser';\r\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst, } from './Ast';\r\nexport { Unparser } from './Unparser';\r\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency, } from './RelativeDependency';\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellRange } from '../AbsoluteCellRange';\r\nimport { simpleCellAddress } from '../Cell';\r\nimport { CellAddress } from './CellAddress';\r\nimport { ColumnAddress } from './ColumnAddress';\r\nimport { ABSOLUTE_OPERATOR, RANGE_OPERATOR, SHEET_NAME_PATTERN, UNQUOTED_SHEET_NAME_PATTERN } from './parser-consts';\r\nimport { RowAddress } from './RowAddress';\r\nconst addressRegex = new RegExp(`^(${SHEET_NAME_PATTERN})?(\\\\${ABSOLUTE_OPERATOR}?)([A-Za-z]+)(\\\\${ABSOLUTE_OPERATOR}?)([0-9]+)$`);\r\nconst columnRegex = new RegExp(`^(${SHEET_NAME_PATTERN})?(\\\\${ABSOLUTE_OPERATOR}?)([A-Za-z]+)$`);\r\nconst rowRegex = new RegExp(`^(${SHEET_NAME_PATTERN})?(\\\\${ABSOLUTE_OPERATOR}?)([0-9]+)$`);\r\nconst simpleSheetNameRegex = new RegExp(`^${UNQUOTED_SHEET_NAME_PATTERN}$`);\r\n/**\r\n * Computes R0C0 representation of cell address based on it's string representation and base address.\r\n *\r\n * @param sheetMapping - mapping function needed to change name of a sheet to index\r\n * @param stringAddress - string representation of cell address, e.g. 'C64'\r\n * @param baseAddress - base address for R0C0 conversion\r\n * @returns object representation of address\r\n */\r\nexport const cellAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = addressRegex.exec(stringAddress);\r\n    const col = columnLabelToIndex(result[6]);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const row = Number(result[8]) - 1;\r\n    if (result[5] === ABSOLUTE_OPERATOR && result[7] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absolute(col, row, sheet);\r\n    }\r\n    else if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absoluteCol(col, row - baseAddress.row, sheet);\r\n    }\r\n    else if (result[7] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absoluteRow(col - baseAddress.col, row, sheet);\r\n    }\r\n    else {\r\n        return CellAddress.relative(col - baseAddress.col, row - baseAddress.row, sheet);\r\n    }\r\n};\r\nexport const columnAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = columnRegex.exec(stringAddress);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const col = columnLabelToIndex(result[6]);\r\n    if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return ColumnAddress.absolute(col, sheet);\r\n    }\r\n    else {\r\n        return ColumnAddress.relative(col - baseAddress.col, sheet);\r\n    }\r\n};\r\nexport const rowAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = rowRegex.exec(stringAddress);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const row = Number(result[6]) - 1;\r\n    if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return RowAddress.absolute(row, sheet);\r\n    }\r\n    else {\r\n        return RowAddress.relative(row - baseAddress.row, sheet);\r\n    }\r\n};\r\n/**\r\n * Computes simple (absolute) address of a cell address based on its string representation.\r\n * If sheet name present in string representation but is not present in sheet mapping, returns undefined.\r\n * If sheet name is not present in string representation, returns {@param sheetContext} as sheet number\r\n *\r\n * @param sheetMapping - mapping function needed to change name of a sheet to index\r\n * @param stringAddress - string representation of cell address, e.g. 'C64'\r\n * @param sheetContext - sheet in context of which we should parse the address\r\n * @returns absolute representation of address, e.g. { sheet: 0, col: 1, row: 1 }\r\n */\r\nexport const simpleCellAddressFromString = (sheetMapping, stringAddress, sheetContext) => {\r\n    const result = addressRegex.exec(stringAddress);\r\n    const col = columnLabelToIndex(result[6]);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = sheetContext;\r\n    }\r\n    const row = Number(result[8]) - 1;\r\n    return simpleCellAddress(sheet, col, row);\r\n};\r\nexport const simpleCellRangeFromString = (sheetMapping, stringAddress, sheetContext) => {\r\n    const split = stringAddress.split(RANGE_OPERATOR);\r\n    if (split.length !== 2) {\r\n        return undefined;\r\n    }\r\n    const [startString, endString] = split;\r\n    const start = simpleCellAddressFromString(sheetMapping, startString, sheetContext);\r\n    if (start === undefined) {\r\n        return undefined;\r\n    }\r\n    const end = simpleCellAddressFromString(sheetMapping, endString, start.sheet);\r\n    if (end === undefined) {\r\n        return undefined;\r\n    }\r\n    if (start.sheet !== end.sheet) {\r\n        return undefined;\r\n    }\r\n    return simpleCellRange(start, end);\r\n};\r\n/**\r\n * Returns string representation of absolute address\r\n * If sheet index is not present in sheet mapping, returns undefined\r\n *\r\n * @param sheetIndexMapping - mapping function needed to change sheet index to sheet name\r\n * @param address - object representation of absolute address\r\n * @param sheetIndex - if is not equal with address sheet index, string representation will contain sheet name\r\n */\r\nexport const simpleCellAddressToString = (sheetIndexMapping, address, sheetIndex) => {\r\n    const column = columnIndexToLabel(address.col);\r\n    const sheetName = sheetIndexToString(address.sheet, sheetIndexMapping);\r\n    if (sheetName === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheetIndex !== address.sheet) {\r\n        return `${sheetName}!${column}${address.row + 1}`;\r\n    }\r\n    else {\r\n        return `${column}${address.row + 1}`;\r\n    }\r\n};\r\nexport const simpleCellRangeToString = (sheetIndexMapping, address, sheetIndex) => {\r\n    const startString = simpleCellAddressToString(sheetIndexMapping, address.start, sheetIndex);\r\n    const endString = simpleCellAddressToString(sheetIndexMapping, address.end, address.start.sheet);\r\n    if (startString === undefined || endString === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return `${startString}${RANGE_OPERATOR}${endString}`;\r\n    }\r\n};\r\n/**\r\n * Convert column label to index\r\n *\r\n * @param columnStringRepresentation - column label (e.g. 'AAB')\r\n * @returns column index\r\n */\r\nfunction columnLabelToIndex(columnStringRepresentation) {\r\n    if (columnStringRepresentation.length === 1) {\r\n        return columnStringRepresentation.toUpperCase().charCodeAt(0) - 65;\r\n    }\r\n    else {\r\n        return columnStringRepresentation.split('').reduce((currentColumn, nextLetter) => {\r\n            return currentColumn * 26 + (nextLetter.toUpperCase().charCodeAt(0) - 64);\r\n        }, 0) - 1;\r\n    }\r\n}\r\n/**\r\n * Converts column index to label\r\n *\r\n * @param column - address to convert\r\n * @returns string representation, e.g. 'AAB'\r\n */\r\nexport function columnIndexToLabel(column) {\r\n    let result = '';\r\n    while (column >= 0) {\r\n        result = String.fromCharCode((column % 26) + 97) + result;\r\n        column = Math.floor(column / 26) - 1;\r\n    }\r\n    return result.toUpperCase();\r\n}\r\nexport function sheetIndexToString(sheetId, sheetMappingFn) {\r\n    let sheetName = sheetMappingFn(sheetId);\r\n    if (sheetName === undefined) {\r\n        return undefined;\r\n    }\r\n    if (simpleSheetNameRegex.test(sheetName)) {\r\n        return sheetName;\r\n    }\r\n    else {\r\n        sheetName = sheetName.replace(/'/g, \"''\");\r\n        return `'${sheetName}'`;\r\n    }\r\n}\r\nfunction extractSheetNumber(regexResult, sheetMapping) {\r\n    var _a;\r\n    let maybeSheetName = (_a = regexResult[3]) !== null && _a !== void 0 ? _a : regexResult[2];\r\n    if (maybeSheetName) {\r\n        maybeSheetName = maybeSheetName.replace(/''/g, \"'\");\r\n        return sheetMapping(maybeSheetName);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleCellAddress, simpleCellAddress, simpleColumnAddress, simpleRowAddress, } from '../Cell';\r\nimport { columnIndexToLabel } from './addressRepresentationConverters';\r\nimport { ColumnAddress, ReferenceType } from './ColumnAddress';\r\nimport { RowAddress } from './RowAddress';\r\n/** Possible kinds of cell references */\r\nexport var CellReferenceType;\r\n(function (CellReferenceType) {\r\n    /** Cell reference with both row and column relative. */\r\n    CellReferenceType[\"CELL_REFERENCE_RELATIVE\"] = \"CELL_REFERENCE\";\r\n    /** Cell reference with both row and column absolute. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE\"] = \"CELL_REFERENCE_ABSOLUTE\";\r\n    /** Cell reference with absolute column and relative row. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_COL\"] = \"CELL_REFERENCE_ABSOLUTE_COL\";\r\n    /** Cell reference with relative column and absolute row. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_ROW\"] = \"CELL_REFERENCE_ABSOLUTE_ROW\";\r\n})(CellReferenceType || (CellReferenceType = {}));\r\nexport class CellAddress {\r\n    constructor(col, row, type, sheet) {\r\n        this.col = col;\r\n        this.row = row;\r\n        this.type = type;\r\n        this.sheet = sheet;\r\n    }\r\n    static fromColAndRow(col, row, sheet) {\r\n        const factoryMethod = col.isColumnAbsolute() && row.isRowAbsolute()\r\n            ? CellAddress.absolute.bind(this)\r\n            : col.isColumnAbsolute()\r\n                ? CellAddress.absoluteCol.bind(this)\r\n                : row.isRowAbsolute()\r\n                    ? CellAddress.absoluteRow.bind(this)\r\n                    : CellAddress.relative.bind(this);\r\n        return factoryMethod(col.col, row.row, sheet);\r\n    }\r\n    static relative(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_RELATIVE, sheet);\r\n    }\r\n    static absolute(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE, sheet);\r\n    }\r\n    static absoluteCol(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL, sheet);\r\n    }\r\n    static absoluteRow(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW, sheet);\r\n    }\r\n    /**\r\n     * Converts R0C0 representation of cell address to simple object representation.\r\n     *\r\n     * @param baseAddress - base address for R0C0 shifts\r\n     */\r\n    toSimpleCellAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE) {\r\n            return simpleCellAddress(sheet, this.col, this.row);\r\n        }\r\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\r\n            return simpleCellAddress(sheet, baseAddress.col + this.col, this.row);\r\n        }\r\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\r\n            return simpleCellAddress(sheet, this.col, baseAddress.row + this.row);\r\n        }\r\n        else {\r\n            return simpleCellAddress(sheet, baseAddress.col + this.col, baseAddress.row + this.row);\r\n        }\r\n    }\r\n    toColumnAddress() {\r\n        const refType = this.isColumnRelative() ? ReferenceType.RELATIVE : ReferenceType.ABSOLUTE;\r\n        return new ColumnAddress(refType, this.col, this.sheet);\r\n    }\r\n    toRowAddress() {\r\n        const refType = this.isRowRelative() ? ReferenceType.RELATIVE : ReferenceType.ABSOLUTE;\r\n        return new RowAddress(refType, this.row, this.sheet);\r\n    }\r\n    toSimpleColumnAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let column = this.col;\r\n        if (this.isColumnRelative()) {\r\n            column += baseAddress.col;\r\n        }\r\n        return simpleColumnAddress(sheet, column);\r\n    }\r\n    toSimpleRowAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let row = this.row;\r\n        if (this.isRowRelative()) {\r\n            row += baseAddress.row;\r\n        }\r\n        return simpleRowAddress(sheet, row);\r\n    }\r\n    isRowAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\r\n    }\r\n    isColumnAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\r\n    }\r\n    isColumnRelative() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\r\n    }\r\n    isRowRelative() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    shiftedByRows(numberOfRows) {\r\n        return new CellAddress(this.col, this.row + numberOfRows, this.type, this.sheet);\r\n    }\r\n    shiftedByColumns(numberOfColumns) {\r\n        return new CellAddress(this.col + numberOfColumns, this.row, this.type, this.sheet);\r\n    }\r\n    moved(toSheet, toRight, toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new CellAddress(this.col + toRight, this.row + toBottom, this.type, newSheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new CellAddress(this.col, this.row, this.type, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return invalidSimpleCellAddress(this.toSimpleCellAddress(baseAddress));\r\n    }\r\n    shiftRelativeDimensions(toRight, toBottom) {\r\n        const col = this.isColumnAbsolute() ? this.col : this.col + toRight;\r\n        const row = this.isRowAbsolute() ? this.row : this.row + toBottom;\r\n        return new CellAddress(col, row, this.type, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, toBottom) {\r\n        const col = this.isColumnRelative() ? this.col : this.col + toRight;\r\n        const row = this.isRowRelative() ? this.row : this.row + toBottom;\r\n        return new CellAddress(col, row, this.type, this.sheet);\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case CellReferenceType.CELL_REFERENCE_RELATIVE: {\r\n                return `${sheetPart}#${this.row}R${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE: {\r\n                return `${sheetPart}#${this.row}A${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL: {\r\n                return `${sheetPart}#${this.row}AC${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW: {\r\n                return `${sheetPart}#${this.row}AR${this.col}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleCellAddress(baseAddress);\r\n        if (invalidSimpleCellAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const column = columnIndexToLabel(simpleAddress.col);\r\n        const rowDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW ? '$' : '';\r\n        const colDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL ? '$' : '';\r\n        return `${colDollar}${column}${rowDollar}${simpleAddress.row + 1}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\r\n        return this.row >= maxRows || this.col >= maxColumns;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleColumnAddress, simpleColumnAddress } from '../Cell';\r\nimport { columnIndexToLabel } from './addressRepresentationConverters';\r\nexport var ReferenceType;\r\n(function (ReferenceType) {\r\n    ReferenceType[\"RELATIVE\"] = \"RELATIVE\";\r\n    ReferenceType[\"ABSOLUTE\"] = \"ABSOLUTE\";\r\n})(ReferenceType || (ReferenceType = {}));\r\nexport class ColumnAddress {\r\n    constructor(type, col, sheet) {\r\n        this.type = type;\r\n        this.col = col;\r\n        this.sheet = sheet;\r\n    }\r\n    static absolute(column, sheet) {\r\n        return new ColumnAddress(ReferenceType.ABSOLUTE, column, sheet);\r\n    }\r\n    static relative(column, sheet) {\r\n        return new ColumnAddress(ReferenceType.RELATIVE, column, sheet);\r\n    }\r\n    static compareByAbsoluteAddress(baseAddress) {\r\n        return (colA, colB) => colA.toSimpleColumnAddress(baseAddress).col - colB.toSimpleColumnAddress(baseAddress).col;\r\n    }\r\n    isColumnAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE);\r\n    }\r\n    isColumnRelative() {\r\n        return (this.type === ReferenceType.RELATIVE);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    moved(toSheet, toRight, _toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new ColumnAddress(this.type, this.col + toRight, newSheet);\r\n    }\r\n    shiftedByColumns(numberOfColumns) {\r\n        return new ColumnAddress(this.type, this.col + numberOfColumns, this.sheet);\r\n    }\r\n    toSimpleColumnAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let column = this.col;\r\n        if (this.isColumnRelative()) {\r\n            column = baseAddress.col + this.col;\r\n        }\r\n        return simpleColumnAddress(sheet, column);\r\n    }\r\n    shiftRelativeDimensions(toRight, _toBottom) {\r\n        const col = this.isColumnRelative() ? this.col + toRight : this.col;\r\n        return new ColumnAddress(this.type, col, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, _toBottom) {\r\n        const col = this.isColumnAbsolute() ? this.col + toRight : this.col;\r\n        return new ColumnAddress(this.type, col, this.sheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new ColumnAddress(this.type, this.col, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return this.toSimpleColumnAddress(baseAddress).col < 0;\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case ReferenceType.RELATIVE: {\r\n                return `${sheetPart}#COLR${this.col}`;\r\n            }\r\n            case ReferenceType.ABSOLUTE: {\r\n                return `${sheetPart}#COLA${this.col}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleColumnAddress(baseAddress);\r\n        if (invalidSimpleColumnAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const column = columnIndexToLabel(simpleAddress.col);\r\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\r\n        return `${dollar}${column}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns) {\r\n        return this.col >= maxColumns;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleRowAddress, simpleRowAddress } from '../Cell';\r\nimport { ReferenceType } from './ColumnAddress';\r\nexport class RowAddress {\r\n    constructor(type, row, sheet) {\r\n        this.type = type;\r\n        this.row = row;\r\n        this.sheet = sheet;\r\n    }\r\n    static absolute(row, sheet) {\r\n        return new RowAddress(ReferenceType.ABSOLUTE, row, sheet);\r\n    }\r\n    static relative(row, sheet) {\r\n        return new RowAddress(ReferenceType.RELATIVE, row, sheet);\r\n    }\r\n    static compareByAbsoluteAddress(baseAddress) {\r\n        return (rowA, rowB) => rowA.toSimpleRowAddress(baseAddress).row - rowB.toSimpleRowAddress(baseAddress).row;\r\n    }\r\n    isRowAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE);\r\n    }\r\n    isRowRelative() {\r\n        return (this.type === ReferenceType.RELATIVE);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    moved(toSheet, toRight, toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new RowAddress(this.type, this.row + toBottom, newSheet);\r\n    }\r\n    shiftedByRows(numberOfColumns) {\r\n        return new RowAddress(this.type, this.row + numberOfColumns, this.sheet);\r\n    }\r\n    toSimpleRowAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let row = this.row;\r\n        if (this.isRowRelative()) {\r\n            row = baseAddress.row + this.row;\r\n        }\r\n        return simpleRowAddress(sheet, row);\r\n    }\r\n    shiftRelativeDimensions(toRight, toBottom) {\r\n        const row = this.isRowRelative() ? this.row + toBottom : this.row;\r\n        return new RowAddress(this.type, row, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, toBottom) {\r\n        const row = this.isRowAbsolute() ? this.row + toBottom : this.row;\r\n        return new RowAddress(this.type, row, this.sheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new RowAddress(this.type, this.row, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return this.toSimpleRowAddress(baseAddress).row < 0;\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case ReferenceType.RELATIVE: {\r\n                return `${sheetPart}#ROWR${this.row}`;\r\n            }\r\n            case ReferenceType.ABSOLUTE: {\r\n                return `${sheetPart}#ROWA${this.row}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleRowAddress(baseAddress);\r\n        if (invalidSimpleRowAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\r\n        return `${dollar}${simpleAddress.row + 1}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxRows) {\r\n        return this.row >= maxRows;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport const RANGE_OPERATOR = ':';\r\nexport const ABSOLUTE_OPERATOR = '$';\r\nexport const ALL_WHITESPACE_PATTERN = '\\\\s+';\r\nexport const ODFF_WHITESPACE_PATTERN = '[ \\\\t\\\\n\\\\r]+';\r\nexport const UNICODE_LETTER_PATTERN = 'A-Za-z\\u00C0-\\u02AF';\r\nexport const NON_RESERVED_CHARACTER_PATTERN = `${UNICODE_LETTER_PATTERN}0-9_.`;\r\nexport const UNQUOTED_SHEET_NAME_PATTERN = `[${UNICODE_LETTER_PATTERN}0-9_]+`;\r\nexport const QUOTED_SHEET_NAME_PATTERN = \"'(((?!').|'')*)'\";\r\nexport const SHEET_NAME_PATTERN = `(${UNQUOTED_SHEET_NAME_PATTERN}|${QUOTED_SHEET_NAME_PATTERN})!`;\r\nexport const CELL_REFERENCE_PATTERN = `(${SHEET_NAME_PATTERN})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+\\\\${ABSOLUTE_OPERATOR}?[0-9]+`;\r\nexport const COLUMN_REFERENCE_PATTERN = `(${SHEET_NAME_PATTERN})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+`;\r\nexport const ROW_REFERENCE_PATTERN = `(${SHEET_NAME_PATTERN})?\\\\${ABSOLUTE_OPERATOR}?[0-9]+`;\r\nexport const R1C1_CELL_REFERENCE_PATTERN = '[rR][0-9]*[cC][0-9]*';\r\nexport const CELL_REFERENCE_WITH_NEXT_CHARACTER_PATTERN = `(${CELL_REFERENCE_PATTERN})[^${NON_RESERVED_CHARACTER_PATTERN}]`;\r\nexport const NAMED_EXPRESSION_PATTERN = `[${UNICODE_LETTER_PATTERN}_][${NON_RESERVED_CHARACTER_PATTERN}]*`;\r\nexport const ALL_DIGITS_ARRAY = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\nexport const ALL_UNICODE_LETTERS_ARRAY = [\r\n    ...Array.from(Array(26)).map((_, i) => i + 'A'.charCodeAt(0)),\r\n    ...Array.from(Array(26)).map((_, i) => i + 'a'.charCodeAt(0)),\r\n    ...Array.from(Array(0x02AF - 0x00C0 + 1)).map((_, i) => i + 0x00C0),\r\n].map(code => String.fromCharCode(code));\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { tokenMatcher } from 'chevrotain';\r\nimport { ErrorType } from '../Cell';\r\nimport { AstNodeType, buildParsingErrorAst, CellAddress, collectDependencies } from './';\r\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\r\nimport { imageWithWhitespace, ParsingErrorType, RangeSheetReferenceType } from './Ast';\r\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\r\nimport { Cache } from './Cache';\r\nimport { FormulaLexer, FormulaParser } from './FormulaParser';\r\nimport { buildLexerConfig, CellReference, ColumnRange, ProcedureName, RowRange, } from './LexerConfig';\r\nimport { formatNumber } from './Unparser';\r\nimport { ColumnAddress } from './ColumnAddress';\r\nimport { RowAddress } from './RowAddress';\r\n/**\r\n * Parses formula using caching if feasible.\r\n */\r\nexport class ParserWithCaching {\r\n    constructor(config, functionRegistry, sheetMapping) {\r\n        this.config = config;\r\n        this.functionRegistry = functionRegistry;\r\n        this.sheetMapping = sheetMapping;\r\n        this.statsCacheUsed = 0;\r\n        this.lexerConfig = buildLexerConfig(config);\r\n        this.lexer = new FormulaLexer(this.lexerConfig);\r\n        this.formulaParser = new FormulaParser(this.lexerConfig, this.sheetMapping);\r\n        this.cache = new Cache(this.functionRegistry);\r\n    }\r\n    /**\r\n     * Parses a formula.\r\n     *\r\n     * @param text - formula to parse\r\n     * @param formulaAddress - address with regard to which formula should be parsed. Impacts computed addresses in R0C0 format.\r\n     */\r\n    parse(text, formulaAddress) {\r\n        this.formulaAddress = formulaAddress;\r\n        const lexerResult = this.tokenizeFormula(text);\r\n        if (lexerResult.errors.length > 0) {\r\n            const errors = lexerResult.errors.map((e) => ({\r\n                type: ParsingErrorType.LexingError,\r\n                message: e.message,\r\n            }));\r\n            return {\r\n                ast: buildParsingErrorAst(),\r\n                errors,\r\n                hasVolatileFunction: false,\r\n                hasStructuralChangeFunction: false,\r\n                dependencies: []\r\n            };\r\n        }\r\n        const hash = this.computeHashFromTokens(lexerResult.tokens, formulaAddress);\r\n        let cacheResult = this.cache.get(hash);\r\n        if (cacheResult !== undefined) {\r\n            ++this.statsCacheUsed;\r\n        }\r\n        else {\r\n            const processedTokens = this.bindWhitespacesToTokens(lexerResult.tokens);\r\n            const parsingResult = this.formulaParser.parseFromTokens(processedTokens, formulaAddress);\r\n            if (parsingResult.errors.length > 0) {\r\n                return Object.assign(Object.assign({}, parsingResult), { hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] });\r\n            }\r\n            else {\r\n                cacheResult = this.cache.set(hash, parsingResult.ast);\r\n            }\r\n        }\r\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction } = cacheResult;\r\n        const astWithNoReversedRanges = this.convertReversedRangesToRegularRanges(ast);\r\n        const dependencies = collectDependencies(astWithNoReversedRanges, this.functionRegistry);\r\n        return { ast: astWithNoReversedRanges, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies };\r\n    }\r\n    convertReversedRangesToRegularRanges(ast) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY:\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.STRING:\r\n            case AstNodeType.ERROR:\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.CELL_REFERENCE:\r\n            case AstNodeType.NAMED_EXPRESSION:\r\n                return ast;\r\n            case AstNodeType.CELL_RANGE: {\r\n                const { start, end } = ast;\r\n                const orderedEnds = this.orderCellRangeEnds(start, end);\r\n                return Object.assign(Object.assign({}, ast), { start: orderedEnds.start, end: orderedEnds.end });\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                const { start, end } = ast;\r\n                const orderedEnds = this.orderColumnRangeEnds(start, end);\r\n                return Object.assign(Object.assign({}, ast), { start: orderedEnds.start, end: orderedEnds.end });\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                const { start, end } = ast;\r\n                const orderedEnds = this.orderRowRangeEnds(start, end);\r\n                return Object.assign(Object.assign({}, ast), { start: orderedEnds.start, end: orderedEnds.end });\r\n            }\r\n            case AstNodeType.PERCENT_OP:\r\n            case AstNodeType.PLUS_UNARY_OP:\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const valueFixed = this.convertReversedRangesToRegularRanges(ast.value);\r\n                return Object.assign(Object.assign({}, ast), { value: valueFixed });\r\n            }\r\n            case AstNodeType.CONCATENATE_OP:\r\n            case AstNodeType.EQUALS_OP:\r\n            case AstNodeType.NOT_EQUAL_OP:\r\n            case AstNodeType.LESS_THAN_OP:\r\n            case AstNodeType.GREATER_THAN_OP:\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.MINUS_OP:\r\n            case AstNodeType.PLUS_OP:\r\n            case AstNodeType.TIMES_OP:\r\n            case AstNodeType.DIV_OP:\r\n            case AstNodeType.POWER_OP: {\r\n                const leftFixed = this.convertReversedRangesToRegularRanges(ast.left);\r\n                const rightFixed = this.convertReversedRangesToRegularRanges(ast.right);\r\n                return Object.assign(Object.assign({}, ast), { left: leftFixed, right: rightFixed });\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const exprFixed = this.convertReversedRangesToRegularRanges(ast.expression);\r\n                return Object.assign(Object.assign({}, ast), { expression: exprFixed });\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const argsFixed = ast.args.map(arg => this.convertReversedRangesToRegularRanges(arg));\r\n                return Object.assign(Object.assign({}, ast), { args: argsFixed });\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const argsFixed = ast.args.map(argsRow => argsRow.map(arg => this.convertReversedRangesToRegularRanges(arg)));\r\n                return Object.assign(Object.assign({}, ast), { args: argsFixed });\r\n            }\r\n        }\r\n    }\r\n    orderCellRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startCol, endCol] = ends.map(e => e.toColumnAddress()).sort(ColumnAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startRow, endRow] = ends.map(e => e.toRowAddress()).sort(RowAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(ParserWithCaching.compareSheetIds.bind(this));\r\n        return {\r\n            start: CellAddress.fromColAndRow(startCol, startRow, startSheet),\r\n            end: CellAddress.fromColAndRow(endCol, endRow, endSheet),\r\n        };\r\n    }\r\n    orderColumnRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startCol, endCol] = ends.sort(ColumnAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(ParserWithCaching.compareSheetIds.bind(this));\r\n        return {\r\n            start: new ColumnAddress(startCol.type, startCol.col, startSheet),\r\n            end: new ColumnAddress(endCol.type, endCol.col, endSheet),\r\n        };\r\n    }\r\n    orderRowRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startRow, endRow] = ends.sort(RowAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(ParserWithCaching.compareSheetIds.bind(this));\r\n        return {\r\n            start: new RowAddress(startRow.type, startRow.row, startSheet),\r\n            end: new RowAddress(endRow.type, endRow.row, endSheet),\r\n        };\r\n    }\r\n    static compareSheetIds(sheetA, sheetB) {\r\n        sheetA = sheetA != null ? sheetA : Infinity;\r\n        sheetB = sheetB != null ? sheetB : Infinity;\r\n        return sheetA - sheetB;\r\n    }\r\n    fetchCachedResultForAst(ast) {\r\n        const hash = this.computeHashFromAst(ast);\r\n        return this.fetchCachedResult(hash);\r\n    }\r\n    fetchCachedResult(hash) {\r\n        const cacheResult = this.cache.get(hash);\r\n        if (cacheResult === undefined) {\r\n            throw new Error('There is no AST with such key in the cache');\r\n        }\r\n        else {\r\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\r\n            return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\r\n        }\r\n    }\r\n    computeHashFromTokens(tokens, baseAddress) {\r\n        var _a;\r\n        let hash = '';\r\n        let idx = 0;\r\n        while (idx < tokens.length) {\r\n            const token = tokens[idx];\r\n            if (tokenMatcher(token, CellReference)) {\r\n                const cellAddress = cellAddressFromString(this.sheetMapping, token.image, baseAddress);\r\n                if (cellAddress === undefined) {\r\n                    hash = hash.concat(token.image);\r\n                }\r\n                else {\r\n                    hash = hash.concat(cellAddress.hash(true));\r\n                }\r\n            }\r\n            else if (tokenMatcher(token, ProcedureName)) {\r\n                const procedureName = token.image.toUpperCase().slice(0, -1);\r\n                const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\r\n                hash = hash.concat(canonicalProcedureName, '(');\r\n            }\r\n            else if (tokenMatcher(token, ColumnRange)) {\r\n                const [start, end] = token.image.split(':');\r\n                const startAddress = columnAddressFromString(this.sheetMapping, start, baseAddress);\r\n                const endAddress = columnAddressFromString(this.sheetMapping, end, baseAddress);\r\n                if (startAddress === undefined || endAddress === undefined) {\r\n                    hash = hash.concat('!REF');\r\n                }\r\n                else {\r\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\r\n                }\r\n            }\r\n            else if (tokenMatcher(token, RowRange)) {\r\n                const [start, end] = token.image.split(':');\r\n                const startAddress = rowAddressFromString(this.sheetMapping, start, baseAddress);\r\n                const endAddress = rowAddressFromString(this.sheetMapping, end, baseAddress);\r\n                if (startAddress === undefined || endAddress === undefined) {\r\n                    hash = hash.concat('!REF');\r\n                }\r\n                else {\r\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\r\n                }\r\n            }\r\n            else {\r\n                hash = hash.concat(token.image);\r\n            }\r\n            idx++;\r\n        }\r\n        return hash;\r\n    }\r\n    rememberNewAst(ast) {\r\n        const hash = this.computeHashFromAst(ast);\r\n        return this.cache.maybeSetAndThenGet(hash, ast);\r\n    }\r\n    computeHashFromAst(ast) {\r\n        return '=' + this.computeHashOfAstNode(ast);\r\n    }\r\n    computeHashOfAstNode(ast) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return ast.leadingWhitespace || '';\r\n            }\r\n            case AstNodeType.NUMBER: {\r\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.STRING: {\r\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                return imageWithWhitespace(ast.expressionName, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const args = ast.args.map((arg) => this.computeHashOfAstNode(arg)).join(this.config.functionArgSeparator);\r\n                const rightPart = ast.procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                return imageWithWhitespace(ast.reference.hash(true), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                const start = ast.start.hash(ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE);\r\n                const end = ast.end.hash(ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE);\r\n                return imageWithWhitespace(start + ':' + end, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                return imageWithWhitespace('-' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                return imageWithWhitespace('+' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                return this.computeHashOfAstNode(ast.value) + imageWithWhitespace('%', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR: {\r\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\r\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const args = ast.args.map(row => row.map(val => this.computeHashOfAstNode(val)).join(',')).join(';');\r\n                return imageWithWhitespace('{' + args + imageWithWhitespace('}', ast.internalWhitespace), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const expression = this.computeHashOfAstNode(ast.expression);\r\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            default: {\r\n                return this.computeHashOfAstNode(ast.left) + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + this.computeHashOfAstNode(ast.right);\r\n            }\r\n        }\r\n    }\r\n    bindWhitespacesToTokens(tokens) {\r\n        const processedTokens = [];\r\n        const first = tokens[0];\r\n        if (!tokenMatcher(first, this.lexerConfig.WhiteSpace)) {\r\n            processedTokens.push(first);\r\n        }\r\n        for (let i = 1; i < tokens.length; ++i) {\r\n            const current = tokens[i];\r\n            if (tokenMatcher(current, this.lexerConfig.WhiteSpace)) {\r\n                continue;\r\n            }\r\n            const previous = tokens[i - 1];\r\n            if (tokenMatcher(previous, this.lexerConfig.WhiteSpace)) {\r\n                current.leadingWhitespace = previous;\r\n            }\r\n            processedTokens.push(current);\r\n        }\r\n        return processedTokens;\r\n    }\r\n    tokenizeFormula(text) {\r\n        return this.lexer.tokenizeFormula(text);\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__85__;","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../Cell';\r\nexport const parsingError = (type, message) => ({\r\n    type, message\r\n});\r\nexport var ParsingErrorType;\r\n(function (ParsingErrorType) {\r\n    ParsingErrorType[\"LexingError\"] = \"LexingError\";\r\n    ParsingErrorType[\"ParserError\"] = \"ParsingError\";\r\n    ParsingErrorType[\"StaticOffsetError\"] = \"StaticOffsetError\";\r\n    ParsingErrorType[\"StaticOffsetOutOfRangeError\"] = \"StaticOffsetOutOfRangeError\";\r\n    ParsingErrorType[\"RangeOffsetNotAllowed\"] = \"RangeOffsetNotAllowed\";\r\n})(ParsingErrorType || (ParsingErrorType = {}));\r\nexport var AstNodeType;\r\n(function (AstNodeType) {\r\n    AstNodeType[\"EMPTY\"] = \"EMPTY\";\r\n    AstNodeType[\"NUMBER\"] = \"NUMBER\";\r\n    AstNodeType[\"STRING\"] = \"STRING\";\r\n    AstNodeType[\"MINUS_UNARY_OP\"] = \"MINUS_UNARY_OP\";\r\n    AstNodeType[\"PLUS_UNARY_OP\"] = \"PLUS_UNARY_OP\";\r\n    AstNodeType[\"PERCENT_OP\"] = \"PERCENT_OP\";\r\n    AstNodeType[\"CONCATENATE_OP\"] = \"CONCATENATE_OP\";\r\n    AstNodeType[\"EQUALS_OP\"] = \"EQUALS_OP\";\r\n    AstNodeType[\"NOT_EQUAL_OP\"] = \"NOT_EQUAL_OP\";\r\n    AstNodeType[\"GREATER_THAN_OP\"] = \"GREATER_THAN_OP\";\r\n    AstNodeType[\"LESS_THAN_OP\"] = \"LESS_THAN_OP\";\r\n    AstNodeType[\"GREATER_THAN_OR_EQUAL_OP\"] = \"GREATER_THAN_OR_EQUAL_OP\";\r\n    AstNodeType[\"LESS_THAN_OR_EQUAL_OP\"] = \"LESS_THAN_OR_EQUAL_OP\";\r\n    AstNodeType[\"PLUS_OP\"] = \"PLUS_OP\";\r\n    AstNodeType[\"MINUS_OP\"] = \"MINUS_OP\";\r\n    AstNodeType[\"TIMES_OP\"] = \"TIMES_OP\";\r\n    AstNodeType[\"DIV_OP\"] = \"DIV_OP\";\r\n    AstNodeType[\"POWER_OP\"] = \"POWER_OP\";\r\n    AstNodeType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\r\n    AstNodeType[\"NAMED_EXPRESSION\"] = \"NAMED_EXPRESSION\";\r\n    AstNodeType[\"PARENTHESIS\"] = \"PARENTHESES\";\r\n    AstNodeType[\"CELL_REFERENCE\"] = \"CELL_REFERENCE\";\r\n    AstNodeType[\"CELL_RANGE\"] = \"CELL_RANGE\";\r\n    AstNodeType[\"COLUMN_RANGE\"] = \"COLUMN_RANGE\";\r\n    AstNodeType[\"ROW_RANGE\"] = \"ROW_RANGE\";\r\n    AstNodeType[\"ERROR\"] = \"ERROR\";\r\n    AstNodeType[\"ERROR_WITH_RAW_INPUT\"] = \"ERROR_WITH_RAW_INPUT\";\r\n    AstNodeType[\"ARRAY\"] = \"ARRAY\";\r\n})(AstNodeType || (AstNodeType = {}));\r\nexport var RangeSheetReferenceType;\r\n(function (RangeSheetReferenceType) {\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"RELATIVE\"] = 0] = \"RELATIVE\";\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"START_ABSOLUTE\"] = 1] = \"START_ABSOLUTE\";\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"BOTH_ABSOLUTE\"] = 2] = \"BOTH_ABSOLUTE\";\r\n})(RangeSheetReferenceType || (RangeSheetReferenceType = {}));\r\nexport const buildEmptyArgAst = (leadingWhitespace) => ({\r\n    type: AstNodeType.EMPTY,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildNumberAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.NUMBER,\r\n    value: value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildStringAst = (token) => {\r\n    var _a;\r\n    return ({\r\n        type: AstNodeType.STRING,\r\n        value: token.image.slice(1, -1),\r\n        leadingWhitespace: (_a = token.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image,\r\n    });\r\n};\r\nexport const buildCellReferenceAst = (reference, leadingWhitespace) => ({\r\n    type: AstNodeType.CELL_REFERENCE,\r\n    reference,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildCellRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.CELL_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace\r\n    };\r\n};\r\nexport const buildColumnRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.COLUMN_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    };\r\n};\r\nexport const buildRowRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.ROW_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    };\r\n};\r\nexport const buildConcatenateOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.CONCATENATE_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildEqualsOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.EQUALS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildNotEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.NOT_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildGreaterThanOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.GREATER_THAN_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildLessThanOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.LESS_THAN_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildGreaterThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.GREATER_THAN_OR_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildLessThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.LESS_THAN_OR_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPlusOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.PLUS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildMinusOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.MINUS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildTimesOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.TIMES_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildDivOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.DIV_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPowerOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.POWER_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildMinusUnaryOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.MINUS_UNARY_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPlusUnaryOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.PLUS_UNARY_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPercentOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.PERCENT_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildProcedureAst = (procedureName, args, leadingWhitespace, internalWhitespace, hyperlink) => ({\r\n    type: AstNodeType.FUNCTION_CALL,\r\n    procedureName,\r\n    args,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n    hyperlink\r\n});\r\nexport const buildArrayAst = (args, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.ARRAY,\r\n    args,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildNamedExpressionAst = (expressionName, leadingWhitespace) => ({\r\n    type: AstNodeType.NAMED_EXPRESSION,\r\n    expressionName,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildParenthesisAst = (expression, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.PARENTHESIS,\r\n    expression,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildCellErrorAst = (error, leadingWhitespace) => ({\r\n    type: AstNodeType.ERROR,\r\n    error,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildErrorWithRawInputAst = (rawInput, error, leadingWhitespace) => ({\r\n    type: AstNodeType.ERROR_WITH_RAW_INPUT,\r\n    error,\r\n    rawInput,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildParsingErrorAst = () => ({\r\n    type: AstNodeType.ERROR,\r\n    error: CellError.parsingError()\r\n});\r\nfunction assertRangeConsistency(start, end, sheetReferenceType) {\r\n    if ((start.sheet !== undefined && end.sheet === undefined) || (start.sheet === undefined && end.sheet !== undefined)) {\r\n        throw new Error('Start address inconsistent with end address');\r\n    }\r\n    if ((start.sheet === undefined && sheetReferenceType !== RangeSheetReferenceType.RELATIVE)\r\n        || (start.sheet !== undefined && sheetReferenceType === RangeSheetReferenceType.RELATIVE)) {\r\n        throw new Error('Sheet address inconsistent with sheet reference type');\r\n    }\r\n}\r\nexport function imageWithWhitespace(image, leadingWhitespace) {\r\n    return (leadingWhitespace !== null && leadingWhitespace !== void 0 ? leadingWhitespace : '') + image;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AstNodeType } from './Ast';\r\nexport const binaryOpTokenMap = {\r\n    [AstNodeType.PLUS_OP]: '+',\r\n    [AstNodeType.MINUS_OP]: '-',\r\n    [AstNodeType.TIMES_OP]: '*',\r\n    [AstNodeType.DIV_OP]: '/',\r\n    [AstNodeType.CONCATENATE_OP]: '&',\r\n    [AstNodeType.POWER_OP]: '^',\r\n    [AstNodeType.EQUALS_OP]: '=',\r\n    [AstNodeType.NOT_EQUAL_OP]: '<>',\r\n    [AstNodeType.GREATER_THAN_OP]: '>',\r\n    [AstNodeType.GREATER_THAN_OR_EQUAL_OP]: '>=',\r\n    [AstNodeType.LESS_THAN_OP]: '<',\r\n    [AstNodeType.LESS_THAN_OR_EQUAL_OP]: '<=',\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AstNodeType, collectDependencies } from './';\r\nconst buildCacheEntry = (ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) => ({\r\n    ast,\r\n    relativeDependencies,\r\n    hasVolatileFunction,\r\n    hasStructuralChangeFunction\r\n});\r\nexport class Cache {\r\n    constructor(functionRegistry) {\r\n        this.functionRegistry = functionRegistry;\r\n        this.cache = new Map();\r\n    }\r\n    set(hash, ast) {\r\n        const astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\r\n        const cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\r\n        this.cache.set(hash, cacheEntry);\r\n        return cacheEntry;\r\n    }\r\n    get(hash) {\r\n        return this.cache.get(hash);\r\n    }\r\n    maybeSetAndThenGet(hash, ast) {\r\n        const entryFromCache = this.cache.get(hash);\r\n        if (entryFromCache !== undefined) {\r\n            return entryFromCache.ast;\r\n        }\r\n        else {\r\n            this.set(hash, ast);\r\n            return ast;\r\n        }\r\n    }\r\n}\r\nexport const doesContainFunctions = (ast, functionCriterion) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n        case AstNodeType.CELL_REFERENCE:\r\n        case AstNodeType.CELL_RANGE:\r\n        case AstNodeType.COLUMN_RANGE:\r\n        case AstNodeType.ROW_RANGE:\r\n        case AstNodeType.NAMED_EXPRESSION:\r\n            return false;\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            return doesContainFunctions(ast.value, functionCriterion);\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\r\n        case AstNodeType.PARENTHESIS:\r\n            return doesContainFunctions(ast.expression, functionCriterion);\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            if (functionCriterion(ast.procedureName)) {\r\n                return true;\r\n            }\r\n            return ast.args.some((arg) => doesContainFunctions(arg, functionCriterion));\r\n        }\r\n        case AstNodeType.ARRAY: {\r\n            return ast.args.some(row => row.some(arg => doesContainFunctions(arg, functionCriterion)));\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { EmbeddedActionsParser, EMPTY_ALT, Lexer, tokenMatcher } from 'chevrotain';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\r\nimport { AstNodeType, buildArrayAst, buildCellErrorAst, buildCellRangeAst, buildCellReferenceAst, buildColumnRangeAst, buildConcatenateOpAst, buildDivOpAst, buildEmptyArgAst, buildEqualsOpAst, buildErrorWithRawInputAst, buildGreaterThanOpAst, buildGreaterThanOrEqualOpAst, buildLessThanOpAst, buildLessThanOrEqualOpAst, buildMinusOpAst, buildMinusUnaryOpAst, buildNamedExpressionAst, buildNotEqualOpAst, buildNumberAst, buildParenthesisAst, buildParsingErrorAst, buildPercentOpAst, buildPlusOpAst, buildPlusUnaryOpAst, buildPowerOpAst, buildProcedureAst, buildRowRangeAst, buildStringAst, buildTimesOpAst, parsingError, ParsingErrorType, RangeSheetReferenceType, } from './Ast';\r\nimport { CellAddress, CellReferenceType } from './CellAddress';\r\nimport { AdditionOp, ArrayLParen, ArrayRParen, BooleanOp, CellReference, ColumnRange, ConcatenateOp, DivOp, EqualsOp, ErrorLiteral, GreaterThanOp, GreaterThanOrEqualOp, LessThanOp, LessThanOrEqualOp, LParen, MinusOp, MultiplicationOp, NamedExpression, NotEqualOp, PercentOp, PlusOp, PowerOp, ProcedureName, RangeSeparator, RowRange, RParen, StringLiteral, TimesOp, } from './LexerConfig';\r\n/**\r\n * LL(k) formula parser described using Chevrotain DSL\r\n *\r\n * It is equivalent to the grammar below:\r\n *\r\n * F -> '=' E <br/>\r\n * B -> K < B | K >= B ... | K <br/>\r\n * K -> E & K | E <br/>\r\n * E -> M + E | M - E | M <br/>\r\n * M -> W * M | W / M | W <br/>\r\n * W -> C * W | C <br/>\r\n * C -> N | R | O | A | P | num <br/>\r\n * N -> '(' E ')' <br/>\r\n * R -> A:OFFSET(..) | A:A <br/>\r\n * O -> OFFSET(..) | OFFSET(..):A | OFFSET(..):OFFSET(..) <br/>\r\n * A -> A1 | $A1 | A$1 | $A$1 <br/>\r\n * P -> SUM(..) <br/>\r\n */\r\nexport class FormulaParser extends EmbeddedActionsParser {\r\n    constructor(lexerConfig, sheetMapping) {\r\n        super(lexerConfig.allTokens, { outputCst: false, maxLookahead: 7 });\r\n        this.booleanExpressionOrEmpty = this.RULE('booleanExpressionOrEmpty', () => {\r\n            return this.OR([\r\n                { ALT: () => this.SUBRULE(this.booleanExpression) },\r\n                { ALT: EMPTY_ALT(buildEmptyArgAst()) }\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for procedure expressions: SUM(1,A1)\r\n         */\r\n        this.procedureExpression = this.RULE('procedureExpression', () => {\r\n            var _a;\r\n            const procedureNameToken = this.CONSUME(ProcedureName);\r\n            const procedureName = procedureNameToken.image.toUpperCase().slice(0, -1);\r\n            const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\r\n            const args = [];\r\n            let argument = this.SUBRULE(this.booleanExpressionOrEmpty);\r\n            this.MANY(() => {\r\n                var _a;\r\n                const separator = this.CONSUME(this.lexerConfig.ArgSeparator);\r\n                if (argument.type === AstNodeType.EMPTY) {\r\n                    argument.leadingWhitespace = (_a = separator.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image;\r\n                }\r\n                args.push(argument);\r\n                argument = this.SUBRULE2(this.booleanExpressionOrEmpty);\r\n            });\r\n            args.push(argument);\r\n            if (args.length === 1 && args[0].type === AstNodeType.EMPTY) {\r\n                args.length = 0;\r\n            }\r\n            const rParenToken = this.CONSUME(RParen);\r\n            return buildProcedureAst(canonicalProcedureName, args, procedureNameToken.leadingWhitespace, rParenToken.leadingWhitespace);\r\n        });\r\n        this.namedExpressionExpression = this.RULE('namedExpressionExpression', () => {\r\n            const name = this.CONSUME(NamedExpression);\r\n            return buildNamedExpressionAst(name.image, name.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for OFFSET() function expression\r\n         */\r\n        this.offsetProcedureExpression = this.RULE('offsetProcedureExpression', () => {\r\n            const args = [];\r\n            this.CONSUME(this.lexerConfig.OffsetProcedureName);\r\n            this.CONSUME(LParen);\r\n            this.MANY_SEP({\r\n                SEP: this.lexerConfig.ArgSeparator,\r\n                DEF: () => {\r\n                    args.push(this.SUBRULE(this.booleanExpression));\r\n                },\r\n            });\r\n            this.CONSUME(RParen);\r\n            return this.handleOffsetHeuristic(args);\r\n        });\r\n        /**\r\n         * Rule for column range, e.g. A:B, Sheet1!A:B, Sheet1!A:Sheet1!B\r\n         */\r\n        this.columnRangeExpression = this.RULE('columnRangeExpression', () => {\r\n            const range = this.CONSUME(ColumnRange);\r\n            const [startImage, endImage] = range.image.split(':');\r\n            const firstAddress = this.ACTION(() => columnAddressFromString(this.sheetMapping, startImage, this.formulaAddress));\r\n            const secondAddress = this.ACTION(() => columnAddressFromString(this.sheetMapping, endImage, this.formulaAddress));\r\n            if (firstAddress === undefined || secondAddress === undefined) {\r\n                return buildCellErrorAst(new CellError(ErrorType.REF));\r\n            }\r\n            if (firstAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns) || secondAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns)) {\r\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\r\n            }\r\n            if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n            }\r\n            const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n            return buildColumnRangeAst(firstEnd, secondEnd, sheetRefType, range.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for row range, e.g. 1:2, Sheet1!1:2, Sheet1!1:Sheet1!2\r\n         */\r\n        this.rowRangeExpression = this.RULE('rowRangeExpression', () => {\r\n            const range = this.CONSUME(RowRange);\r\n            const [startImage, endImage] = range.image.split(':');\r\n            const firstAddress = this.ACTION(() => rowAddressFromString(this.sheetMapping, startImage, this.formulaAddress));\r\n            const secondAddress = this.ACTION(() => rowAddressFromString(this.sheetMapping, endImage, this.formulaAddress));\r\n            if (firstAddress === undefined || secondAddress === undefined) {\r\n                return buildCellErrorAst(new CellError(ErrorType.REF));\r\n            }\r\n            if (firstAddress.exceedsSheetSizeLimits(this.lexerConfig.maxRows) || secondAddress.exceedsSheetSizeLimits(this.lexerConfig.maxRows)) {\r\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\r\n            }\r\n            if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n            }\r\n            const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n            return buildRowRangeAst(firstEnd, secondEnd, sheetRefType, range.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for cell reference expression (e.g. A1, $A1, A$1, $A$1, $Sheet42!A$17)\r\n         */\r\n        this.cellReference = this.RULE('cellReference', () => {\r\n            const cell = this.CONSUME(CellReference);\r\n            const address = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, cell.image, this.formulaAddress);\r\n            });\r\n            if (address === undefined) {\r\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.REF), cell.leadingWhitespace);\r\n            }\r\n            else if (address.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\r\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.NAME), cell.leadingWhitespace);\r\n            }\r\n            else {\r\n                return buildCellReferenceAst(address, cell.leadingWhitespace);\r\n            }\r\n        });\r\n        /**\r\n         * Rule for end range reference expression with additional checks considering range start\r\n         */\r\n        this.endRangeReference = this.RULE('endRangeReference', (start) => {\r\n            var _a;\r\n            const end = this.CONSUME(CellReference);\r\n            const startAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\r\n            });\r\n            const endAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\r\n            });\r\n            if (startAddress === undefined || endAddress === undefined) {\r\n                return this.ACTION(() => {\r\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.REF), start.leadingWhitespace);\r\n                });\r\n            }\r\n            else if (startAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)\r\n                || endAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\r\n                return this.ACTION(() => {\r\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.NAME), start.leadingWhitespace);\r\n                });\r\n            }\r\n            return this.buildCellRange(startAddress, endAddress, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\r\n        });\r\n        /**\r\n         * Rule for end of range expression\r\n         *\r\n         * End of range may be a cell reference or OFFSET() function call\r\n         */\r\n        this.endOfRangeExpression = this.RULE('endOfRangeExpression', (start) => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        return this.SUBRULE(this.endRangeReference, { ARGS: [start] });\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        var _a;\r\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n                        const startAddress = this.ACTION(() => {\r\n                            return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\r\n                        });\r\n                        if (startAddress === undefined) {\r\n                            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n                        }\r\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\r\n                            return this.buildCellRange(startAddress, offsetProcedure.reference, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                        }\r\n                    },\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for cell ranges (e.g. A1:B$3, A1:OFFSET())\r\n         */\r\n        this.cellRangeExpression = this.RULE('cellRangeExpression', () => {\r\n            const start = this.CONSUME(CellReference);\r\n            this.CONSUME2(RangeSeparator);\r\n            return this.SUBRULE(this.endOfRangeExpression, { ARGS: [start] });\r\n        });\r\n        /**\r\n         * Rule for end range reference expression starting with offset procedure with additional checks considering range start\r\n         */\r\n        this.endRangeWithOffsetStartReference = this.RULE('endRangeWithOffsetStartReference', (start) => {\r\n            const end = this.CONSUME(CellReference);\r\n            const endAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\r\n            });\r\n            if (endAddress === undefined) {\r\n                return this.ACTION(() => {\r\n                    return buildCellErrorAst(new CellError(ErrorType.REF));\r\n                });\r\n            }\r\n            return this.buildCellRange(start.reference, endAddress, start.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for end of range expression\r\n         *\r\n         * End of range may be a cell reference or OFFSET() function call\r\n         */\r\n        this.endOfRangeWithOffsetStartExpression = this.RULE('endOfRangeWithOffsetStartExpression', (start) => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        return this.SUBRULE(this.endRangeWithOffsetStartReference, { ARGS: [start] });\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\r\n                            return this.buildCellRange(start.reference, offsetProcedure.reference, start.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                        }\r\n                    },\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for expressions that start with the OFFSET function.\r\n         *\r\n         * The OFFSET function can occur as a cell reference, or as a part of a cell range.\r\n         * To preserve LL(k) properties, expressions that start with the OFFSET function need a separate rule.\r\n         *\r\n         * Depending on the presence of the {@link RangeSeparator}, a proper {@link Ast} node type is built.\r\n         */\r\n        this.offsetExpression = this.RULE('offsetExpression', () => {\r\n            const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n            let end;\r\n            this.OPTION(() => {\r\n                this.CONSUME(RangeSeparator);\r\n                if (offsetProcedure.type === AstNodeType.CELL_RANGE) {\r\n                    end = this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                }\r\n                else {\r\n                    end = this.SUBRULE(this.endOfRangeWithOffsetStartExpression, { ARGS: [offsetProcedure] });\r\n                }\r\n            });\r\n            if (end !== undefined) {\r\n                return end;\r\n            }\r\n            return offsetProcedure;\r\n        });\r\n        this.insideArrayExpression = this.RULE('insideArrayExpression', () => {\r\n            const ret = [[]];\r\n            ret[ret.length - 1].push(this.SUBRULE(this.booleanExpression));\r\n            this.MANY(() => {\r\n                this.OR([\r\n                    {\r\n                        ALT: () => {\r\n                            this.CONSUME(this.lexerConfig.ArrayColSeparator);\r\n                            ret[ret.length - 1].push(this.SUBRULE2(this.booleanExpression));\r\n                        }\r\n                    },\r\n                    {\r\n                        ALT: () => {\r\n                            this.CONSUME(this.lexerConfig.ArrayRowSeparator);\r\n                            ret.push([]);\r\n                            ret[ret.length - 1].push(this.SUBRULE3(this.booleanExpression));\r\n                        }\r\n                    }\r\n                ]);\r\n            });\r\n            return buildArrayAst(ret);\r\n        });\r\n        /**\r\n         * Rule for parenthesis expression\r\n         */\r\n        this.parenthesisExpression = this.RULE('parenthesisExpression', () => {\r\n            const lParenToken = this.CONSUME(LParen);\r\n            const expression = this.SUBRULE(this.booleanExpression);\r\n            const rParenToken = this.CONSUME(RParen);\r\n            return buildParenthesisAst(expression, lParenToken.leadingWhitespace, rParenToken.leadingWhitespace);\r\n        });\r\n        this.arrayExpression = this.RULE('arrayExpression', () => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        const ltoken = this.CONSUME(ArrayLParen);\r\n                        const ret = this.SUBRULE(this.insideArrayExpression);\r\n                        const rtoken = this.CONSUME(ArrayRParen);\r\n                        return buildArrayAst(ret.args, ltoken.leadingWhitespace, rtoken.leadingWhitespace);\r\n                    }\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.parenthesisExpression)\r\n                }\r\n            ]);\r\n        });\r\n        this.numericStringToNumber = (input) => {\r\n            const normalized = input.replace(this.lexerConfig.decimalSeparator, '.');\r\n            return Number(normalized);\r\n        };\r\n        /**\r\n         * Rule for positive atomic expressions\r\n         */\r\n        this.positiveAtomicExpression = this.RULE('positiveAtomicExpression', () => {\r\n            var _a;\r\n            return this.OR((_a = this.atomicExpCache) !== null && _a !== void 0 ? _a : (this.atomicExpCache = [\r\n                {\r\n                    ALT: () => this.SUBRULE(this.arrayExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.cellRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.columnRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.rowRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.offsetExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.cellReference),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.procedureExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.namedExpressionExpression),\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const number = this.CONSUME(this.lexerConfig.NumberLiteral);\r\n                        return buildNumberAst(this.numericStringToNumber(number.image), number.leadingWhitespace);\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const str = this.CONSUME(StringLiteral);\r\n                        return buildStringAst(str);\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const token = this.CONSUME(ErrorLiteral);\r\n                        const errString = token.image.toUpperCase();\r\n                        const errorType = this.lexerConfig.errorMapping[errString];\r\n                        if (errorType) {\r\n                            return buildCellErrorAst(new CellError(errorType), token.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.ParserError, 'Unknown error literal');\r\n                        }\r\n                    },\r\n                },\r\n            ]));\r\n        });\r\n        this.rightUnaryOpAtomicExpression = this.RULE('rightUnaryOpAtomicExpression', () => {\r\n            const positiveAtomicExpression = this.SUBRULE(this.positiveAtomicExpression);\r\n            const percentage = this.OPTION(() => {\r\n                return this.CONSUME(PercentOp);\r\n            });\r\n            if (percentage) {\r\n                return buildPercentOpAst(positiveAtomicExpression, percentage.leadingWhitespace);\r\n            }\r\n            return positiveAtomicExpression;\r\n        });\r\n        /**\r\n         * Rule for atomic expressions, which is positive atomic expression or negation of it\r\n         */\r\n        this.atomicExpression = this.RULE('atomicExpression', () => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        const op = this.CONSUME(AdditionOp);\r\n                        const value = this.SUBRULE(this.atomicExpression);\r\n                        if (tokenMatcher(op, PlusOp)) {\r\n                            return buildPlusUnaryOpAst(value, op.leadingWhitespace);\r\n                        }\r\n                        else if (tokenMatcher(op, MinusOp)) {\r\n                            return buildMinusUnaryOpAst(value, op.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            this.customParsingError = parsingError(ParsingErrorType.ParserError, 'Mismatched token type');\r\n                            return this.customParsingError;\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE2(this.rightUnaryOpAtomicExpression),\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for power expression\r\n         */\r\n        this.powerExpression = this.RULE('powerExpression', () => {\r\n            let lhs = this.SUBRULE(this.atomicExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(PowerOp);\r\n                const rhs = this.SUBRULE2(this.atomicExpression);\r\n                if (tokenMatcher(op, PowerOp)) {\r\n                    lhs = buildPowerOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for multiplication category operators (e.g. 1 * A1, 1 / A1)\r\n         */\r\n        this.multiplicationExpression = this.RULE('multiplicationExpression', () => {\r\n            let lhs = this.SUBRULE(this.powerExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(MultiplicationOp);\r\n                const rhs = this.SUBRULE2(this.powerExpression);\r\n                if (tokenMatcher(op, TimesOp)) {\r\n                    lhs = buildTimesOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, DivOp)) {\r\n                    lhs = buildDivOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for addition category operators (e.g. 1 + A1, 1 - A1)\r\n         */\r\n        this.additionExpression = this.RULE('additionExpression', () => {\r\n            let lhs = this.SUBRULE(this.multiplicationExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(AdditionOp);\r\n                const rhs = this.SUBRULE2(this.multiplicationExpression);\r\n                if (tokenMatcher(op, PlusOp)) {\r\n                    lhs = buildPlusOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, MinusOp)) {\r\n                    lhs = buildMinusOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for concatenation operator expression (e.g. \"=\" & A1)\r\n         */\r\n        this.concatenateExpression = this.RULE('concatenateExpression', () => {\r\n            let lhs = this.SUBRULE(this.additionExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(ConcatenateOp);\r\n                const rhs = this.SUBRULE2(this.additionExpression);\r\n                lhs = buildConcatenateOpAst(lhs, rhs, op.leadingWhitespace);\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for boolean expression (e.g. 1 <= A1)\r\n         */\r\n        this.booleanExpression = this.RULE('booleanExpression', () => {\r\n            let lhs = this.SUBRULE(this.concatenateExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(BooleanOp);\r\n                const rhs = this.SUBRULE2(this.concatenateExpression);\r\n                if (tokenMatcher(op, EqualsOp)) {\r\n                    lhs = buildEqualsOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, NotEqualOp)) {\r\n                    lhs = buildNotEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, GreaterThanOp)) {\r\n                    lhs = buildGreaterThanOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, LessThanOp)) {\r\n                    lhs = buildLessThanOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, GreaterThanOrEqualOp)) {\r\n                    lhs = buildGreaterThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, LessThanOrEqualOp)) {\r\n                    lhs = buildLessThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Entry rule\r\n         */\r\n        this.formula = this.RULE('formula', () => {\r\n            this.CONSUME(EqualsOp);\r\n            return this.SUBRULE(this.booleanExpression);\r\n        });\r\n        this.lexerConfig = lexerConfig;\r\n        this.sheetMapping = sheetMapping;\r\n        this.formulaAddress = simpleCellAddress(0, 0, 0);\r\n        this.performSelfAnalysis();\r\n    }\r\n    /**\r\n     * Parses tokenized formula and builds abstract syntax tree\r\n     *\r\n     * @param {ExtendedToken[]} tokens - tokenized formula\r\n     * @param {SimpleCellAddress} formulaAddress - address of the cell in which formula is located\r\n     */\r\n    parseFromTokens(tokens, formulaAddress) {\r\n        this.input = tokens;\r\n        let ast = this.formulaWithContext(formulaAddress);\r\n        let errors = [];\r\n        if (this.customParsingError) {\r\n            errors.push(this.customParsingError);\r\n        }\r\n        errors = errors.concat(this.errors.map((e) => ({\r\n            type: ParsingErrorType.ParserError,\r\n            message: e.message,\r\n        })));\r\n        if (errors.length > 0) {\r\n            ast = buildParsingErrorAst();\r\n        }\r\n        return {\r\n            ast,\r\n            errors\r\n        };\r\n    }\r\n    reset() {\r\n        super.reset();\r\n        this.customParsingError = undefined;\r\n    }\r\n    /**\r\n     * Entry rule wrapper that sets formula address\r\n     *\r\n     * @param {SimpleCellAddress} address - address of the cell in which formula is located\r\n     */\r\n    formulaWithContext(address) {\r\n        this.formulaAddress = address;\r\n        return this.formula();\r\n    }\r\n    buildCellRange(firstAddress, secondAddress, leadingWhitespace) {\r\n        if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n            return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n        }\r\n        const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n        return buildCellRangeAst(firstEnd, secondEnd, sheetRefType, leadingWhitespace);\r\n    }\r\n    static fixSheetIdsForRangeEnds(firstEnd, secondEnd) {\r\n        const sheetRefType = FormulaParser.rangeSheetReferenceType(firstEnd.sheet, secondEnd.sheet);\r\n        const secondEndFixed = (firstEnd.sheet !== undefined && secondEnd.sheet === undefined)\r\n            ? secondEnd.withSheet(firstEnd.sheet)\r\n            : secondEnd;\r\n        return { firstEnd, secondEnd: secondEndFixed, sheetRefType };\r\n    }\r\n    /**\r\n     * Returns {@link CellReferenceAst} or {@link CellRangeAst} based on OFFSET function arguments\r\n     *\r\n     * @param {Ast[]} args - OFFSET function arguments\r\n     */\r\n    handleOffsetHeuristic(args) {\r\n        const cellArg = args[0];\r\n        if (cellArg.type !== AstNodeType.CELL_REFERENCE) {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'First argument to OFFSET is not a reference');\r\n        }\r\n        const rowsArg = args[1];\r\n        let rowShift;\r\n        if (rowsArg.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value)) {\r\n            rowShift = rowsArg.value;\r\n        }\r\n        else if (rowsArg.type === AstNodeType.PLUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\r\n            rowShift = rowsArg.value.value;\r\n        }\r\n        else if (rowsArg.type === AstNodeType.MINUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\r\n            rowShift = -rowsArg.value.value;\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Second argument to OFFSET is not a static number');\r\n        }\r\n        const columnsArg = args[2];\r\n        let colShift;\r\n        if (columnsArg.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value)) {\r\n            colShift = columnsArg.value;\r\n        }\r\n        else if (columnsArg.type === AstNodeType.PLUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\r\n            colShift = columnsArg.value.value;\r\n        }\r\n        else if (columnsArg.type === AstNodeType.MINUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\r\n            colShift = -columnsArg.value.value;\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Third argument to OFFSET is not a static number');\r\n        }\r\n        const heightArg = args[3];\r\n        let height;\r\n        if (heightArg === undefined) {\r\n            height = 1;\r\n        }\r\n        else if (heightArg.type === AstNodeType.NUMBER) {\r\n            height = heightArg.value;\r\n            if (height < 1) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is too small number');\r\n            }\r\n            else if (!Number.isInteger(height)) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not integer');\r\n            }\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not a static number');\r\n        }\r\n        const widthArg = args[4];\r\n        let width;\r\n        if (widthArg === undefined) {\r\n            width = 1;\r\n        }\r\n        else if (widthArg.type === AstNodeType.NUMBER) {\r\n            width = widthArg.value;\r\n            if (width < 1) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is too small number');\r\n            }\r\n            else if (!Number.isInteger(width)) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not integer');\r\n            }\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not a static number');\r\n        }\r\n        const topLeftCorner = new CellAddress(cellArg.reference.col + colShift, cellArg.reference.row + rowShift, cellArg.reference.type);\r\n        let absoluteCol = topLeftCorner.col;\r\n        let absoluteRow = topLeftCorner.row;\r\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\r\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\r\n            absoluteRow = absoluteRow + this.formulaAddress.row;\r\n        }\r\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\r\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            absoluteCol = absoluteCol + this.formulaAddress.col;\r\n        }\r\n        if (absoluteCol < 0 || absoluteRow < 0) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF, ErrorMessage.OutOfSheet));\r\n        }\r\n        if (width === 1 && height === 1) {\r\n            return buildCellReferenceAst(topLeftCorner);\r\n        }\r\n        else {\r\n            const bottomRightCorner = new CellAddress(topLeftCorner.col + width - 1, topLeftCorner.row + height - 1, topLeftCorner.type);\r\n            return buildCellRangeAst(topLeftCorner, bottomRightCorner, RangeSheetReferenceType.RELATIVE);\r\n        }\r\n    }\r\n    parsingError(type, message) {\r\n        this.customParsingError = parsingError(type, message);\r\n        return buildParsingErrorAst();\r\n    }\r\n    static rangeSheetReferenceType(start, end) {\r\n        if (start === undefined) {\r\n            return RangeSheetReferenceType.RELATIVE;\r\n        }\r\n        else if (end === undefined) {\r\n            return RangeSheetReferenceType.START_ABSOLUTE;\r\n        }\r\n        else {\r\n            return RangeSheetReferenceType.BOTH_ABSOLUTE;\r\n        }\r\n    }\r\n}\r\nexport class FormulaLexer {\r\n    constructor(lexerConfig) {\r\n        this.lexerConfig = lexerConfig;\r\n        this.lexer = new Lexer(lexerConfig.allTokens, { ensureOptimizations: true });\r\n    }\r\n    /**\r\n     * Returns Lexer tokens from formula string\r\n     *\r\n     * @param {string} text - string representation of a formula\r\n     */\r\n    tokenizeFormula(text) {\r\n        const lexingResult = this.lexer.tokenize(text);\r\n        let tokens = lexingResult.tokens;\r\n        tokens = this.trimTrailingWhitespaces(tokens);\r\n        tokens = this.skipWhitespacesInsideRanges(tokens);\r\n        tokens = this.skipWhitespacesBeforeArgSeparators(tokens);\r\n        lexingResult.tokens = tokens;\r\n        return lexingResult;\r\n    }\r\n    skipWhitespacesInsideRanges(tokens) {\r\n        return FormulaLexer.filterTokensByNeighbors(tokens, (previous, current, next) => {\r\n            return (tokenMatcher(previous, CellReference) || tokenMatcher(previous, RangeSeparator))\r\n                && tokenMatcher(current, this.lexerConfig.WhiteSpace)\r\n                && (tokenMatcher(next, CellReference) || tokenMatcher(next, RangeSeparator));\r\n        });\r\n    }\r\n    skipWhitespacesBeforeArgSeparators(tokens) {\r\n        return FormulaLexer.filterTokensByNeighbors(tokens, (previous, current, next) => {\r\n            return !tokenMatcher(previous, this.lexerConfig.ArgSeparator)\r\n                && tokenMatcher(current, this.lexerConfig.WhiteSpace)\r\n                && tokenMatcher(next, this.lexerConfig.ArgSeparator);\r\n        });\r\n    }\r\n    static filterTokensByNeighbors(tokens, shouldBeSkipped) {\r\n        if (tokens.length < 3) {\r\n            return tokens;\r\n        }\r\n        let i = 0;\r\n        const filteredTokens = [tokens[i++]];\r\n        while (i < tokens.length - 1) {\r\n            if (!shouldBeSkipped(tokens[i - 1], tokens[i], tokens[i + 1])) {\r\n                filteredTokens.push(tokens[i]);\r\n            }\r\n            ++i;\r\n        }\r\n        filteredTokens.push(tokens[i]);\r\n        return filteredTokens;\r\n    }\r\n    trimTrailingWhitespaces(tokens) {\r\n        if (tokens.length > 0 && tokenMatcher(tokens[tokens.length - 1], this.lexerConfig.WhiteSpace)) {\r\n            tokens.pop();\r\n        }\r\n        return tokens;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * This is a class for detailed error messages across HyperFormula.\r\n */\r\nexport class ErrorMessage {\r\n}\r\nErrorMessage.DistinctSigns = 'Distinct signs.';\r\nErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\r\nErrorMessage.EmptyArg = 'Empty function argument.';\r\nErrorMessage.EmptyArray = 'Empty array not allowed.';\r\nErrorMessage.ArrayDimensions = 'Array dimensions are not compatible.';\r\nErrorMessage.NoSpaceForArrayResult = 'No space for array result.';\r\nErrorMessage.ValueSmall = 'Value too small.';\r\nErrorMessage.ValueLarge = 'Value too large.';\r\nErrorMessage.BadCriterion = 'Incorrect criterion.';\r\nErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\r\nErrorMessage.CellRangeExpected = 'Cell range expected.';\r\nErrorMessage.WrongDimension = 'Wrong range dimension.';\r\nErrorMessage.ScalarExpected = 'Cell range not allowed.';\r\nErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\r\nErrorMessage.NumberExpected = 'Number argument expected.';\r\nErrorMessage.IntegerExpected = 'Value needs to be an integer.';\r\nErrorMessage.BadMode = 'Mode not recognized.';\r\nErrorMessage.DateBounds = 'Date outside of bounds.';\r\nErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\r\nErrorMessage.WrongType = 'Wrong type of argument.';\r\nErrorMessage.NaN = 'NaN or infinite value encountered.';\r\nErrorMessage.EqualLength = 'Ranges need to be of equal length.';\r\nErrorMessage.Negative = 'Value cannot be negative.';\r\nErrorMessage.NotBinary = 'String does not represent a binary number.';\r\nErrorMessage.NotOctal = 'String does not represent an octal number.';\r\nErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\r\nErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\r\nErrorMessage.CellRefExpected = 'Cell reference expected.';\r\nErrorMessage.EmptyRange = 'Empty range not allowed.';\r\nErrorMessage.BadRef = 'Address is not correct.';\r\nErrorMessage.NumberRange = 'Number-only range expected.';\r\nErrorMessage.ValueNotFound = 'Value not found.';\r\nErrorMessage.ValueBaseLarge = 'Value in base too large.';\r\nErrorMessage.ValueBaseSmall = 'Value in base too small.';\r\nErrorMessage.ValueBaseLong = 'Value in base too long.';\r\nErrorMessage.NegativeLength = 'Length cannot be negative.';\r\nErrorMessage.PatternNotFound = 'Pattern not found.';\r\nErrorMessage.OneValue = 'Needs at least one value.';\r\nErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\r\nErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\r\nErrorMessage.IndexBounds = 'Index out of bounds.';\r\nErrorMessage.IndexLarge = 'Index too large.';\r\nErrorMessage.Formula = 'Expected formula.';\r\nErrorMessage.NegativeCount = 'Count cannot be negative.';\r\nErrorMessage.ParseError = 'Parsing error.';\r\nErrorMessage.SheetRef = 'Sheet does not exist.';\r\nErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\r\nErrorMessage.InvalidDate = 'Invalid date.';\r\nErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\r\nErrorMessage.EmptyString = 'Empty-string argument not allowed.';\r\nErrorMessage.LengthBounds = 'Length out of bounds.';\r\nErrorMessage.NegativeTime = 'Time cannot be negative.';\r\nErrorMessage.NoDefault = 'No default option.';\r\nErrorMessage.NoConditionMet = 'None of the conditions were met.';\r\nErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\r\nErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\r\nErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\r\nErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\r\nErrorMessage.NonZero = 'Argument cannot be 0.';\r\nErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\r\nErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\r\nErrorMessage.InvalidRoman = 'Invalid roman numeral.';\r\nErrorMessage.WrongOrder = 'Wrong order of values.';\r\nErrorMessage.ComplexNumberExpected = 'Complex number expected.';\r\nErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\r\nErrorMessage.SizeMismatch = 'Array dimensions mismatched.';\r\nErrorMessage.FunctionName = (arg) => `Function name ${arg} not recognized.`;\r\nErrorMessage.NamedExpressionName = (arg) => `Named expression ${arg} not recognized.`;\r\nErrorMessage.LicenseKey = (arg) => `License key is ${arg}.`;\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { createToken, Lexer } from 'chevrotain';\r\nimport { ALL_WHITESPACE_PATTERN, COLUMN_REFERENCE_PATTERN, NON_RESERVED_CHARACTER_PATTERN, ODFF_WHITESPACE_PATTERN, RANGE_OPERATOR, ROW_REFERENCE_PATTERN, UNICODE_LETTER_PATTERN, } from './parser-consts';\r\nimport { CellReferenceMatcher } from './CellReferenceMatcher';\r\nimport { NamedExpressionMatcher } from './NamedExpressionMatcher';\r\nexport const AdditionOp = createToken({ name: 'AdditionOp', pattern: Lexer.NA });\r\nexport const PlusOp = createToken({ name: 'PlusOp', pattern: /\\+/, categories: AdditionOp });\r\nexport const MinusOp = createToken({ name: 'MinusOp', pattern: /-/, categories: AdditionOp });\r\nexport const MultiplicationOp = createToken({ name: 'MultiplicationOp', pattern: Lexer.NA });\r\nexport const TimesOp = createToken({ name: 'TimesOp', pattern: /\\*/, categories: MultiplicationOp });\r\nexport const DivOp = createToken({ name: 'DivOp', pattern: /\\//, categories: MultiplicationOp });\r\nexport const PowerOp = createToken({ name: 'PowerOp', pattern: /\\^/ });\r\nexport const PercentOp = createToken({ name: 'PercentOp', pattern: /%/ });\r\nexport const BooleanOp = createToken({ name: 'BooleanOp', pattern: Lexer.NA });\r\nexport const EqualsOp = createToken({ name: 'EqualsOp', pattern: /=/, categories: BooleanOp });\r\nexport const NotEqualOp = createToken({ name: 'NotEqualOp', pattern: /<>/, categories: BooleanOp });\r\nexport const GreaterThanOp = createToken({ name: 'GreaterThanOp', pattern: />/, categories: BooleanOp });\r\nexport const LessThanOp = createToken({ name: 'LessThanOp', pattern: /</, categories: BooleanOp });\r\nexport const GreaterThanOrEqualOp = createToken({ name: 'GreaterThanOrEqualOp', pattern: />=/, categories: BooleanOp });\r\nexport const LessThanOrEqualOp = createToken({ name: 'LessThanOrEqualOp', pattern: /<=/, categories: BooleanOp });\r\nexport const ConcatenateOp = createToken({ name: 'ConcatenateOp', pattern: /&/ });\r\nexport const LParen = createToken({ name: 'LParen', pattern: /\\(/ });\r\nexport const RParen = createToken({ name: 'RParen', pattern: /\\)/ });\r\nexport const ArrayLParen = createToken({ name: 'ArrayLParen', pattern: /{/ });\r\nexport const ArrayRParen = createToken({ name: 'ArrayRParen', pattern: /}/ });\r\nexport const StringLiteral = createToken({ name: 'StringLiteral', pattern: /\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/ });\r\nexport const ErrorLiteral = createToken({ name: 'ErrorLiteral', pattern: /#[A-Za-z0-9\\/]+[?!]?/ });\r\nexport const RangeSeparator = createToken({ name: 'RangeSeparator', pattern: new RegExp(RANGE_OPERATOR) });\r\nexport const ColumnRange = createToken({ name: 'ColumnRange', pattern: new RegExp(`${COLUMN_REFERENCE_PATTERN}${RANGE_OPERATOR}${COLUMN_REFERENCE_PATTERN}`) });\r\nexport const RowRange = createToken({ name: 'RowRange', pattern: new RegExp(`${ROW_REFERENCE_PATTERN}${RANGE_OPERATOR}${ROW_REFERENCE_PATTERN}`) });\r\nexport const ProcedureName = createToken({ name: 'ProcedureName', pattern: new RegExp(`([${UNICODE_LETTER_PATTERN}][${NON_RESERVED_CHARACTER_PATTERN}]*)\\\\(`) });\r\nconst cellReferenceMatcher = new CellReferenceMatcher();\r\nexport const CellReference = createToken({\r\n    name: 'CellReference',\r\n    pattern: cellReferenceMatcher.match.bind(cellReferenceMatcher),\r\n    start_chars_hint: cellReferenceMatcher.POSSIBLE_START_CHARACTERS,\r\n    line_breaks: false,\r\n});\r\nconst namedExpressionMatcher = new NamedExpressionMatcher();\r\nexport const NamedExpression = createToken({\r\n    name: 'NamedExpression',\r\n    pattern: namedExpressionMatcher.match.bind(namedExpressionMatcher),\r\n    start_chars_hint: namedExpressionMatcher.POSSIBLE_START_CHARACTERS,\r\n    line_breaks: false,\r\n});\r\n/**\r\n * Builds the configuration object for the lexer\r\n */\r\nexport const buildLexerConfig = (config) => {\r\n    const offsetProcedureNameLiteral = config.translationPackage.getFunctionTranslation('OFFSET');\r\n    const errorMapping = config.errorMapping;\r\n    const functionMapping = config.translationPackage.buildFunctionMapping();\r\n    const whitespaceTokenRegexp = new RegExp(config.ignoreWhiteSpace === 'standard' ? ODFF_WHITESPACE_PATTERN : ALL_WHITESPACE_PATTERN);\r\n    const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: whitespaceTokenRegexp });\r\n    const ArrayRowSeparator = createToken({ name: 'ArrayRowSep', pattern: config.arrayRowSeparator });\r\n    const ArrayColSeparator = createToken({ name: 'ArrayColSep', pattern: config.arrayColumnSeparator });\r\n    const NumberLiteral = createToken({ name: 'NumberLiteral', pattern: new RegExp(`(([${config.decimalSeparator}]\\\\d+)|(\\\\d+([${config.decimalSeparator}]\\\\d*)?))(e[+-]?\\\\d+)?`) });\r\n    const OffsetProcedureName = createToken({ name: 'OffsetProcedureName', pattern: new RegExp(offsetProcedureNameLiteral, 'i') });\r\n    let ArgSeparator;\r\n    let inject;\r\n    if (config.functionArgSeparator === config.arrayColumnSeparator) {\r\n        ArgSeparator = ArrayColSeparator;\r\n        inject = [];\r\n    }\r\n    else if (config.functionArgSeparator === config.arrayRowSeparator) {\r\n        ArgSeparator = ArrayRowSeparator;\r\n        inject = [];\r\n    }\r\n    else {\r\n        ArgSeparator = createToken({ name: 'ArgSeparator', pattern: config.functionArgSeparator });\r\n        inject = [ArgSeparator];\r\n    }\r\n    /* order is important, first pattern is used */\r\n    const allTokens = [\r\n        WhiteSpace,\r\n        PlusOp,\r\n        MinusOp,\r\n        TimesOp,\r\n        DivOp,\r\n        PowerOp,\r\n        EqualsOp,\r\n        NotEqualOp,\r\n        PercentOp,\r\n        GreaterThanOrEqualOp,\r\n        LessThanOrEqualOp,\r\n        GreaterThanOp,\r\n        LessThanOp,\r\n        LParen,\r\n        RParen,\r\n        ArrayLParen,\r\n        ArrayRParen,\r\n        OffsetProcedureName,\r\n        ProcedureName,\r\n        RangeSeparator,\r\n        ...inject,\r\n        ColumnRange,\r\n        RowRange,\r\n        NumberLiteral,\r\n        StringLiteral,\r\n        ErrorLiteral,\r\n        ConcatenateOp,\r\n        BooleanOp,\r\n        AdditionOp,\r\n        MultiplicationOp,\r\n        CellReference,\r\n        NamedExpression,\r\n        ArrayRowSeparator,\r\n        ArrayColSeparator,\r\n    ];\r\n    return {\r\n        ArgSeparator,\r\n        NumberLiteral,\r\n        OffsetProcedureName,\r\n        ArrayRowSeparator,\r\n        ArrayColSeparator,\r\n        WhiteSpace,\r\n        allTokens,\r\n        errorMapping,\r\n        functionMapping,\r\n        decimalSeparator: config.decimalSeparator,\r\n        maxColumns: config.maxColumns,\r\n        maxRows: config.maxRows\r\n    };\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ABSOLUTE_OPERATOR, ALL_DIGITS_ARRAY, ALL_UNICODE_LETTERS_ARRAY, CELL_REFERENCE_WITH_NEXT_CHARACTER_PATTERN } from './parser-consts';\r\n/**\r\n * Helper class for recognizing CellReference token in text\r\n */\r\nexport class CellReferenceMatcher {\r\n    constructor() {\r\n        this.POSSIBLE_START_CHARACTERS = [\r\n            ...ALL_UNICODE_LETTERS_ARRAY,\r\n            ...ALL_DIGITS_ARRAY,\r\n            ABSOLUTE_OPERATOR,\r\n            \"'\",\r\n            '_',\r\n        ];\r\n        this.cellReferenceRegexp = new RegExp(CELL_REFERENCE_WITH_NEXT_CHARACTER_PATTERN, 'y');\r\n    }\r\n    /**\r\n     * Method used by the lexer to recognize CellReference token in text\r\n     *\r\n     * Note: using 'y' sticky flag for a named expression which is not supported on IE11...\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\r\n     */\r\n    match(text, startOffset) {\r\n        this.cellReferenceRegexp.lastIndex = startOffset;\r\n        const execResult = this.cellReferenceRegexp.exec(text + '@');\r\n        if (execResult == null || execResult[1] == null) {\r\n            return null;\r\n        }\r\n        execResult[0] = execResult[1];\r\n        return execResult;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ALL_UNICODE_LETTERS_ARRAY, NAMED_EXPRESSION_PATTERN, R1C1_CELL_REFERENCE_PATTERN } from './parser-consts';\r\n/**\r\n * Helper class for recognizing NamedExpression token in text\r\n */\r\nexport class NamedExpressionMatcher {\r\n    constructor() {\r\n        this.POSSIBLE_START_CHARACTERS = [...ALL_UNICODE_LETTERS_ARRAY, '_'];\r\n        this.namedExpressionRegexp = new RegExp(NAMED_EXPRESSION_PATTERN, 'y');\r\n        this.r1c1CellRefRegexp = new RegExp(`^${R1C1_CELL_REFERENCE_PATTERN}$`);\r\n    }\r\n    /**\r\n     * Method used by the lexer to recognize NamedExpression token in text\r\n     *\r\n     * Note: using 'y' sticky flag for a named expression which is not supported on IE11...\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\r\n     */\r\n    match(text, startOffset) {\r\n        this.namedExpressionRegexp.lastIndex = startOffset;\r\n        const execResult = this.namedExpressionRegexp.exec(text);\r\n        if (execResult == null || execResult[0] == null) {\r\n            return null;\r\n        }\r\n        if (this.r1c1CellRefRegexp.test(execResult[0])) {\r\n            return null;\r\n        }\r\n        return execResult;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { NoSheetWithIdError } from '../index';\r\nimport { sheetIndexToString } from './addressRepresentationConverters';\r\nimport { AstNodeType, imageWithWhitespace, RangeSheetReferenceType, } from './Ast';\r\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\r\nexport class Unparser {\r\n    constructor(config, lexerConfig, sheetMappingFn, namedExpressions) {\r\n        this.config = config;\r\n        this.lexerConfig = lexerConfig;\r\n        this.sheetMappingFn = sheetMappingFn;\r\n        this.namedExpressions = namedExpressions;\r\n    }\r\n    unparse(ast, address) {\r\n        return '=' + this.unparseAst(ast, address);\r\n    }\r\n    unparseAst(ast, address) {\r\n        var _a, _b;\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return imageWithWhitespace('', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NUMBER: {\r\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.STRING: {\r\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const args = ast.args.map((arg) => arg !== undefined ? this.unparseAst(arg, address) : '').join(this.config.functionArgSeparator);\r\n                const procedureName = this.config.translationPackage.isFunctionTranslated(ast.procedureName) ?\r\n                    this.config.translationPackage.getFunctionTranslation(ast.procedureName) :\r\n                    ast.procedureName;\r\n                const rightPart = procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                const originalNamedExpressionName = (_a = this.namedExpressions.nearestNamedExpression(ast.expressionName, address.sheet)) === null || _a === void 0 ? void 0 : _a.displayName;\r\n                return imageWithWhitespace(originalNamedExpressionName || ast.expressionName, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                let image;\r\n                if (ast.reference.sheet !== undefined) {\r\n                    image = this.unparseSheetName(ast.reference.sheet) + '!';\r\n                }\r\n                else {\r\n                    image = '';\r\n                }\r\n                image += (_b = ast.reference.unparse(address)) !== null && _b !== void 0 ? _b : this.config.translationPackage.getErrorTranslation(ErrorType.REF);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                return imageWithWhitespace(this.formatRange(ast, address), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                const unparsedExpr = this.unparseAst(ast.value, address);\r\n                return imageWithWhitespace('+', ast.leadingWhitespace) + unparsedExpr;\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const unparsedExpr = this.unparseAst(ast.value, address);\r\n                return imageWithWhitespace('-', ast.leadingWhitespace) + unparsedExpr;\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                return this.unparseAst(ast.value, address) + imageWithWhitespace('%', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR: {\r\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\r\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const expression = this.unparseAst(ast.expression, address);\r\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const ret = '{' + ast.args.map(row => row.map(val => this.unparseAst(val, address)).join(this.config.arrayColumnSeparator)).join(this.config.arrayRowSeparator) + imageWithWhitespace('}', ast.internalWhitespace);\r\n                return imageWithWhitespace(ret, ast.leadingWhitespace);\r\n            }\r\n            default: {\r\n                const left = this.unparseAst(ast.left, address);\r\n                const right = this.unparseAst(ast.right, address);\r\n                return left + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + right;\r\n            }\r\n        }\r\n    }\r\n    unparseSheetName(sheetId) {\r\n        const sheetName = sheetIndexToString(sheetId, this.sheetMappingFn);\r\n        if (sheetName === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetName;\r\n    }\r\n    formatRange(ast, baseAddress) {\r\n        let startSheeet = '';\r\n        let endSheet = '';\r\n        if (ast.start.sheet !== undefined && (ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE)) {\r\n            startSheeet = this.unparseSheetName(ast.start.sheet) + '!';\r\n        }\r\n        if (ast.end.sheet !== undefined && ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE) {\r\n            endSheet = this.unparseSheetName(ast.end.sheet) + '!';\r\n        }\r\n        const unparsedStart = ast.start.unparse(baseAddress);\r\n        const unparsedEnd = ast.end.unparse(baseAddress);\r\n        if (unparsedStart === undefined || unparsedEnd === undefined) {\r\n            return this.config.translationPackage.getErrorTranslation(ErrorType.REF);\r\n        }\r\n        return `${startSheeet}${unparsedStart}:${endSheet}${unparsedEnd}`;\r\n    }\r\n}\r\nexport function formatNumber(number, decimalSeparator) {\r\n    const numericString = number.toString();\r\n    return numericString.replace('.', decimalSeparator);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\r\nconst collectDependenciesFn = (ast, functionRegistry, dependenciesSet, needArgument) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n            return;\r\n        case AstNodeType.NAMED_EXPRESSION: {\r\n            if (needArgument) {\r\n                dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.CELL_REFERENCE: {\r\n            if (needArgument) {\r\n                dependenciesSet.push(new AddressDependency(ast.reference));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.CELL_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.COLUMN_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.ROW_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            collectDependenciesFn(ast.value, functionRegistry, dependenciesSet, true);\r\n            return;\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            collectDependenciesFn(ast.left, functionRegistry, dependenciesSet, true);\r\n            collectDependenciesFn(ast.right, functionRegistry, dependenciesSet, true);\r\n            return;\r\n        case AstNodeType.PARENTHESIS:\r\n            collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet, needArgument);\r\n            return;\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            const functionNeedArgument = !functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName);\r\n            ast.args.forEach((argAst) => collectDependenciesFn(argAst, functionRegistry, dependenciesSet, functionNeedArgument));\r\n            return;\r\n        }\r\n    }\r\n};\r\nexport const collectDependencies = (ast, functionRegistry) => {\r\n    const result = new Array();\r\n    collectDependenciesFn(ast, functionRegistry, result, true);\r\n    return result;\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\r\nexport class AddressDependency {\r\n    constructor(dependency) {\r\n        this.dependency = dependency;\r\n    }\r\n    absolutize(baseAddress) {\r\n        return this.dependency.toSimpleCellAddress(baseAddress);\r\n    }\r\n}\r\nexport class CellRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\r\n    }\r\n}\r\nexport class ColumnRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        const start = this.start.toSimpleColumnAddress(baseAddress);\r\n        const end = this.end.toSimpleColumnAddress(baseAddress);\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n}\r\nexport class RowRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        const start = this.start.toSimpleRowAddress(baseAddress);\r\n        const end = this.end.toSimpleRowAddress(baseAddress);\r\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n    }\r\n}\r\nexport class NamedExpressionDependency {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    absolutize(_baseAddress) {\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { addressKey } from './Cell';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nexport class ContentChanges {\r\n    constructor() {\r\n        this.changes = new Map();\r\n    }\r\n    static empty() {\r\n        return new ContentChanges();\r\n    }\r\n    addAll(other) {\r\n        for (const change of other.changes.values()) {\r\n            this.add(change.address, change);\r\n        }\r\n        return this;\r\n    }\r\n    addChange(newValue, address, oldValue) {\r\n        this.addInterpreterValue(newValue, address, oldValue);\r\n    }\r\n    exportChanges(exporter) {\r\n        let ret = [];\r\n        this.changes.forEach((e) => {\r\n            const change = exporter.exportChange(e);\r\n            if (Array.isArray(change)) {\r\n                ret = ret.concat(change);\r\n            }\r\n            else {\r\n                ret.push(change);\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changes.values());\r\n    }\r\n    isEmpty() {\r\n        return this.changes.size === 0;\r\n    }\r\n    add(address, change) {\r\n        const value = change.value;\r\n        if (value instanceof SimpleRangeValue) {\r\n            for (const cellAddress of value.effectiveAddressesFromData(address)) {\r\n                this.changes.delete(`${cellAddress.sheet},${cellAddress.col},${cellAddress.row}`);\r\n            }\r\n        }\r\n        this.changes.set(addressKey((address)), change);\r\n    }\r\n    addInterpreterValue(value, address, oldValue) {\r\n        this.add(address, {\r\n            address,\r\n            value,\r\n            oldValue\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from './ArraySize';\r\nimport { CellError, ErrorType, simpleCellAddress } from './Cell';\r\nimport { ErrorMessage } from './error-message';\r\nimport { isExtendedNumber } from './interpreter/InterpreterValue';\r\n/**\r\n * A class that represents a range of data.\r\n */\r\nexport class SimpleRangeValue {\r\n    /**\r\n     * In most cases, it's more convenient to create a `SimpleRangeValue` object\r\n     * by calling one of the [static factory methods](#fromrange).\r\n     */\r\n    constructor(_data, \r\n    /**\r\n     * A property that represents the address of the range.\r\n     */\r\n    range, dependencyGraph, _hasOnlyNumbers) {\r\n        this._data = _data;\r\n        this.range = range;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this._hasOnlyNumbers = _hasOnlyNumbers;\r\n        this.size = _data === undefined\r\n            ? new ArraySize(range.effectiveWidth(dependencyGraph), range.effectiveHeight(dependencyGraph))\r\n            : new ArraySize(_data[0].length, _data.length);\r\n    }\r\n    /**\r\n     * Returns the range data as a 2D array.\r\n     */\r\n    get data() {\r\n        this.ensureThatComputed();\r\n        return this._data;\r\n    }\r\n    /**\r\n     * A factory method. Returns a `SimpleRangeValue` object with the provided range address and the provided data.\r\n     */\r\n    static fromRange(data, range, dependencyGraph) {\r\n        return new SimpleRangeValue(data, range, dependencyGraph, true);\r\n    }\r\n    /**\r\n     * A factory method. Returns a `SimpleRangeValue` object with the provided numeric data.\r\n     */\r\n    static onlyNumbers(data) {\r\n        return new SimpleRangeValue(data, undefined, undefined, true);\r\n    }\r\n    /**\r\n     * A factory method. Returns a `SimpleRangeValue` object with the provided data.\r\n     */\r\n    static onlyValues(data) {\r\n        return new SimpleRangeValue(data, undefined, undefined, undefined);\r\n    }\r\n    /**\r\n     * A factory method. Returns a `SimpleRangeValue` object with the provided range address.\r\n     */\r\n    static onlyRange(range, dependencyGraph) {\r\n        return new SimpleRangeValue(undefined, range, dependencyGraph, undefined);\r\n    }\r\n    /**\r\n     * A factory method. Returns a `SimpleRangeValue` object that contains a single value.\r\n     */\r\n    static fromScalar(scalar) {\r\n        return new SimpleRangeValue([[scalar]], undefined, undefined, undefined);\r\n    }\r\n    /**\r\n     * Returns `true` if and only if the `SimpleRangeValue` has no address set.\r\n     */\r\n    isAdHoc() {\r\n        return this.range === undefined;\r\n    }\r\n    /**\r\n     * Returns the number of columns contained in the range.\r\n     */\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    /**\r\n     * Returns the number of rows contained in the range.\r\n     */\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    /**\r\n     * Returns the range data as a 1D array.\r\n     */\r\n    valuesFromTopLeftCorner() {\r\n        this.ensureThatComputed();\r\n        const ret = [];\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            for (let j = 0; j < this._data[0].length; j++) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                ret.push(this._data[i][j]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * Generates the addresses of the cells contained in the range assuming the provided address is the left corner of the range.\r\n     */\r\n    *effectiveAddressesFromData(leftCorner) {\r\n        for (let row = 0; row < this.data.length; ++row) {\r\n            const rowData = this.data[row];\r\n            for (let col = 0; col < rowData.length; ++col) {\r\n                yield simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Generates values and addresses of the cells contained in the range assuming the provided address is the left corner of the range.\r\n     *\r\n     * This method combines the functionalities of [`iterateValuesFromTopLeftCorner()`](#iteratevaluesfromtopleftcorner) and [`effectiveAddressesFromData()`](#effectiveaddressesfromdata).\r\n     */\r\n    *entriesFromTopLeftCorner(leftCorner) {\r\n        this.ensureThatComputed();\r\n        for (let row = 0; row < this.size.height; ++row) {\r\n            for (let col = 0; col < this.size.width; ++col) {\r\n                yield [this._data[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Generates the values of the cells contained in the range assuming the provided address is the left corner of the range.\r\n     */\r\n    *iterateValuesFromTopLeftCorner() {\r\n        yield* this.valuesFromTopLeftCorner();\r\n    }\r\n    /**\r\n     * Returns the number of cells contained in the range.\r\n     */\r\n    numberOfElements() {\r\n        return this.size.width * this.size.height;\r\n    }\r\n    /**\r\n     * Returns `true` if and only if the range contains only numeric values.\r\n     */\r\n    hasOnlyNumbers() {\r\n        if (this._hasOnlyNumbers === undefined) {\r\n            this._hasOnlyNumbers = true;\r\n            for (const row of this.data) {\r\n                for (const v of row) {\r\n                    if (typeof v !== 'number') {\r\n                        this._hasOnlyNumbers = false;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._hasOnlyNumbers;\r\n    }\r\n    /**\r\n     * Returns the range data as a 2D array of numbers.\r\n     *\r\n     * Internal use only.\r\n     */\r\n    rawNumbers() {\r\n        return this._data;\r\n    }\r\n    /**\r\n     * Returns the range data as a 2D array.\r\n     *\r\n     * Internal use only.\r\n     */\r\n    rawData() {\r\n        var _a;\r\n        this.ensureThatComputed();\r\n        return (_a = this._data) !== null && _a !== void 0 ? _a : [];\r\n    }\r\n    /**\r\n     * Returns `true` if and only if the range has the same width and height as the `other` range object.\r\n     */\r\n    sameDimensionsAs(other) {\r\n        return this.width() === other.width() && this.height() === other.height();\r\n    }\r\n    /**\r\n     * Computes the range data if it is not computed yet.\r\n     */\r\n    ensureThatComputed() {\r\n        if (this._data !== undefined) {\r\n            return;\r\n        }\r\n        this._hasOnlyNumbers = true;\r\n        this._data = this.range.addressesArrayMap(this.dependencyGraph, cellFromRange => {\r\n            const value = this.dependencyGraph.getCellValue(cellFromRange);\r\n            if (value instanceof SimpleRangeValue) {\r\n                this._hasOnlyNumbers = false;\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n            }\r\n            else if (isExtendedNumber(value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                this._hasOnlyNumbers = false;\r\n                return value;\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport const EmptyValue = Symbol('Empty value');\r\nexport function getRawValue(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.val;\r\n    }\r\n    else {\r\n        return num;\r\n    }\r\n}\r\nexport class RichNumber {\r\n    constructor(val, format) {\r\n        this.val = val;\r\n        this.format = format;\r\n    }\r\n    fromNumber(val) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\r\n        return new this.constructor(val);\r\n    }\r\n}\r\nexport function cloneNumber(val, newVal) {\r\n    if (typeof val === 'number') {\r\n        return newVal;\r\n    }\r\n    else {\r\n        const ret = val.fromNumber(newVal);\r\n        ret.format = val.format;\r\n        return ret;\r\n    }\r\n}\r\nexport class DateNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_DATE;\r\n    }\r\n}\r\nexport class CurrencyNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_CURRENCY;\r\n    }\r\n}\r\nexport class TimeNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_TIME;\r\n    }\r\n}\r\nexport class DateTimeNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_DATETIME;\r\n    }\r\n}\r\nexport class PercentNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_PERCENT;\r\n    }\r\n}\r\nexport function isExtendedNumber(val) {\r\n    return (typeof val === 'number') || (val instanceof RichNumber);\r\n}\r\nexport var NumberType;\r\n(function (NumberType) {\r\n    NumberType[\"NUMBER_RAW\"] = \"NUMBER_RAW\";\r\n    NumberType[\"NUMBER_DATE\"] = \"NUMBER_DATE\";\r\n    NumberType[\"NUMBER_TIME\"] = \"NUMBER_TIME\";\r\n    NumberType[\"NUMBER_DATETIME\"] = \"NUMBER_DATETIME\";\r\n    NumberType[\"NUMBER_CURRENCY\"] = \"NUMBER_CURRENCY\";\r\n    NumberType[\"NUMBER_PERCENT\"] = \"NUMBER_PERCENT\";\r\n})(NumberType || (NumberType = {}));\r\nexport function getTypeOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.getDetailedType();\r\n    }\r\n    else {\r\n        return NumberType.NUMBER_RAW;\r\n    }\r\n}\r\nexport function getFormatOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.format;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function getTypeFormatOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return { type: num.getDetailedType(), format: num.format };\r\n    }\r\n    else {\r\n        return { type: NumberType.NUMBER_RAW };\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\n/*\r\n * A class representing a set of rows in specific sheet\r\n */\r\nexport class RowsSpan {\r\n    constructor(sheet, rowStart, rowEnd) {\r\n        this.sheet = sheet;\r\n        this.rowStart = rowStart;\r\n        this.rowEnd = rowEnd;\r\n        if (rowStart < 0) {\r\n            throw Error('Starting row cant be less than 0');\r\n        }\r\n        if (rowEnd < rowStart) {\r\n            throw Error('Row span cant end before start');\r\n        }\r\n    }\r\n    get numberOfRows() {\r\n        return this.rowEnd - this.rowStart + 1;\r\n    }\r\n    get start() {\r\n        return this.rowStart;\r\n    }\r\n    get end() {\r\n        return this.rowEnd;\r\n    }\r\n    static fromNumberOfRows(sheet, rowStart, numberOfRows) {\r\n        return new RowsSpan(sheet, rowStart, rowStart + numberOfRows - 1);\r\n    }\r\n    static fromRowStartAndEnd(sheet, rowStart, rowEnd) {\r\n        return new RowsSpan(sheet, rowStart, rowEnd);\r\n    }\r\n    *rows() {\r\n        for (let col = this.rowStart; col <= this.rowEnd; ++col) {\r\n            yield col;\r\n        }\r\n    }\r\n    intersect(otherSpan) {\r\n        if (this.sheet !== otherSpan.sheet) {\r\n            throw Error('Can\\'t intersect spans from different sheets');\r\n        }\r\n        const start = Math.max(this.rowStart, otherSpan.rowStart);\r\n        const end = Math.min(this.rowEnd, otherSpan.rowEnd);\r\n        if (start > end) {\r\n            return null;\r\n        }\r\n        return new RowsSpan(this.sheet, start, end);\r\n    }\r\n    firstRow() {\r\n        return new RowsSpan(this.sheet, this.rowStart, this.rowStart);\r\n    }\r\n}\r\n/*\r\n * A class representing a set of columns in specific sheet\r\n */\r\nexport class ColumnsSpan {\r\n    constructor(sheet, columnStart, columnEnd) {\r\n        this.sheet = sheet;\r\n        this.columnStart = columnStart;\r\n        this.columnEnd = columnEnd;\r\n        if (columnStart < 0) {\r\n            throw Error('Starting column cant be less than 0');\r\n        }\r\n        if (columnEnd < columnStart) {\r\n            throw Error('Column span cant end before start');\r\n        }\r\n    }\r\n    get numberOfColumns() {\r\n        return this.columnEnd - this.columnStart + 1;\r\n    }\r\n    get start() {\r\n        return this.columnStart;\r\n    }\r\n    get end() {\r\n        return this.columnEnd;\r\n    }\r\n    static fromNumberOfColumns(sheet, columnStart, numberOfColumns) {\r\n        return new ColumnsSpan(sheet, columnStart, columnStart + numberOfColumns - 1);\r\n    }\r\n    static fromColumnStartAndEnd(sheet, columnStart, columnEnd) {\r\n        return new ColumnsSpan(sheet, columnStart, columnEnd);\r\n    }\r\n    *columns() {\r\n        for (let col = this.columnStart; col <= this.columnEnd; ++col) {\r\n            yield col;\r\n        }\r\n    }\r\n    intersect(otherSpan) {\r\n        if (this.sheet !== otherSpan.sheet) {\r\n            throw Error('Can\\'t intersect spans from different sheets');\r\n        }\r\n        const start = Math.max(this.columnStart, otherSpan.columnStart);\r\n        const end = Math.min(this.columnEnd, otherSpan.columnEnd);\r\n        if (start > end) {\r\n            return null;\r\n        }\r\n        return new ColumnsSpan(this.sheet, start, end);\r\n    }\r\n    firstColumn() {\r\n        return new ColumnsSpan(this.sheet, this.columnStart, this.columnStart);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport { EmptyStatistics } from './EmptyStatistics';\r\nexport { Statistics } from './Statistics';\r\nexport { StatType } from './StatType';\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { Statistics } from './Statistics';\r\n/** Do not store stats in the memory. Stats are not needed on daily basis */\r\nexport class EmptyStatistics extends Statistics {\r\n    /** @inheritDoc */\r\n    incrementCriterionFunctionFullCacheUsed() {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    incrementCriterionFunctionPartialCacheUsed() {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    start(_name) {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    end(_name) {\r\n        // do nothing\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { StatType } from './StatType';\r\n/**\r\n * Provides tracking performance statistics to the engine\r\n */\r\nexport class Statistics {\r\n    constructor() {\r\n        this.stats = new Map([\r\n            [StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0],\r\n            [StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0],\r\n        ]);\r\n        this.startTimes = new Map();\r\n    }\r\n    incrementCriterionFunctionFullCacheUsed() {\r\n        var _a;\r\n        const newValue = ((_a = this.stats.get(StatType.CRITERION_FUNCTION_FULL_CACHE_USED)) !== null && _a !== void 0 ? _a : 0) + 1;\r\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, newValue);\r\n    }\r\n    incrementCriterionFunctionPartialCacheUsed() {\r\n        var _a;\r\n        const newValue = ((_a = this.stats.get(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED)) !== null && _a !== void 0 ? _a : 0) + 1;\r\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, newValue);\r\n    }\r\n    /**\r\n     * Resets statistics\r\n     */\r\n    reset() {\r\n        this.stats.clear();\r\n        this.startTimes.clear();\r\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0);\r\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0);\r\n    }\r\n    /**\r\n     * Starts tracking particular statistic.\r\n     *\r\n     * @param name - statistic to start tracking\r\n     */\r\n    start(name) {\r\n        if (this.startTimes.get(name)) {\r\n            throw Error(`Statistics ${name} already started`);\r\n        }\r\n        else {\r\n            this.startTimes.set(name, Date.now());\r\n        }\r\n    }\r\n    /**\r\n     * Stops tracking particular statistic.\r\n     * Raise error if tracking statistic wasn't started.\r\n     *\r\n     * @param name - statistic to stop tracking\r\n     */\r\n    end(name) {\r\n        var _a;\r\n        const now = Date.now();\r\n        const startTime = this.startTimes.get(name);\r\n        if (startTime) {\r\n            let values = (_a = this.stats.get(name)) !== null && _a !== void 0 ? _a : 0;\r\n            values += (now - startTime);\r\n            this.stats.set(name, values);\r\n            this.startTimes.delete(name);\r\n        }\r\n        else {\r\n            throw Error(`Statistics ${name} not started`);\r\n        }\r\n    }\r\n    /**\r\n     * Measure given statistic as execution of given function.\r\n     *\r\n     * @param name - statistic to track\r\n     * @param func - function to call\r\n     * @returns result of the function call\r\n     */\r\n    measure(name, func) {\r\n        this.start(name);\r\n        const result = func();\r\n        this.end(name);\r\n        return result;\r\n    }\r\n    /**\r\n     * Returns the snapshot of current results\r\n     */\r\n    snapshot() {\r\n        return new Map(this.stats);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport var StatType;\r\n(function (StatType) {\r\n    /* build engine */\r\n    StatType[\"BUILD_ENGINE_TOTAL\"] = \"BUILD_ENGINE_TOTAL\";\r\n    StatType[\"PARSER\"] = \"PARSER\";\r\n    StatType[\"GRAPH_BUILD\"] = \"GRAPH_BUILD\";\r\n    StatType[\"COLLECT_DEPENDENCIES\"] = \"COLLECT_DEPENDENCIES\";\r\n    StatType[\"PROCESS_DEPENDENCIES\"] = \"PROCESS_DEPENDENCIES\";\r\n    StatType[\"TOP_SORT\"] = \"TOP_SORT\";\r\n    StatType[\"BUILD_COLUMN_INDEX\"] = \"BUILD_COLUMN_INDEX\";\r\n    StatType[\"EVALUATION\"] = \"EVALUATION\";\r\n    StatType[\"VLOOKUP\"] = \"VLOOKUP\";\r\n    /* crud adjustments */\r\n    StatType[\"TRANSFORM_ASTS\"] = \"TRANSFORM_ASTS\";\r\n    StatType[\"TRANSFORM_ASTS_POSTPONED\"] = \"TRANSFORM_ASTS_POSTPONED\";\r\n    StatType[\"ADJUSTING_ADDRESS_MAPPING\"] = \"ADJUSTING_ADDRESS_MAPPING\";\r\n    StatType[\"ADJUSTING_ARRAY_MAPPING\"] = \"ADJUSTING_ARRAY_MAPPING\";\r\n    StatType[\"ADJUSTING_RANGES\"] = \"ADJUSTING_RANGES\";\r\n    StatType[\"ADJUSTING_GRAPH\"] = \"ADJUSTING_GRAPH\";\r\n    /* criterion cache */\r\n    StatType[\"CRITERION_FUNCTION_FULL_CACHE_USED\"] = \"CRITERION_FUNCTION_FULL_CACHE_USED\";\r\n    StatType[\"CRITERION_FUNCTION_PARTIAL_CACHE_USED\"] = \"CRITERION_FUNCTION_PARTIAL_CACHE_USED\";\r\n})(StatType || (StatType = {}));\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { NoSheetWithIdError } from '../../errors';\r\nimport { EmptyValue } from '../../interpreter/InterpreterValue';\r\nimport { ArrayVertex, ValueCellVertex } from '../index';\r\nexport class AddressMapping {\r\n    constructor(policy) {\r\n        this.policy = policy;\r\n        this.mapping = new Map();\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n        return sheetMapping.getCell(address);\r\n    }\r\n    fetchCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n        const vertex = sheetMapping.getCell(address);\r\n        if (!vertex) {\r\n            throw Error('Vertex for address missing in AddressMapping');\r\n        }\r\n        return vertex;\r\n    }\r\n    strategyFor(sheetId) {\r\n        const strategy = this.mapping.get(sheetId);\r\n        if (strategy === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return strategy;\r\n    }\r\n    addSheet(sheetId, strategy) {\r\n        if (this.mapping.has(sheetId)) {\r\n            throw Error('Sheet already added');\r\n        }\r\n        this.mapping.set(sheetId, strategy);\r\n    }\r\n    autoAddSheet(sheetId, sheet, sheetBoundaries) {\r\n        const { height, width, fill } = sheetBoundaries;\r\n        const strategyConstructor = this.policy.call(fill);\r\n        this.addSheet(sheetId, new strategyConstructor(width, height));\r\n    }\r\n    getCellValue(address) {\r\n        const vertex = this.getCell(address);\r\n        if (vertex === undefined) {\r\n            return EmptyValue;\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            return vertex.getArrayCellValue(address);\r\n        }\r\n        else {\r\n            return vertex.getCellValue();\r\n        }\r\n    }\r\n    getRawValue(address) {\r\n        const vertex = this.getCell(address);\r\n        if (vertex instanceof ValueCellVertex) {\r\n            return vertex.getValues().rawValue;\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            return vertex.getArrayCellRawValue(address);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized');\r\n        }\r\n        sheetMapping.setCell(address, newVertex);\r\n    }\r\n    moveCell(source, destination) {\r\n        const sheetMapping = this.mapping.get(source.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized.');\r\n        }\r\n        if (source.sheet !== destination.sheet) {\r\n            throw Error('Cannot move cells between sheets.');\r\n        }\r\n        if (sheetMapping.has(destination)) {\r\n            throw new Error('Cannot move cell. Destination already occupied.');\r\n        }\r\n        const vertex = sheetMapping.getCell(source);\r\n        if (vertex === undefined) {\r\n            throw new Error('Cannot move cell. No cell with such address.');\r\n        }\r\n        this.setCell(destination, vertex);\r\n        this.removeCell(source);\r\n    }\r\n    removeCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized');\r\n        }\r\n        sheetMapping.removeCell(address);\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            return false;\r\n        }\r\n        return sheetMapping.has(address);\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight(sheetId) {\r\n        const sheetMapping = this.mapping.get(sheetId);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetMapping.getHeight();\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth(sheetId) {\r\n        const sheetMapping = this.mapping.get(sheetId);\r\n        if (!sheetMapping) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetMapping.getWidth();\r\n    }\r\n    addRows(sheet, row, numberOfRows) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        sheetMapping.addRows(row, numberOfRows);\r\n    }\r\n    removeRows(removedRows) {\r\n        const sheetMapping = this.mapping.get(removedRows.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(removedRows.sheet);\r\n        }\r\n        sheetMapping.removeRows(removedRows);\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.mapping.delete(sheetId);\r\n    }\r\n    addColumns(sheet, column, numberOfColumns) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        sheetMapping.addColumns(column, numberOfColumns);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        const sheetMapping = this.mapping.get(removedColumns.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(removedColumns.sheet);\r\n        }\r\n        sheetMapping.removeColumns(removedColumns);\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        yield* this.mapping.get(rowsSpan.sheet).verticesFromRowsSpan(rowsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        yield* this.mapping.get(columnsSpan.sheet).verticesFromColumnsSpan(columnsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        yield* this.mapping.get(rowsSpan.sheet).entriesFromRowsSpan(rowsSpan);\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        yield* this.mapping.get(columnsSpan.sheet).entriesFromColumnsSpan(columnsSpan);\r\n    }\r\n    *entries() {\r\n        for (const [sheet, mapping] of this.mapping.entries()) {\r\n            yield* mapping.getEntries(sheet);\r\n        }\r\n    }\r\n    *sheetEntries(sheet) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping !== undefined) {\r\n            yield* sheetMapping.getEntries(sheet);\r\n        }\r\n        else {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Error thrown when the sheet of a given ID does not exist.\r\n */\r\nexport class NoSheetWithIdError extends Error {\r\n    constructor(sheetId) {\r\n        super(`There's no sheet with id = ${sheetId}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the sheet of a given name does not exist.\r\n */\r\nexport class NoSheetWithNameError extends Error {\r\n    constructor(sheetName) {\r\n        super(`There's no sheet with name '${sheetName}'`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the sheet of a given name already exists.\r\n */\r\nexport class SheetNameAlreadyTakenError extends Error {\r\n    constructor(sheetName) {\r\n        super(`Sheet with name ${sheetName} already exists`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when loaded sheet size exceeds configured limits.\r\n */\r\nexport class SheetSizeLimitExceededError extends Error {\r\n    constructor() {\r\n        super('Sheet size limit exceeded');\r\n    }\r\n}\r\n/**\r\n * Error thrown when the the provided string is not a valid formula, i.e does not start with \"=\"\r\n */\r\nexport class NotAFormulaError extends Error {\r\n    constructor() {\r\n        super('This is not a formula');\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given address is invalid.\r\n */\r\nexport class InvalidAddressError extends Error {\r\n    constructor(address) {\r\n        super(`Address (row = ${address.row}, col = ${address.col}) is invalid`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given arguments are invalid\r\n */\r\nexport class InvalidArgumentsError extends Error {\r\n    constructor(expectedArguments) {\r\n        super(`Invalid arguments, expected ${expectedArguments}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given sheets are not equal.\r\n */\r\nexport class SheetsNotEqual extends Error {\r\n    constructor(sheet1, sheet2) {\r\n        super(`Sheets ${sheet1} and ${sheet2} are not equal.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given named expression already exists in the workbook and therefore it cannot be added.\r\n */\r\nexport class NamedExpressionNameIsAlreadyTakenError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Name of Named Expression '${expressionName}' is already present`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the name given for the named expression is invalid.\r\n */\r\nexport class NamedExpressionNameIsInvalidError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Name of Named Expression '${expressionName}' is invalid`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given named expression does not exist.\r\n */\r\nexport class NamedExpressionDoesNotExistError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Named Expression '${expressionName}' does not exist`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when there are no operations to be undone by the [[undo]] method.\r\n */\r\nexport class NoOperationToUndoError extends Error {\r\n    constructor() {\r\n        super('There is no operation to undo');\r\n    }\r\n}\r\n/**\r\n * Error thrown when there are no operations to redo by the [[redo]] method.\r\n */\r\nexport class NoOperationToRedoError extends Error {\r\n    constructor() {\r\n        super('There is no operation to redo');\r\n    }\r\n}\r\n/**\r\n * Error thrown when there is nothing to paste by the [[paste]] method.\r\n */\r\nexport class NothingToPasteError extends Error {\r\n    constructor() {\r\n        super('There is nothing to paste');\r\n    }\r\n}\r\nfunction replacer(key, val) {\r\n    switch (typeof val) {\r\n        case 'function':\r\n        case 'symbol':\r\n            return val.toString();\r\n        case 'bigint':\r\n            return 'BigInt(' + val.toString() + ')';\r\n        default: {\r\n            if (val instanceof RegExp) {\r\n                return 'RegExp(' + val.toString() + ')';\r\n            }\r\n            else {\r\n                return val;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given value cannot be parsed.\r\n *\r\n * Checks against the validity in:\r\n *\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[setCellsContents]]\r\n */\r\nexport class UnableToParseError extends Error {\r\n    constructor(value) {\r\n        super(`Unable to parse value: ${JSON.stringify(value, replacer, 4)}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the expected value type differs from the given value type.\r\n * It also displays the expected type.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ExpectedValueOfTypeError extends Error {\r\n    constructor(expectedType, paramName) {\r\n        super(`Expected value of type: ${expectedType} for config parameter: ${paramName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is an empty string.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueEmpty extends Error {\r\n    constructor(paramName) {\r\n        super(`Config parameter ${paramName} cannot be empty.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is too small.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueTooSmallError extends Error {\r\n    constructor(paramName, minimum) {\r\n        super(`Config parameter ${paramName} should be at least ${minimum}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is too big.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueTooBigError extends Error {\r\n    constructor(paramName, maximum) {\r\n        super(`Config parameter ${paramName} should be at most ${maximum}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the value was expected to be set for a config parameter.\r\n * It also displays the expected value.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ExpectedOneOfValuesError extends Error {\r\n    constructor(values, paramName) {\r\n        super(`Expected one of ${values} for config parameter: ${paramName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when computations become suspended.\r\n * To perform any other action wait for the batch to complete or resume the evaluation.\r\n * Relates to:\r\n *\r\n * @see [[batch]]\r\n * @see [[suspendEvaluation]]\r\n * @see [[resumeEvaluation]]\r\n */\r\nexport class EvaluationSuspendedError extends Error {\r\n    constructor() {\r\n        super('Computations are suspended');\r\n    }\r\n}\r\n/**\r\n * Error thrown when translation is missing in translation package.\r\n *\r\n * TODO\r\n */\r\nexport class MissingTranslationError extends Error {\r\n    constructor(key) {\r\n        super(`Translation for ${key} is missing in the translation package you're using.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to override protected translation.\r\n *\r\n * @see [[registerLanguage]]\r\n * @see [[registerFunction]]\r\n * @see [[registerFunctionPlugin]]\r\n */\r\nexport class ProtectedFunctionTranslationError extends Error {\r\n    constructor(key) {\r\n        super(`Cannot register translation for function with id: ${key}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to retrieve not registered language\r\n *\r\n * @see [[getLanguage]]\r\n * @see [[unregisterLanguage]]\r\n */\r\nexport class LanguageNotRegisteredError extends Error {\r\n    constructor() {\r\n        super('Language not registered.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to register already registered language\r\n *\r\n * @see [[registerLanguage]]\r\n */\r\nexport class LanguageAlreadyRegisteredError extends Error {\r\n    constructor() {\r\n        super('Language already registered.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when function plugin is invalid.\r\n *\r\n * @see [[registerFunction]]\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n */\r\nexport class FunctionPluginValidationError extends Error {\r\n    static functionNotDeclaredInPlugin(functionId, pluginName) {\r\n        return new FunctionPluginValidationError(`Function with id ${functionId} not declared in plugin ${pluginName}`);\r\n    }\r\n    static functionMethodNotFound(functionName, pluginName) {\r\n        return new FunctionPluginValidationError(`Function method ${functionName} not found in plugin ${pluginName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to register, override or remove function with reserved id.\r\n *\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[registerFunction]]\r\n * @see [[unregisterFunction]]\r\n */\r\nexport class ProtectedFunctionError extends Error {\r\n    static cannotRegisterFunctionWithId(functionId) {\r\n        return new ProtectedFunctionError(`Cannot register function with id ${functionId}`);\r\n    }\r\n    static cannotUnregisterFunctionWithId(functionId) {\r\n        return new ProtectedFunctionError(`Cannot unregister function with id ${functionId}`);\r\n    }\r\n    static cannotUnregisterProtectedPlugin() {\r\n        return new ProtectedFunctionError('Cannot unregister protected plugin');\r\n    }\r\n}\r\n/**\r\n * Error thrown when selected source location has an array.\r\n */\r\nexport class SourceLocationHasArrayError extends Error {\r\n    constructor() {\r\n        super('Cannot perform this operation, source location has an array inside.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when selected target location has an array.\r\n *\r\n * @see [[addRows]]\r\n * @see [[addColumns]]\r\n * @see [[moveCells]]\r\n * @see [[moveRows]]\r\n * @see [[moveColumns]]\r\n * @see [[paste]]\r\n */\r\nexport class TargetLocationHasArrayError extends Error {\r\n    constructor() {\r\n        super('Cannot perform this operation, target location has an array inside.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when named expression contains relative addresses.\r\n *\r\n * @see [[addNamedExpression]]\r\n * @see [[changeNamedExpression]]\r\n */\r\nexport class NoRelativeAddressesAllowedError extends Error {\r\n    constructor() {\r\n        super('Relative addresses not allowed in named expressions.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when alias to a function is already defined.\r\n *\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[registerFunction]]\r\n */\r\nexport class AliasAlreadyExisting extends Error {\r\n    constructor(name, pluginName) {\r\n        super(`Alias id ${name} in plugin ${pluginName} already defined as a function or alias.`);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { addressKey } from '../Cell';\r\nexport class ArrayMapping {\r\n    constructor() {\r\n        this.arrayMapping = new Map();\r\n    }\r\n    getArray(range) {\r\n        const array = this.getArrayByCorner(range.start);\r\n        if (array === null || array === void 0 ? void 0 : array.getRange().sameAs(range)) {\r\n            return array;\r\n        }\r\n        return;\r\n    }\r\n    getArrayByCorner(address) {\r\n        return this.arrayMapping.get(addressKey(address));\r\n    }\r\n    setArray(range, vertex) {\r\n        this.arrayMapping.set(addressKey(range.start), vertex);\r\n    }\r\n    removeArray(range) {\r\n        if (typeof range === 'string') {\r\n            this.arrayMapping.delete(range);\r\n        }\r\n        else {\r\n            this.arrayMapping.delete(addressKey(range.start));\r\n        }\r\n    }\r\n    count() {\r\n        return this.arrayMapping.size;\r\n    }\r\n    *arraysInRows(rowsSpan) {\r\n        for (const [mtxKey, mtx] of this.arrayMapping.entries()) {\r\n            if (mtx.spansThroughSheetRows(rowsSpan.sheet, rowsSpan.rowStart, rowsSpan.rowEnd)) {\r\n                yield [mtxKey, mtx];\r\n            }\r\n        }\r\n    }\r\n    *arraysInCols(col) {\r\n        for (const [mtxKey, mtx] of this.arrayMapping.entries()) {\r\n            if (mtx.spansThroughSheetColumn(col.sheet, col.columnStart, col.columnEnd)) {\r\n                yield [mtxKey, mtx];\r\n            }\r\n        }\r\n    }\r\n    isFormulaArrayInRow(sheet, row) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.spansThroughSheetRows(sheet, row)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayInAllRows(span) {\r\n        let result = true;\r\n        for (const row of span.rows()) {\r\n            if (!this.isFormulaArrayInRow(span.sheet, row)) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    isFormulaArrayInColumn(sheet, column) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.spansThroughSheetColumn(sheet, column)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayInAllColumns(span) {\r\n        let result = true;\r\n        for (const col of span.columns()) {\r\n            if (!this.isFormulaArrayInColumn(span.sheet, col)) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    isFormulaArrayInRange(range) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.getRange().doesOverlap(range)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayAtAddress(address) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.getRange().addressInRange(address)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    moveArrayVerticesAfterRowByRows(sheet, row, numberOfRows) {\r\n        this.updateArrayVerticesInSheet(sheet, (key, vertex) => {\r\n            const range = vertex.getRange();\r\n            return row <= range.start.row ? [range.shifted(0, numberOfRows), vertex] : undefined;\r\n        });\r\n    }\r\n    moveArrayVerticesAfterColumnByColumns(sheet, column, numberOfColumns) {\r\n        this.updateArrayVerticesInSheet(sheet, (key, vertex) => {\r\n            const range = vertex.getRange();\r\n            return column <= range.start.col ? [range.shifted(numberOfColumns, 0), vertex] : undefined;\r\n        });\r\n    }\r\n    updateArrayVerticesInSheet(sheet, fn) {\r\n        const updated = Array();\r\n        for (const [key, vertex] of this.arrayMapping.entries()) {\r\n            if (vertex.sheet !== sheet) {\r\n                continue;\r\n            }\r\n            const result = fn(key, vertex);\r\n            if (result !== undefined) {\r\n                this.removeArray(key);\r\n                updated.push(result);\r\n            }\r\n        }\r\n        updated.forEach(([range, array]) => {\r\n            this.setArray(range, array);\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AddressDependency, collectDependencies } from '../parser';\r\nimport { FormulaVertex } from './FormulaCellVertex';\r\nimport { RangeVertex } from './RangeVertex';\r\nexport const collectAddressesDependentToRange = (functionRegistry, vertex, range, lazilyTransformingAstService, dependencyGraph) => {\r\n    if (vertex instanceof RangeVertex) {\r\n        const intersection = vertex.range.intersectionWith(range);\r\n        if (intersection !== undefined) {\r\n            return Array.from(intersection.addresses(dependencyGraph));\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    let formula;\r\n    let address;\r\n    if (vertex instanceof FormulaVertex) {\r\n        formula = vertex.getFormula(lazilyTransformingAstService);\r\n        address = vertex.getAddress(lazilyTransformingAstService);\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n    return collectDependencies(formula, functionRegistry)\r\n        .filter((d) => d instanceof AddressDependency)\r\n        .map((d) => d.dependency.toSimpleCellAddress(address))\r\n        .filter((d) => range.addressInRange(d));\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\r\nimport { ArraySize } from '../ArraySize';\r\nimport { ArrayValue, ErroredArray, NotComputedArray } from '../ArrayValue';\r\nimport { CellError, equalSimpleCellAddress, ErrorType } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { ColumnsSpan, RowsSpan } from '../Span';\r\nexport class FormulaVertex {\r\n    constructor(formula, cellAddress, version) {\r\n        this.formula = formula;\r\n        this.cellAddress = cellAddress;\r\n        this.version = version;\r\n    }\r\n    get width() {\r\n        return 1;\r\n    }\r\n    get height() {\r\n        return 1;\r\n    }\r\n    static fromAst(formula, address, size, version) {\r\n        if (size.isScalar()) {\r\n            return new FormulaCellVertex(formula, address, version);\r\n        }\r\n        else {\r\n            return new ArrayVertex(formula, address, size, version);\r\n        }\r\n    }\r\n    /**\r\n     * Returns formula stored in this vertex\r\n     */\r\n    getFormula(updatingService) {\r\n        this.ensureRecentData(updatingService);\r\n        return this.formula;\r\n    }\r\n    ensureRecentData(updatingService) {\r\n        if (this.version != updatingService.version()) {\r\n            const [newAst, newAddress, newVersion] = updatingService.applyTransformations(this.formula, this.cellAddress, this.version);\r\n            this.formula = newAst;\r\n            this.cellAddress = newAddress;\r\n            this.version = newVersion;\r\n        }\r\n    }\r\n    /**\r\n     * Returns address of the cell associated with vertex\r\n     */\r\n    getAddress(updatingService) {\r\n        this.ensureRecentData(updatingService);\r\n        return this.cellAddress;\r\n    }\r\n}\r\nexport class ArrayVertex extends FormulaVertex {\r\n    constructor(formula, cellAddress, size, version = 0) {\r\n        super(formula, cellAddress, version);\r\n        if (size.isRef) {\r\n            this.array = new ErroredArray(new CellError(ErrorType.REF, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\r\n        }\r\n        else {\r\n            this.array = new NotComputedArray(size);\r\n        }\r\n    }\r\n    get width() {\r\n        return this.array.width();\r\n    }\r\n    get height() {\r\n        return this.array.height();\r\n    }\r\n    get sheet() {\r\n        return this.cellAddress.sheet;\r\n    }\r\n    get leftCorner() {\r\n        return this.cellAddress;\r\n    }\r\n    setCellValue(value) {\r\n        if (value instanceof CellError) {\r\n            this.setErrorValue(value);\r\n            return value;\r\n        }\r\n        const array = ArrayValue.fromInterpreterValue(value);\r\n        array.resize(this.array.size);\r\n        this.array = array;\r\n        return value;\r\n    }\r\n    getCellValue() {\r\n        if (this.array instanceof NotComputedArray) {\r\n            throw Error('Array not computed yet.');\r\n        }\r\n        return this.array.simpleRangeValue();\r\n    }\r\n    valueOrUndef() {\r\n        if (this.array instanceof NotComputedArray) {\r\n            return undefined;\r\n        }\r\n        return this.array.simpleRangeValue();\r\n    }\r\n    getArrayCellValue(address) {\r\n        const col = address.col - this.cellAddress.col;\r\n        const row = address.row - this.cellAddress.row;\r\n        try {\r\n            return this.array.get(col, row);\r\n        }\r\n        catch (e) {\r\n            return new CellError(ErrorType.REF);\r\n        }\r\n    }\r\n    getArrayCellRawValue(address) {\r\n        const val = this.getArrayCellValue(address);\r\n        if (val instanceof CellError || val === EmptyValue) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return getRawValue(val);\r\n        }\r\n    }\r\n    setArrayCellValue(address, value) {\r\n        const col = address.col - this.cellAddress.col;\r\n        const row = address.row - this.cellAddress.row;\r\n        if (this.array instanceof ArrayValue) {\r\n            this.array.set(col, row, value);\r\n        }\r\n    }\r\n    setNoSpace() {\r\n        this.array = new ErroredArray(new CellError(ErrorType.SPILL, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\r\n        return this.getCellValue();\r\n    }\r\n    getRange() {\r\n        return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\r\n    }\r\n    getRangeOrUndef() {\r\n        return AbsoluteCellRange.spanFromOrUndef(this.cellAddress, this.width, this.height);\r\n    }\r\n    setAddress(address) {\r\n        this.cellAddress = address;\r\n    }\r\n    setFormula(newFormula) {\r\n        this.formula = newFormula;\r\n    }\r\n    spansThroughSheetRows(sheet, startRow, endRow = startRow) {\r\n        return (this.cellAddress.sheet === sheet) &&\r\n            (this.cellAddress.row <= endRow) &&\r\n            (startRow < this.cellAddress.row + this.height);\r\n    }\r\n    spansThroughSheetColumn(sheet, col, columnEnd = col) {\r\n        return (this.cellAddress.sheet === sheet) &&\r\n            (this.cellAddress.col <= columnEnd) &&\r\n            (col < this.cellAddress.col + this.width);\r\n    }\r\n    isComputed() {\r\n        return (!(this.array instanceof NotComputedArray));\r\n    }\r\n    columnsFromArray() {\r\n        return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\r\n    }\r\n    rowsFromArray() {\r\n        return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\r\n    }\r\n    /**\r\n     * No-op as array vertices are transformed eagerly.\r\n     */\r\n    ensureRecentData(_updatingService) {\r\n    }\r\n    isLeftCorner(address) {\r\n        return equalSimpleCellAddress(this.cellAddress, address);\r\n    }\r\n    setErrorValue(error) {\r\n        this.array = new ErroredArray(error, this.array.size);\r\n    }\r\n}\r\n/**\r\n * Represents vertex which keeps formula\r\n */\r\nexport class FormulaCellVertex extends FormulaVertex {\r\n    constructor(\r\n    /** Formula in AST format */\r\n    formula, \r\n    /** Address which this vertex represents */\r\n    address, version) {\r\n        super(formula, address, version);\r\n    }\r\n    valueOrUndef() {\r\n        return this.cachedCellValue;\r\n    }\r\n    /**\r\n     * Sets computed cell value stored in this vertex\r\n     */\r\n    setCellValue(cellValue) {\r\n        this.cachedCellValue = cellValue;\r\n        return this.cachedCellValue;\r\n    }\r\n    /**\r\n     * Returns cell value stored in vertex\r\n     */\r\n    getCellValue() {\r\n        if (this.cachedCellValue !== undefined) {\r\n            return this.cachedCellValue;\r\n        }\r\n        else {\r\n            throw Error('Value of the formula cell is not computed.');\r\n        }\r\n    }\r\n    isComputed() {\r\n        return (this.cachedCellValue !== undefined);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from './ArraySize';\r\nimport { EmptyValue } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nexport class NotComputedArray {\r\n    constructor(size) {\r\n        this.size = size;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    get(col, row) {\r\n        throw Error('Array not computed yet.');\r\n    }\r\n    simpleRangeValue() {\r\n        throw Error('Array not computed yet.');\r\n    }\r\n}\r\nexport class ArrayValue {\r\n    constructor(array) {\r\n        this.size = new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\r\n        this.array = array;\r\n    }\r\n    static fromInterpreterValue(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new ArrayValue(value.data);\r\n        }\r\n        else {\r\n            return new ArrayValue([[value]]);\r\n        }\r\n    }\r\n    simpleRangeValue() {\r\n        return SimpleRangeValue.onlyValues(this.array);\r\n    }\r\n    addRows(aboveRow, numberOfRows) {\r\n        this.array.splice(aboveRow, 0, ...this.nullArrays(numberOfRows, this.width()));\r\n        this.size.height += numberOfRows;\r\n    }\r\n    addColumns(aboveColumn, numberOfColumns) {\r\n        for (let i = 0; i < this.height(); i++) {\r\n            this.array[i].splice(aboveColumn, 0, ...new Array(numberOfColumns).fill(EmptyValue));\r\n        }\r\n        this.size.width += numberOfColumns;\r\n    }\r\n    removeRows(startRow, endRow) {\r\n        if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        const numberOfRows = endRow - startRow + 1;\r\n        this.array.splice(startRow, numberOfRows);\r\n        this.size.height -= numberOfRows;\r\n    }\r\n    removeColumns(leftmostColumn, rightmostColumn) {\r\n        if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        const numberOfColumns = rightmostColumn - leftmostColumn + 1;\r\n        for (const row of this.array) {\r\n            row.splice(leftmostColumn, numberOfColumns);\r\n        }\r\n        this.size.width -= numberOfColumns;\r\n    }\r\n    nullArrays(count, size) {\r\n        const result = [];\r\n        for (let i = 0; i < count; ++i) {\r\n            result.push(new Array(size).fill(EmptyValue));\r\n        }\r\n        return result;\r\n    }\r\n    get(col, row) {\r\n        if (this.outOfBound(col, row)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        return this.array[row][col];\r\n    }\r\n    set(col, row, value) {\r\n        if (this.outOfBound(col, row)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        this.array[row][col] = value;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    raw() {\r\n        return this.array;\r\n    }\r\n    resize(newSize) {\r\n        if (this.height() < newSize.height && isFinite(newSize.height)) {\r\n            this.addRows(this.height(), newSize.height - this.height());\r\n        }\r\n        if (this.height() > newSize.height) {\r\n            throw Error('Resizing to smaller array');\r\n        }\r\n        if (this.width() < newSize.width && isFinite(newSize.width)) {\r\n            this.addColumns(this.width(), newSize.width - this.width());\r\n        }\r\n        if (this.width() > newSize.width) {\r\n            throw Error('Resizing to smaller array');\r\n        }\r\n    }\r\n    outOfBound(col, row) {\r\n        return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\r\n    }\r\n}\r\nexport class ErroredArray {\r\n    constructor(error, size) {\r\n        this.error = error;\r\n        this.size = size;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    get(col, row) {\r\n        return this.error;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    simpleRangeValue() {\r\n        return this.error;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Represents vertex bound to range\r\n */\r\nexport class RangeVertex {\r\n    constructor(range) {\r\n        this.range = range;\r\n        this.functionCache = new Map();\r\n        this.criterionFunctionCache = new Map();\r\n        this.dependentCacheRanges = new Set();\r\n        this.bruteForce = false;\r\n    }\r\n    get start() {\r\n        return this.range.start;\r\n    }\r\n    get end() {\r\n        return this.range.end;\r\n    }\r\n    get sheet() {\r\n        return this.range.start.sheet;\r\n    }\r\n    /**\r\n     * Returns cached value stored for given function\r\n     *\r\n     * @param functionName - name of the function\r\n     */\r\n    getFunctionValue(functionName) {\r\n        return this.functionCache.get(functionName);\r\n    }\r\n    /**\r\n     * Stores cached value for given function\r\n     *\r\n     * @param functionName - name of the function\r\n     * @param value - cached value\r\n     */\r\n    setFunctionValue(functionName, value) {\r\n        this.functionCache.set(functionName, value);\r\n    }\r\n    /**\r\n     * Returns cached value for given cache key and criterion text representation\r\n     *\r\n     * @param cacheKey - key to retrieve from the cache\r\n     * @param criterionString - criterion text (ex. '<=5')\r\n     */\r\n    getCriterionFunctionValue(cacheKey, criterionString) {\r\n        var _a;\r\n        return (_a = this.getCriterionFunctionValues(cacheKey).get(criterionString)) === null || _a === void 0 ? void 0 : _a[0];\r\n    }\r\n    /**\r\n     * Returns all cached values stored for given criterion function\r\n     *\r\n     * @param cacheKey - key to retrieve from the cache\r\n     */\r\n    getCriterionFunctionValues(cacheKey) {\r\n        var _a;\r\n        return (_a = this.criterionFunctionCache.get(cacheKey)) !== null && _a !== void 0 ? _a : new Map();\r\n    }\r\n    /**\r\n     * Stores all values for given criterion function\r\n     *\r\n     * @param cacheKey - key to store in the cache\r\n     * @param values - map with values\r\n     */\r\n    setCriterionFunctionValues(cacheKey, values) {\r\n        this.criterionFunctionCache.set(cacheKey, values);\r\n    }\r\n    addDependentCacheRange(dependentRange) {\r\n        if (dependentRange !== this) {\r\n            this.dependentCacheRanges.add(dependentRange);\r\n        }\r\n    }\r\n    /**\r\n     * Clears function cache\r\n     */\r\n    clearCache() {\r\n        this.functionCache.clear();\r\n        this.criterionFunctionCache.clear();\r\n        this.dependentCacheRanges.forEach(range => range.criterionFunctionCache.clear());\r\n        this.dependentCacheRanges.clear();\r\n    }\r\n    /**\r\n     * Returns start of the range (it's top-left corner)\r\n     */\r\n    getStart() {\r\n        return this.start;\r\n    }\r\n    /**\r\n     * Returns end of the range (it's bottom-right corner)\r\n     */\r\n    getEnd() {\r\n        return this.end;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nvar NodeVisitStatus;\r\n(function (NodeVisitStatus) {\r\n    NodeVisitStatus[NodeVisitStatus[\"ON_STACK\"] = 0] = \"ON_STACK\";\r\n    NodeVisitStatus[NodeVisitStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\r\n    NodeVisitStatus[NodeVisitStatus[\"POPPED\"] = 2] = \"POPPED\";\r\n})(NodeVisitStatus || (NodeVisitStatus = {}));\r\n/**\r\n * Provides graph directed structure\r\n *\r\n * Invariants:\r\n * - this.edges(node) exists if and only if node is in the graph\r\n * - this.specialNodes* are always subset of this.nodes\r\n * - this.edges(node) is subset of this.nodes (i.e. it does not contain nodes not present in graph) -- this invariant DOES NOT HOLD right now\r\n */\r\nexport class Graph {\r\n    constructor(dependencyQuery) {\r\n        this.dependencyQuery = dependencyQuery;\r\n        /** Set with nodes in graph. */\r\n        this.nodes = new Set();\r\n        this.specialNodes = new Set();\r\n        this.specialNodesStructuralChanges = new Set();\r\n        this.specialNodesRecentlyChanged = new Set();\r\n        this.infiniteRanges = new Set();\r\n        /** Nodes adjacency mapping. */\r\n        this.edges = new Map();\r\n    }\r\n    /**\r\n     * Adds node to a graph\r\n     *\r\n     * @param node - a node to be added\r\n     */\r\n    addNode(node) {\r\n        this.nodes.add(node);\r\n        if (!this.edges.has(node)) {\r\n            this.edges.set(node, new Set());\r\n        }\r\n    }\r\n    /**\r\n     * Adds edge between nodes.\r\n     *\r\n     * The nodes had to be added to the graph before, or the error will be raised\r\n     *\r\n     * @param fromNode - node from which edge is outcoming\r\n     * @param toNode - node to which edge is incoming\r\n     */\r\n    addEdge(fromNode, toNode) {\r\n        if (!this.nodes.has(fromNode)) {\r\n            throw new Error(`Unknown node ${fromNode}`);\r\n        }\r\n        if (!this.nodes.has(toNode)) {\r\n            throw new Error(`Unknown node ${toNode}`);\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        this.edges.get(fromNode).add(toNode);\r\n    }\r\n    removeEdge(fromNode, toNode) {\r\n        if (this.existsEdge(fromNode, toNode)) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            this.edges.get(fromNode).delete(toNode);\r\n        }\r\n        else {\r\n            throw new Error('Edge does not exist');\r\n        }\r\n    }\r\n    softRemoveEdge(fromNode, toNode) {\r\n        var _a;\r\n        (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.delete(toNode);\r\n    }\r\n    removeIncomingEdges(toNode) {\r\n        this.edges.forEach((nodeEdges) => {\r\n            nodeEdges.delete(toNode);\r\n        });\r\n    }\r\n    /**\r\n     * Returns nodes adjacent to given node\r\n     *\r\n     * @param node - node to which adjacent nodes we want to retrieve\r\n     */\r\n    adjacentNodes(node) {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return this.edges.get(node);\r\n    }\r\n    adjacentNodesCount(node) {\r\n        return this.adjacentNodes(node).size;\r\n    }\r\n    /**\r\n     * Checks whether a node is present in graph\r\n     *\r\n     * @param node - node to check\r\n     */\r\n    hasNode(node) {\r\n        return this.nodes.has(node);\r\n    }\r\n    /**\r\n     * Returns number of nodes in graph\r\n     */\r\n    nodesCount() {\r\n        return this.nodes.size;\r\n    }\r\n    /**\r\n     * Returns number of edges in graph\r\n     */\r\n    edgesCount() {\r\n        let result = 0;\r\n        this.edges.forEach((edgesForNode) => (result += edgesForNode.size));\r\n        return result;\r\n    }\r\n    removeNode(node) {\r\n        for (const adjacentNode of this.adjacentNodes(node).values()) {\r\n            this.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n        }\r\n        this.edges.delete(node);\r\n        this.nodes.delete(node);\r\n        this.specialNodes.delete(node);\r\n        this.specialNodesRecentlyChanged.delete(node);\r\n        this.specialNodesStructuralChanges.delete(node);\r\n        this.infiniteRanges.delete(node);\r\n        return this.removeDependencies(node);\r\n    }\r\n    markNodeAsSpecial(node) {\r\n        this.specialNodes.add(node);\r\n    }\r\n    markNodeAsSpecialRecentlyChanged(node) {\r\n        if (this.nodes.has(node)) {\r\n            this.specialNodesRecentlyChanged.add(node);\r\n        }\r\n    }\r\n    markNodeAsChangingWithStructure(node) {\r\n        this.specialNodesStructuralChanges.add(node);\r\n    }\r\n    clearSpecialNodesRecentlyChanged() {\r\n        this.specialNodesRecentlyChanged.clear();\r\n    }\r\n    markNodeAsInfiniteRange(node) {\r\n        this.infiniteRanges.add(node);\r\n    }\r\n    /**\r\n     * Checks whether exists edge between nodes\r\n     *\r\n     * @param fromNode - node from which edge is outcoming\r\n     * @param toNode - node to which edge is incoming\r\n     */\r\n    existsEdge(fromNode, toNode) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.has(toNode)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /*\r\n     * return a topological sort order, but separates vertices that exist in some cycle\r\n     */\r\n    topSortWithScc() {\r\n        return this.getTopSortedWithSccSubgraphFrom(Array.from(this.nodes), () => true, () => {\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * an iterative implementation of Tarjan's algorithm for finding strongly connected compontents\r\n     * returns vertices in order of topological sort, but vertices that are on cycles are kept separate\r\n     *\r\n     * @param modifiedNodes - seed for computation. During engine init run, all of the vertices of grap. In recomputation run, changed vertices.\r\n     * @param operatingFunction - recomputes value of a node, and returns whether a change occured\r\n     * @param onCycle - action to be performed when node is on cycle\r\n     */\r\n    getTopSortedWithSccSubgraphFrom(modifiedNodes, operatingFunction, onCycle) {\r\n        const entranceTime = new Map();\r\n        const low = new Map();\r\n        const parent = new Map();\r\n        const inSCC = new Set();\r\n        // node status life cycle:\r\n        // undefined -> ON_STACK -> PROCESSED -> POPPED\r\n        const nodeStatus = new Map();\r\n        const order = [];\r\n        let time = 0;\r\n        const sccNonSingletons = new Set();\r\n        modifiedNodes.reverse();\r\n        modifiedNodes.forEach((v) => {\r\n            if (nodeStatus.get(v) !== undefined) {\r\n                return;\r\n            }\r\n            const DFSstack = [v];\r\n            const SCCstack = [];\r\n            nodeStatus.set(v, NodeVisitStatus.ON_STACK);\r\n            while (DFSstack.length > 0) {\r\n                const u = DFSstack[DFSstack.length - 1];\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                switch (nodeStatus.get(u)) {\r\n                    case NodeVisitStatus.ON_STACK: {\r\n                        entranceTime.set(u, time);\r\n                        low.set(u, time);\r\n                        SCCstack.push(u);\r\n                        time++;\r\n                        this.adjacentNodes(u).forEach((t) => {\r\n                            if (entranceTime.get(t) === undefined) {\r\n                                DFSstack.push(t);\r\n                                parent.set(t, u);\r\n                                nodeStatus.set(t, NodeVisitStatus.ON_STACK);\r\n                            }\r\n                        });\r\n                        nodeStatus.set(u, NodeVisitStatus.PROCESSED);\r\n                        break;\r\n                    }\r\n                    case NodeVisitStatus.PROCESSED: { // leaving this DFS subtree\r\n                        let uLow;\r\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                        uLow = entranceTime.get(u);\r\n                        this.adjacentNodes(u).forEach((t) => {\r\n                            if (!inSCC.has(t)) {\r\n                                if (parent.get(t) === u) {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    uLow = Math.min(uLow, low.get(t));\r\n                                }\r\n                                else {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    uLow = Math.min(uLow, entranceTime.get(t));\r\n                                }\r\n                            }\r\n                        });\r\n                        low.set(u, uLow);\r\n                        if (uLow === entranceTime.get(u)) {\r\n                            const currentSCC = [];\r\n                            do {\r\n                                currentSCC.push(SCCstack[SCCstack.length - 1]);\r\n                                SCCstack.pop();\r\n                            } while (currentSCC[currentSCC.length - 1] !== u);\r\n                            currentSCC.forEach((t) => {\r\n                                inSCC.add(t);\r\n                            });\r\n                            order.push(...currentSCC);\r\n                            if (currentSCC.length > 1) {\r\n                                currentSCC.forEach((t) => {\r\n                                    sccNonSingletons.add(t);\r\n                                });\r\n                            }\r\n                        }\r\n                        DFSstack.pop();\r\n                        nodeStatus.set(u, NodeVisitStatus.POPPED);\r\n                        break;\r\n                    }\r\n                    case NodeVisitStatus.POPPED: { // it's a 'shadow' copy, we already processed this vertex and can ignore it\r\n                        DFSstack.pop();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const shouldBeUpdatedMapping = new Set(modifiedNodes);\r\n        const sorted = [];\r\n        const cycled = [];\r\n        order.reverse();\r\n        order.forEach((t) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            if (sccNonSingletons.has(t) || this.adjacentNodes(t).has(t)) {\r\n                cycled.push(t);\r\n                onCycle(t);\r\n                this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\r\n            }\r\n            else {\r\n                sorted.push(t);\r\n                if (shouldBeUpdatedMapping.has(t) && operatingFunction(t)) {\r\n                    this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\r\n                }\r\n            }\r\n        });\r\n        return { sorted, cycled };\r\n    }\r\n    getDependencies(vertex) {\r\n        const result = [];\r\n        this.edges.forEach((adjacentNodes, sourceNode) => {\r\n            if (adjacentNodes.has(vertex)) {\r\n                result.push(sourceNode);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    removeDependencies(node) {\r\n        const dependencies = this.dependencyQuery(node);\r\n        for (const [_, dependency] of dependencies) {\r\n            this.softRemoveEdge(dependency, node);\r\n        }\r\n        return dependencies;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\r\nimport { simpleCellAddress } from '../Cell';\r\n/**\r\n * Mapping from address ranges to range vertices\r\n */\r\nexport class RangeMapping {\r\n    constructor() {\r\n        /** Map in which actual data is stored. */\r\n        this.rangeMapping = new Map();\r\n    }\r\n    getMappingSize(sheet) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n    /**\r\n     * Saves range vertex\r\n     *\r\n     * @param vertex - vertex to save\r\n     */\r\n    setRange(vertex) {\r\n        let sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\r\n        if (sheetMap === undefined) {\r\n            sheetMap = new Map();\r\n            this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\r\n        }\r\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\r\n        sheetMap.set(key, vertex);\r\n    }\r\n    removeRange(vertex) {\r\n        const sheet = vertex.getStart().sheet;\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (sheetMap === undefined) {\r\n            return;\r\n        }\r\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\r\n        sheetMap.delete(key);\r\n        if (sheetMap.size === 0) {\r\n            this.rangeMapping.delete(sheet);\r\n        }\r\n    }\r\n    /**\r\n     * Returns associated vertex for given range\r\n     *\r\n     * @param start - top-left corner of the range\r\n     * @param end - bottom-right corner of the range\r\n     */\r\n    getRange(start, end) {\r\n        const sheetMap = this.rangeMapping.get(start.sheet);\r\n        const key = keyFromAddresses(start, end);\r\n        return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\r\n    }\r\n    fetchRange(start, end) {\r\n        const maybeRange = this.getRange(start, end);\r\n        if (!maybeRange) {\r\n            throw Error('Range does not exist');\r\n        }\r\n        return maybeRange;\r\n    }\r\n    truncateRanges(span, coordinate) {\r\n        const verticesToRemove = Array();\r\n        const updated = Array();\r\n        const verticesWithChangedSize = Array();\r\n        const sheet = span.sheet;\r\n        for (const [key, vertex] of this.entriesFromSheet(span.sheet)) {\r\n            const range = vertex.range;\r\n            if (span.start <= coordinate(vertex.range.end)) {\r\n                range.removeSpan(span);\r\n                if (range.shouldBeRemoved()) {\r\n                    this.removeByKey(sheet, key);\r\n                    verticesToRemove.push(vertex);\r\n                }\r\n                else {\r\n                    updated.push([key, vertex]);\r\n                }\r\n                verticesWithChangedSize.push(vertex);\r\n            }\r\n        }\r\n        const verticesToMerge = [];\r\n        updated.sort((left, right) => compareBy(left[1], right[1], coordinate));\r\n        for (const [oldKey, vertex] of updated) {\r\n            const newKey = keyFromRange(vertex.range);\r\n            if (newKey === oldKey) {\r\n                continue;\r\n            }\r\n            const existingVertex = this.getByKey(sheet, newKey);\r\n            this.removeByKey(sheet, oldKey);\r\n            if (existingVertex !== undefined && vertex != existingVertex) {\r\n                verticesToMerge.push([existingVertex, vertex]);\r\n            }\r\n            else {\r\n                this.setRange(vertex);\r\n            }\r\n        }\r\n        return {\r\n            verticesToRemove,\r\n            verticesToMerge,\r\n            verticesWithChangedSize\r\n        };\r\n    }\r\n    moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\r\n        return this.updateVerticesFromSheet(sheet, (key, vertex) => {\r\n            if (row <= vertex.start.row) {\r\n                vertex.range.shiftByRows(numberOfRows);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else if (row > vertex.start.row && row <= vertex.end.row) {\r\n                vertex.range.expandByRows(numberOfRows);\r\n                return {\r\n                    changedSize: true,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\r\n        return this.updateVerticesFromSheet(sheet, (key, vertex) => {\r\n            if (column <= vertex.start.col) {\r\n                vertex.range.shiftByColumns(numberOfColumns);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else if (column > vertex.start.col && column <= vertex.end.col) {\r\n                vertex.range.expandByColumns(numberOfColumns);\r\n                return {\r\n                    changedSize: true,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\r\n        this.updateVerticesFromSheet(sourceRange.sheet, (key, vertex) => {\r\n            if (sourceRange.containsRange(vertex.range)) {\r\n                vertex.range.shiftByColumns(toRight);\r\n                vertex.range.shiftByRows(toBottom);\r\n                vertex.range.moveToSheet(toSheet);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    removeRangesInSheet(sheet) {\r\n        if (this.rangeMapping.has(sheet)) {\r\n            const ranges = this.rangeMapping.get(sheet).values();\r\n            this.rangeMapping.delete(sheet);\r\n            return ranges;\r\n        }\r\n        return [][Symbol.iterator]();\r\n    }\r\n    *rangesInSheet(sheet) {\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (!sheetMap) {\r\n            return;\r\n        }\r\n        yield* sheetMap.values();\r\n    }\r\n    *rangeVerticesContainedInRange(sourceRange) {\r\n        for (const rangeVertex of this.rangesInSheet(sourceRange.sheet)) {\r\n            if (sourceRange.containsRange(rangeVertex.range)) {\r\n                yield rangeVertex;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Finds smaller range does have own vertex.\r\n     *\r\n     * @param range\r\n     */\r\n    findSmallerRange(range) {\r\n        if (range.height() > 1 && Number.isFinite(range.height())) {\r\n            const valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\r\n            const rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\r\n            if (rowLessVertex !== undefined) {\r\n                const restRange = AbsoluteCellRange.fromSimpleCellAddresses(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\r\n                return {\r\n                    smallerRangeVertex: rowLessVertex,\r\n                    restRange,\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            restRange: range,\r\n        };\r\n    }\r\n    *entriesFromSheet(sheet) {\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (!sheetMap) {\r\n            return;\r\n        }\r\n        yield* sheetMap.entries();\r\n    }\r\n    removeByKey(sheet, key) {\r\n        this.rangeMapping.get(sheet).delete(key);\r\n    }\r\n    getByKey(sheet, key) {\r\n        var _a;\r\n        return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\r\n    }\r\n    updateVerticesFromSheet(sheet, fn) {\r\n        const updated = Array();\r\n        for (const [key, vertex] of this.entriesFromSheet(sheet)) {\r\n            const result = fn(key, vertex);\r\n            if (result !== undefined) {\r\n                this.removeByKey(sheet, key);\r\n                updated.push(result);\r\n            }\r\n        }\r\n        updated.forEach(entry => {\r\n            this.setRange(entry.vertex);\r\n        });\r\n        return {\r\n            verticesWithChangedSize: updated\r\n                .filter(entry => entry.changedSize)\r\n                .map(entry => entry.vertex)\r\n        };\r\n    }\r\n}\r\nfunction keyFromAddresses(start, end) {\r\n    return `${start.col},${start.row},${end.col},${end.row}`;\r\n}\r\nfunction keyFromRange(range) {\r\n    return keyFromAddresses(range.start, range.end);\r\n}\r\nconst compareBy = (left, right, coordinate) => {\r\n    const leftStart = coordinate(left.range.start);\r\n    const rightStart = coordinate(left.range.start);\r\n    if (leftStart === rightStart) {\r\n        const leftEnd = coordinate(left.range.end);\r\n        const rightEnd = coordinate(right.range.end);\r\n        return leftEnd - rightEnd;\r\n    }\r\n    else {\r\n        return leftStart - rightStart;\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { NoSheetWithIdError, NoSheetWithNameError, SheetNameAlreadyTakenError } from '../errors';\r\nimport { UIElement } from '../i18n';\r\nfunction canonicalize(sheetDisplayName) {\r\n    return sheetDisplayName.toLowerCase();\r\n}\r\nclass Sheet {\r\n    constructor(id, displayName) {\r\n        this.id = id;\r\n        this.displayName = displayName;\r\n    }\r\n    get canonicalName() {\r\n        return canonicalize(this.displayName);\r\n    }\r\n}\r\nexport class SheetMapping {\r\n    constructor(languages) {\r\n        this.languages = languages;\r\n        this.mappingFromCanonicalName = new Map();\r\n        this.mappingFromId = new Map();\r\n        this.lastSheetId = -1;\r\n        this.fetch = (sheetName) => {\r\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\r\n            if (sheet === undefined) {\r\n                throw new NoSheetWithNameError(sheetName);\r\n            }\r\n            return sheet.id;\r\n        };\r\n        this.get = (sheetName) => {\r\n            var _a;\r\n            return (_a = this.mappingFromCanonicalName.get(canonicalize(sheetName))) === null || _a === void 0 ? void 0 : _a.id;\r\n        };\r\n        this.fetchDisplayName = (sheetId) => {\r\n            return this.fetchSheetById(sheetId).displayName;\r\n        };\r\n        this.sheetNamePrefix = languages.getUITranslation(UIElement.NEW_SHEET_PREFIX);\r\n    }\r\n    addSheet(newSheetDisplayName = `${this.sheetNamePrefix}${this.lastSheetId + 2}`) {\r\n        const newSheetCanonicalName = canonicalize(newSheetDisplayName);\r\n        if (this.mappingFromCanonicalName.has(newSheetCanonicalName)) {\r\n            throw new SheetNameAlreadyTakenError(newSheetDisplayName);\r\n        }\r\n        this.lastSheetId++;\r\n        const sheet = new Sheet(this.lastSheetId, newSheetDisplayName);\r\n        this.store(sheet);\r\n        return sheet.id;\r\n    }\r\n    removeSheet(sheetId) {\r\n        const sheet = this.fetchSheetById(sheetId);\r\n        if (sheetId == this.lastSheetId) {\r\n            --this.lastSheetId;\r\n        }\r\n        this.mappingFromCanonicalName.delete(sheet.canonicalName);\r\n        this.mappingFromId.delete(sheet.id);\r\n    }\r\n    getDisplayName(sheetId) {\r\n        var _a;\r\n        return (_a = this.mappingFromId.get(sheetId)) === null || _a === void 0 ? void 0 : _a.displayName;\r\n    }\r\n    *displayNames() {\r\n        for (const sheet of this.mappingFromCanonicalName.values()) {\r\n            yield sheet.displayName;\r\n        }\r\n    }\r\n    numberOfSheets() {\r\n        return this.mappingFromCanonicalName.size;\r\n    }\r\n    hasSheetWithId(sheetId) {\r\n        return this.mappingFromId.has(sheetId);\r\n    }\r\n    hasSheetWithName(sheetName) {\r\n        return this.mappingFromCanonicalName.has(canonicalize(sheetName));\r\n    }\r\n    renameSheet(sheetId, newDisplayName) {\r\n        const sheet = this.fetchSheetById(sheetId);\r\n        const currentDisplayName = sheet.displayName;\r\n        if (currentDisplayName === newDisplayName) {\r\n            return undefined;\r\n        }\r\n        const sheetWithThisCanonicalName = this.mappingFromCanonicalName.get(canonicalize(newDisplayName));\r\n        if (sheetWithThisCanonicalName !== undefined && sheetWithThisCanonicalName.id !== sheet.id) {\r\n            throw new SheetNameAlreadyTakenError(newDisplayName);\r\n        }\r\n        const currentCanonicalName = sheet.canonicalName;\r\n        this.mappingFromCanonicalName.delete(currentCanonicalName);\r\n        sheet.displayName = newDisplayName;\r\n        this.store(sheet);\r\n        return currentDisplayName;\r\n    }\r\n    sheetNames() {\r\n        return Array.from(this.mappingFromId.values()).map((s) => s.displayName);\r\n    }\r\n    store(sheet) {\r\n        this.mappingFromId.set(sheet.id, sheet);\r\n        this.mappingFromCanonicalName.set(sheet.canonicalName, sheet);\r\n    }\r\n    fetchSheetById(sheetId) {\r\n        const sheet = this.mappingFromId.get(sheetId);\r\n        if (sheet === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheet;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { buildTranslationPackage, TranslationPackage } from './TranslationPackage';\r\nexport { TranslationPackage, buildTranslationPackage };\r\nexport var UIElement;\r\n(function (UIElement) {\r\n    UIElement[\"NEW_SHEET_PREFIX\"] = \"NEW_SHEET_PREFIX\";\r\n})(UIElement || (UIElement = {}));\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { MissingTranslationError, ProtectedFunctionTranslationError } from '../errors';\r\nimport { UIElement } from './index';\r\nexport class TranslationPackage {\r\n    constructor(functions, errors, ui) {\r\n        this.functions = functions;\r\n        this.errors = errors;\r\n        this.ui = ui;\r\n        this._protectedTranslations = {\r\n            'VERSION': 'VERSION'\r\n        };\r\n        this.checkUI();\r\n        this.checkErrors();\r\n        this.checkFunctionTranslations(this.functions);\r\n        Object.assign(this.functions, this._protectedTranslations);\r\n    }\r\n    extendFunctions(additionalFunctionTranslations) {\r\n        this.checkFunctionTranslations(additionalFunctionTranslations);\r\n        Object.assign(this.functions, additionalFunctionTranslations);\r\n    }\r\n    buildFunctionMapping() {\r\n        return Object.keys(this.functions).reduce((ret, key) => {\r\n            ret[this.functions[key]] = key;\r\n            return ret;\r\n        }, {});\r\n    }\r\n    buildErrorMapping() {\r\n        return Object.keys(this.errors).reduce((ret, key) => {\r\n            ret[this.errors[key]] = key;\r\n            return ret;\r\n        }, {});\r\n    }\r\n    isFunctionTranslated(key) {\r\n        return this.functions[key] !== undefined;\r\n    }\r\n    getFunctionTranslations(functionIds) {\r\n        const translations = [];\r\n        for (const functionId of functionIds) {\r\n            if (this.isFunctionTranslated(functionId)) {\r\n                translations.push(this.functions[functionId]);\r\n            }\r\n        }\r\n        return translations;\r\n    }\r\n    getFunctionTranslation(key) {\r\n        const val = this.functions[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`functions.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    getMaybeFunctionTranslation(key) {\r\n        return this.functions[key];\r\n    }\r\n    getErrorTranslation(key) {\r\n        if (key === ErrorType.LIC) {\r\n            return `#${ErrorType.LIC}!`;\r\n        }\r\n        const val = this.errors[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`errors.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    getUITranslation(key) {\r\n        const val = this.ui[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`ui.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    checkUI() {\r\n        for (const key of Object.values(UIElement)) {\r\n            if (!(key in this.ui)) {\r\n                throw new MissingTranslationError(`ui.${key}`);\r\n            }\r\n        }\r\n    }\r\n    checkErrors() {\r\n        for (const key of Object.values(ErrorType)) {\r\n            if (!(key in this.errors) && (key !== ErrorType.LIC)) {\r\n                throw new MissingTranslationError(`errors.${key}`);\r\n            }\r\n        }\r\n    }\r\n    checkFunctionTranslations(functions) {\r\n        const functionNames = new Set(Object.getOwnPropertyNames(functions));\r\n        for (const protectedTranslation of Object.getOwnPropertyNames(this._protectedTranslations)) {\r\n            if (functionNames.has(protectedTranslation)) {\r\n                throw new ProtectedFunctionTranslationError(protectedTranslation);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function buildTranslationPackage(rawTranslationPackage) {\r\n    return new TranslationPackage(Object.assign({}, rawTranslationPackage.functions), Object.assign({}, rawTranslationPackage.errors), Object.assign({}, rawTranslationPackage.ui));\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue } from '../interpreter/InterpreterValue';\r\n/**\r\n * Represents singleton vertex bound to all empty cells\r\n */\r\nexport class EmptyCellVertex {\r\n    constructor() { }\r\n    /**\r\n     * Retrieves cell value bound to that singleton\r\n     */\r\n    getCellValue() {\r\n        return EmptyValue;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Represents vertex which keeps static cell value\r\n */\r\nexport class ValueCellVertex {\r\n    /** Static cell value. */\r\n    constructor(parsedValue, rawValue) {\r\n        this.parsedValue = parsedValue;\r\n        this.rawValue = rawValue;\r\n    }\r\n    getValues() {\r\n        return { parsedValue: this.parsedValue, rawValue: this.rawValue };\r\n    }\r\n    setValues(values) {\r\n        this.parsedValue = values.parsedValue;\r\n        this.rawValue = values.rawValue;\r\n    }\r\n    /**\r\n     * Returns cell value stored in vertex\r\n     */\r\n    getCellValue() {\r\n        return this.parsedValue;\r\n    }\r\n    setCellValue(_cellValue) {\r\n        throw Error('SetCellValue is deprecated for ValueCellVertex');\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../Cell';\r\nexport class ParsingErrorVertex {\r\n    constructor(errors, rawInput) {\r\n        this.errors = errors;\r\n        this.rawInput = rawInput;\r\n    }\r\n    getCellValue() {\r\n        return CellError.parsingError();\r\n    }\r\n    getFormula() {\r\n        return this.rawInput;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../../Cell';\r\n/**\r\n * Mapping from cell addresses to vertices\r\n *\r\n * Uses Map to store addresses, having minimal memory usage for sparse sheets but not necessarily constant set/lookup.\r\n */\r\nexport class SparseStrategy {\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        /**\r\n         * Map of Maps in which actual data is stored.\r\n         *\r\n         * Key of map in first level is column number.\r\n         * Key of map in second level is row number.\r\n         */\r\n        this.mapping = new Map();\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        var _a;\r\n        return (_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.get(address.row);\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        this.width = Math.max(this.width, address.col + 1);\r\n        this.height = Math.max(this.height, address.row + 1);\r\n        let colMapping = this.mapping.get(address.col);\r\n        if (!colMapping) {\r\n            colMapping = new Map();\r\n            this.mapping.set(address.col, colMapping);\r\n        }\r\n        colMapping.set(address.row, newVertex);\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        var _a;\r\n        return !!((_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.get(address.row));\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    removeCell(address) {\r\n        var _a;\r\n        (_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.delete(address.row);\r\n    }\r\n    addRows(row, numberOfRows) {\r\n        this.mapping.forEach((rowMapping) => {\r\n            const tmpMapping = new Map();\r\n            rowMapping.forEach((vertex, rowNumber) => {\r\n                if (rowNumber >= row) {\r\n                    tmpMapping.set(rowNumber + numberOfRows, vertex);\r\n                    rowMapping.delete(rowNumber);\r\n                }\r\n            });\r\n            tmpMapping.forEach((vertex, rowNumber) => {\r\n                rowMapping.set(rowNumber, vertex);\r\n            });\r\n        });\r\n        this.height += numberOfRows;\r\n    }\r\n    addColumns(column, numberOfColumns) {\r\n        const tmpMapping = new Map();\r\n        this.mapping.forEach((rowMapping, colNumber) => {\r\n            if (colNumber >= column) {\r\n                tmpMapping.set(colNumber + numberOfColumns, rowMapping);\r\n                this.mapping.delete(colNumber);\r\n            }\r\n        });\r\n        tmpMapping.forEach((rowMapping, colNumber) => {\r\n            this.mapping.set(colNumber, rowMapping);\r\n        });\r\n        this.width += numberOfColumns;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.mapping.forEach((rowMapping) => {\r\n            const tmpMapping = new Map();\r\n            rowMapping.forEach((vertex, rowNumber) => {\r\n                if (rowNumber >= removedRows.rowStart) {\r\n                    rowMapping.delete(rowNumber);\r\n                    if (rowNumber > removedRows.rowEnd) {\r\n                        tmpMapping.set(rowNumber - removedRows.numberOfRows, vertex);\r\n                    }\r\n                }\r\n            });\r\n            tmpMapping.forEach((vertex, rowNumber) => {\r\n                rowMapping.set(rowNumber, vertex);\r\n            });\r\n        });\r\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\r\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\r\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        const tmpMapping = new Map();\r\n        this.mapping.forEach((rowMapping, colNumber) => {\r\n            if (colNumber >= removedColumns.columnStart) {\r\n                this.mapping.delete(colNumber);\r\n                if (colNumber > removedColumns.columnEnd) {\r\n                    tmpMapping.set(colNumber - removedColumns.numberOfColumns, rowMapping);\r\n                }\r\n            }\r\n        });\r\n        tmpMapping.forEach((rowMapping, colNumber) => {\r\n            this.mapping.set(colNumber, rowMapping);\r\n        });\r\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\r\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\r\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\r\n    }\r\n    *getEntries(sheet) {\r\n        for (const [colNumber, col] of this.mapping) {\r\n            for (const [rowNumber, value] of col) {\r\n                yield [simpleCellAddress(sheet, colNumber, rowNumber), value];\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumn(column) {\r\n        const colMapping = this.mapping.get(column);\r\n        if (colMapping === undefined) {\r\n            return;\r\n        }\r\n        for (const [_, vertex] of colMapping) {\r\n            yield vertex;\r\n        }\r\n    }\r\n    *verticesFromRow(row) {\r\n        for (const colMapping of this.mapping.values()) {\r\n            const rowVertex = colMapping.get(row);\r\n            if (rowVertex !== undefined) {\r\n                yield rowVertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        for (const column of columnsSpan.columns()) {\r\n            const colMapping = this.mapping.get(column);\r\n            if (colMapping === undefined) {\r\n                continue;\r\n            }\r\n            for (const [_, vertex] of colMapping) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        for (const colMapping of this.mapping.values()) {\r\n            for (const row of rowsSpan.rows()) {\r\n                const rowVertex = colMapping.get(row);\r\n                if (rowVertex !== undefined) {\r\n                    yield rowVertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        for (const [col, colMapping] of this.mapping.entries()) {\r\n            for (const row of rowsSpan.rows()) {\r\n                const rowVertex = colMapping.get(row);\r\n                if (rowVertex !== undefined) {\r\n                    yield [simpleCellAddress(rowsSpan.sheet, col, row), rowVertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        for (const col of columnsSpan.columns()) {\r\n            const colMapping = this.mapping.get(col);\r\n            if (colMapping !== undefined) {\r\n                for (const [row, vertex] of colMapping.entries()) {\r\n                    yield [simpleCellAddress(columnsSpan.sheet, col, row), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *vertices() {\r\n        for (const [_, col] of this.mapping) {\r\n            for (const [_, value] of col) {\r\n                if (value !== undefined) {\r\n                    yield value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../../Cell';\r\n/**\r\n * Mapping from cell addresses to vertices\r\n *\r\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\r\n */\r\nexport class DenseStrategy {\r\n    /**\r\n     * @param width - width of the stored sheet\r\n     * @param height - height of the stored sheet\r\n     */\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mapping = new Array(height);\r\n        for (let i = 0; i < height; i++) {\r\n            this.mapping[i] = new Array(width);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        return this.getCellVertex(address.col, address.row);\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        this.width = Math.max(this.width, address.col + 1);\r\n        this.height = Math.max(this.height, address.row + 1);\r\n        const rowMapping = this.mapping[address.row];\r\n        if (!rowMapping) {\r\n            this.mapping[address.row] = new Array(this.width);\r\n        }\r\n        this.mapping[address.row][address.col] = newVertex;\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        const row = this.mapping[address.row];\r\n        if (!row) {\r\n            return false;\r\n        }\r\n        return !!row[address.col];\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    removeCell(address) {\r\n        if (this.mapping[address.row] !== undefined) {\r\n            delete this.mapping[address.row][address.col];\r\n        }\r\n    }\r\n    addRows(row, numberOfRows) {\r\n        const newRows = [];\r\n        for (let i = 0; i < numberOfRows; i++) {\r\n            newRows.push(new Array(this.width));\r\n        }\r\n        this.mapping.splice(row, 0, ...newRows);\r\n        this.height += numberOfRows;\r\n    }\r\n    addColumns(column, numberOfColumns) {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.mapping[i].splice(column, 0, ...new Array(numberOfColumns));\r\n        }\r\n        this.width += numberOfColumns;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\r\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\r\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\r\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\r\n        }\r\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\r\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\r\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\r\n    }\r\n    *getEntries(sheet) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = 0; x < this.width; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumn(column) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            const vertex = this.getCellVertex(column, y);\r\n            if (vertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRow(row) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            const vertex = this.getCellVertex(x, row);\r\n            if (vertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *vertices() {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = 0; x < this.width; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getCellVertex(x, y) {\r\n        var _a;\r\n        return (_a = this.mapping[y]) === null || _a === void 0 ? void 0 : _a[x];\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport class InterpreterState {\r\n    constructor(formulaAddress, arraysFlag, formulaVertex) {\r\n        this.formulaAddress = formulaAddress;\r\n        this.arraysFlag = arraysFlag;\r\n        this.formulaVertex = formulaVertex;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceRangeToScalar, coerceScalarToBoolean, coerceScalarToString, coerceToRange } from '../ArithmeticHelper';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../../SimpleRangeValue';\r\nexport var FunctionArgumentType;\r\n(function (FunctionArgumentType) {\r\n    /**\r\n     * String type.\r\n     */\r\n    FunctionArgumentType[\"STRING\"] = \"STRING\";\r\n    /**\r\n     * Floating point type.\r\n     */\r\n    FunctionArgumentType[\"NUMBER\"] = \"NUMBER\";\r\n    /**\r\n     * Boolean type.\r\n     */\r\n    FunctionArgumentType[\"BOOLEAN\"] = \"BOOLEAN\";\r\n    /**\r\n     * Any non-range value.\r\n     */\r\n    FunctionArgumentType[\"SCALAR\"] = \"SCALAR\";\r\n    /**\r\n     * Any non-range, no-error type.\r\n     */\r\n    FunctionArgumentType[\"NOERROR\"] = \"NOERROR\";\r\n    /**\r\n     * Range type.\r\n     */\r\n    FunctionArgumentType[\"RANGE\"] = \"RANGE\";\r\n    /**\r\n     * Integer type.\r\n     */\r\n    FunctionArgumentType[\"INTEGER\"] = \"INTEGER\";\r\n    /**\r\n     * String representing complex number.\r\n     */\r\n    FunctionArgumentType[\"COMPLEX\"] = \"COMPLEX\";\r\n    /**\r\n     * Range or scalar.\r\n     */\r\n    FunctionArgumentType[\"ANY\"] = \"ANY\";\r\n})(FunctionArgumentType || (FunctionArgumentType = {}));\r\n/**\r\n * Abstract class representing interpreter function plugin.\r\n * Plugin may contain multiple functions. Each function should be of type {@link PluginFunctionType} and needs to be\r\n * included in {@link implementedFunctions}\r\n */\r\nexport class FunctionPlugin {\r\n    constructor(interpreter) {\r\n        this.coerceScalarToNumberOrError = (arg) => this.arithmeticHelper.coerceScalarToNumberOrError(arg);\r\n        /**\r\n         * A method that should wrap the logic of every built-in function and custom function. It:\r\n         * - Evaluates the function's arguments.\r\n         * - Validates the number of arguments against the [`parameters` array](#function-options).\r\n         * - Coerces the argument values to types set in the [`parameters` array](#argument-validation-options).\r\n         * - Handles optional arguments and default values according to options set in the [`parameters` array](#argument-validation-options).\r\n         * - Validates the function's arguments against the [argument validation options](#argument-validation-options).\r\n         * - Duplicates the arguments according to the [`repeatLastArgs` option](#function-options).\r\n         * - Handles the [array arithmetic mode](arrays.md#array-arithmetic-mode).\r\n         * - Performs [function vectorization](arrays.md#passing-arrays-to-scalar-functions-vectorization).\r\n         * - Performs [argument broadcasting](arrays.md#broadcasting).\r\n         */\r\n        this.runFunction = (args, state, metadata, functionImplementation) => {\r\n            const evaluatedArguments = this.evaluateArguments(args, state, metadata);\r\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\r\n            const argumentValues = evaluatedArguments.map(([value, _]) => value);\r\n            const argumentIgnorableFlags = evaluatedArguments.map(([_, ignorable]) => ignorable);\r\n            const argumentMetadata = this.buildMetadataForEachArgumentValue(argumentValues.length, metadata);\r\n            const isVectorizationOn = state.arraysFlag && !metadata.vectorizationForbidden;\r\n            if (!this.isNumberOfArgumentValuesValid(argumentMetadata, argumentValues.length)) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            const [resultArrayHeight, resultArrayWidth] = isVectorizationOn ? this.calculateSizeOfVectorizedResultArray(argumentValues, argumentMetadata) : [1, 1];\r\n            if (resultArrayHeight === 1 && resultArrayWidth === 1) {\r\n                const vectorizedArguments = this.vectorizeAndBroadcastArgumentsIfNecessary(isVectorizationOn, argumentValues, argumentMetadata, 0, 0);\r\n                return this.calculateSingleCellOfResultArray(state, vectorizedArguments, argumentMetadata, argumentIgnorableFlags, functionImplementation, metadata.returnNumberType);\r\n            }\r\n            const resultArray = [...Array(resultArrayHeight).keys()].map(row => [...Array(resultArrayWidth).keys()].map(col => {\r\n                const vectorizedArguments = this.vectorizeAndBroadcastArgumentsIfNecessary(isVectorizationOn, argumentValues, argumentMetadata, row, col);\r\n                const result = this.calculateSingleCellOfResultArray(state, vectorizedArguments, argumentMetadata, argumentIgnorableFlags, functionImplementation, metadata.returnNumberType);\r\n                if (result instanceof SimpleRangeValue) {\r\n                    throw new Error('Function returning array cannot be vectorized.');\r\n                }\r\n                return result;\r\n            }));\r\n            return SimpleRangeValue.onlyValues(resultArray);\r\n        };\r\n        this.runFunctionWithReferenceArgument = (args, state, metadata, noArgCallback, referenceCallback, nonReferenceCallback = () => new CellError(ErrorType.NA, ErrorMessage.CellRefExpected)) => {\r\n            if (args.length === 0) {\r\n                return this.returnNumberWrapper(noArgCallback(), metadata.returnNumberType);\r\n            }\r\n            else if (args.length > 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            let arg = args[0];\r\n            while (arg.type === AstNodeType.PARENTHESIS) {\r\n                arg = arg.expression;\r\n            }\r\n            let cellReference;\r\n            if (arg.type === AstNodeType.CELL_REFERENCE) {\r\n                cellReference = arg.reference.toSimpleCellAddress(state.formulaAddress);\r\n            }\r\n            else if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\r\n                try {\r\n                    cellReference = AbsoluteCellRange.fromAst(arg, state.formulaAddress).start;\r\n                }\r\n                catch (e) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.CellRefExpected);\r\n                }\r\n            }\r\n            if (cellReference !== undefined) {\r\n                return this.returnNumberWrapper(referenceCallback(cellReference), metadata.returnNumberType);\r\n            }\r\n            return this.runFunction(args, state, metadata, nonReferenceCallback);\r\n        };\r\n        this.interpreter = interpreter;\r\n        this.dependencyGraph = interpreter.dependencyGraph;\r\n        this.columnSearch = interpreter.columnSearch;\r\n        this.config = interpreter.config;\r\n        this.serialization = interpreter.serialization;\r\n        this.arraySizePredictor = interpreter.arraySizePredictor;\r\n        this.dateTimeHelper = interpreter.dateTimeHelper;\r\n        this.arithmeticHelper = interpreter.arithmeticHelper;\r\n    }\r\n    evaluateAst(ast, state) {\r\n        return this.interpreter.evaluateAst(ast, state);\r\n    }\r\n    arraySizeForAst(ast, state) {\r\n        return this.arraySizePredictor.checkArraySizeForAst(ast, state);\r\n    }\r\n    listOfScalarValues(asts, state) {\r\n        const ret = [];\r\n        for (const argAst of asts) {\r\n            const value = this.evaluateAst(argAst, state);\r\n            if (value instanceof SimpleRangeValue) {\r\n                for (const scalarValue of value.valuesFromTopLeftCorner()) {\r\n                    ret.push([scalarValue, true]);\r\n                }\r\n            }\r\n            else {\r\n                ret.push([value, false]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    coerceToType(arg, coercedType, state) {\r\n        let ret;\r\n        if (arg instanceof SimpleRangeValue) {\r\n            switch (coercedType.argumentType) {\r\n                case FunctionArgumentType.RANGE:\r\n                case FunctionArgumentType.ANY:\r\n                    ret = arg;\r\n                    break;\r\n                default: {\r\n                    const coerce = coerceRangeToScalar(arg, state);\r\n                    if (coerce === undefined) {\r\n                        return undefined;\r\n                    }\r\n                    arg = coerce;\r\n                }\r\n            }\r\n        }\r\n        if (!(arg instanceof SimpleRangeValue)) {\r\n            switch (coercedType.argumentType) {\r\n                case FunctionArgumentType.INTEGER:\r\n                case FunctionArgumentType.NUMBER:\r\n                    // eslint-disable-next-line no-case-declarations\r\n                    const coerced = this.coerceScalarToNumberOrError(arg);\r\n                    if (!isExtendedNumber(coerced)) {\r\n                        ret = coerced;\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line no-case-declarations\r\n                    const value = getRawValue(coerced);\r\n                    if (coercedType.maxValue !== undefined && value > coercedType.maxValue) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n                    }\r\n                    if (coercedType.minValue !== undefined && value < coercedType.minValue) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                    }\r\n                    if (coercedType.lessThan !== undefined && value >= coercedType.lessThan) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n                    }\r\n                    if (coercedType.greaterThan !== undefined && value <= coercedType.greaterThan) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                    }\r\n                    if (coercedType.argumentType === FunctionArgumentType.INTEGER && !Number.isInteger(value)) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.IntegerExpected);\r\n                    }\r\n                    ret = coerced;\r\n                    break;\r\n                case FunctionArgumentType.STRING:\r\n                    ret = coerceScalarToString(arg);\r\n                    break;\r\n                case FunctionArgumentType.BOOLEAN:\r\n                    ret = coerceScalarToBoolean(arg);\r\n                    break;\r\n                case FunctionArgumentType.SCALAR:\r\n                case FunctionArgumentType.NOERROR:\r\n                case FunctionArgumentType.ANY:\r\n                    ret = arg;\r\n                    break;\r\n                case FunctionArgumentType.RANGE:\r\n                    if (arg instanceof CellError) {\r\n                        return arg;\r\n                    }\r\n                    ret = coerceToRange(arg);\r\n                    break;\r\n                case FunctionArgumentType.COMPLEX:\r\n                    return this.arithmeticHelper.coerceScalarToComplex(getRawValue(arg));\r\n            }\r\n        }\r\n        if (coercedType.passSubtype || ret === undefined) {\r\n            return ret;\r\n        }\r\n        else {\r\n            return getRawValue(ret);\r\n        }\r\n    }\r\n    calculateSingleCellOfResultArray(state, vectorizedArguments, argumentsMetadata, argumentIgnorableFlags, functionImplementation, returnNumberType) {\r\n        const coercedArguments = this.coerceArgumentsToRequiredTypes(state, vectorizedArguments, argumentsMetadata, argumentIgnorableFlags);\r\n        if (coercedArguments instanceof CellError) {\r\n            return coercedArguments;\r\n        }\r\n        const functionCalculationResult = functionImplementation(...coercedArguments);\r\n        return this.returnNumberWrapper(functionCalculationResult, returnNumberType);\r\n    }\r\n    coerceArgumentsToRequiredTypes(state, vectorizedArguments, argumentsMetadata, argumentIgnorableFlags) {\r\n        const coercedArguments = [];\r\n        for (let i = 0; i < argumentsMetadata.length; i++) {\r\n            const argumentMetadata = argumentsMetadata[i];\r\n            const argumentValue = vectorizedArguments[i] !== undefined ? vectorizedArguments[i] : argumentMetadata === null || argumentMetadata === void 0 ? void 0 : argumentMetadata.defaultValue;\r\n            if (argumentValue === undefined) {\r\n                coercedArguments.push(undefined);\r\n                continue;\r\n            }\r\n            const coercedValue = this.coerceToType(argumentValue, argumentMetadata, state);\r\n            if (coercedValue === undefined && !argumentIgnorableFlags[i]) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (coercedValue instanceof CellError && argumentMetadata.argumentType !== FunctionArgumentType.SCALAR) {\r\n                return coercedValue;\r\n            }\r\n            coercedArguments.push(coercedValue);\r\n        }\r\n        return coercedArguments;\r\n    }\r\n    vectorizeAndBroadcastArgumentsIfNecessary(isVectorizationOn, argumentValues, argumentMetadata, row, col) {\r\n        return argumentValues.map((value, i) => isVectorizationOn && this.isRangePassedAsAScalarArgument(value, argumentMetadata[i])\r\n            ? this.vectorizeAndBroadcastRangeArgument(value, row, col)\r\n            : value);\r\n    }\r\n    vectorizeAndBroadcastRangeArgument(argumentValue, rowNum, colNum) {\r\n        var _a;\r\n        const targetRowNum = argumentValue.height() === 1 ? 0 : rowNum;\r\n        const targetColNum = argumentValue.width() === 1 ? 0 : colNum;\r\n        return (_a = argumentValue.data[targetRowNum]) === null || _a === void 0 ? void 0 : _a[targetColNum];\r\n    }\r\n    evaluateArguments(args, state, metadata) {\r\n        return metadata.expandRanges ? this.listOfScalarValues(args, state) : args.map((ast) => [this.evaluateAst(ast, state), false]);\r\n    }\r\n    buildMetadataForEachArgumentValue(numberOfArgumentValuesPassed, metadata) {\r\n        const argumentsMetadata = metadata.parameters ? [...metadata.parameters] : [];\r\n        const isRepeatLastArgsValid = metadata.repeatLastArgs !== undefined && Number.isInteger(metadata.repeatLastArgs) && metadata.repeatLastArgs > 0;\r\n        if (isRepeatLastArgsValid) {\r\n            while (numberOfArgumentValuesPassed > argumentsMetadata.length) {\r\n                argumentsMetadata.push(...argumentsMetadata.slice(argumentsMetadata.length - metadata.repeatLastArgs));\r\n            }\r\n        }\r\n        return argumentsMetadata;\r\n    }\r\n    isNumberOfArgumentValuesValid(argumentsMetadata, numberOfArgumentValuesPassed) {\r\n        if (numberOfArgumentValuesPassed > argumentsMetadata.length) {\r\n            return false;\r\n        }\r\n        if (numberOfArgumentValuesPassed < argumentsMetadata.length) {\r\n            const metadataForMissingArguments = argumentsMetadata.slice(numberOfArgumentValuesPassed);\r\n            const areMissingArgumentsOptional = metadataForMissingArguments.every(argMetadata => (argMetadata === null || argMetadata === void 0 ? void 0 : argMetadata.optionalArg) || (argMetadata === null || argMetadata === void 0 ? void 0 : argMetadata.defaultValue) !== undefined);\r\n            return areMissingArgumentsOptional;\r\n        }\r\n        return true;\r\n    }\r\n    calculateSizeOfVectorizedResultArray(argumentValues, argumentMetadata) {\r\n        const argumentsThatRequireVectorization = argumentValues\r\n            .filter((value, i) => this.isRangePassedAsAScalarArgument(value, argumentMetadata[i]));\r\n        const height = Math.max(1, ...argumentsThatRequireVectorization.map(val => val.height()));\r\n        const width = Math.max(1, ...argumentsThatRequireVectorization.map(val => val.width()));\r\n        return [height, width];\r\n    }\r\n    isRangePassedAsAScalarArgument(argumentValue, argumentMetadata) {\r\n        if (argumentValue == null || argumentMetadata == null) {\r\n            return false;\r\n        }\r\n        return argumentValue instanceof SimpleRangeValue\r\n            && ![FunctionArgumentType.RANGE, FunctionArgumentType.ANY].includes(argumentMetadata.argumentType);\r\n    }\r\n    metadata(name) {\r\n        const params = this.constructor.implementedFunctions[name];\r\n        if (params !== undefined) {\r\n            return params;\r\n        }\r\n        throw new Error(`No metadata for function ${name}.`);\r\n    }\r\n    returnNumberWrapper(val, type, format) {\r\n        if (type !== undefined && isExtendedNumber(val)) {\r\n            return this.arithmeticHelper.ExtendedNumberFactory(getRawValue(val), { type, format });\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport unorm from 'unorm';\r\nimport { CellError, CellValueTypeOrd, ErrorType, getCellValueType } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { collatorFromConfig } from '../StringHelper';\r\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, EmptyValue, getRawValue, getTypeFormatOfExtendedNumber, isExtendedNumber, NumberType, PercentNumber, TimeNumber } from './InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nconst COMPLEX_NUMBER_SYMBOL = 'i';\r\nconst complexParsingRegexp = /^\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij]))\\s*(([+-])\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij])))?$/;\r\nexport class ArithmeticHelper {\r\n    constructor(config, dateTimeHelper, numberLiteralsHelper) {\r\n        this.config = config;\r\n        this.dateTimeHelper = dateTimeHelper;\r\n        this.numberLiteralsHelper = numberLiteralsHelper;\r\n        this.lt = (left, right) => {\r\n            return this.compare(left, right) < 0;\r\n        };\r\n        this.leq = (left, right) => {\r\n            return this.compare(left, right) <= 0;\r\n        };\r\n        this.gt = (left, right) => {\r\n            return this.compare(left, right) > 0;\r\n        };\r\n        this.geq = (left, right) => {\r\n            return this.compare(left, right) >= 0;\r\n        };\r\n        this.eq = (left, right) => {\r\n            return this.compare(left, right) === 0;\r\n        };\r\n        this.neq = (left, right) => {\r\n            return this.compare(left, right) !== 0;\r\n        };\r\n        this.pow = (left, right) => {\r\n            return Math.pow(getRawValue(left), getRawValue(right));\r\n        };\r\n        this.addWithEpsilonRaw = (left, right) => {\r\n            const ret = left + right;\r\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return ret;\r\n            }\r\n        };\r\n        this.addWithEpsilon = (left, right) => {\r\n            const typeOfResult = inferExtendedNumberTypeAdditive(left, right);\r\n            return this.ExtendedNumberFactory(this.addWithEpsilonRaw(getRawValue(left), getRawValue(right)), typeOfResult);\r\n        };\r\n        this.unaryMinus = (arg) => {\r\n            return cloneNumber(arg, -getRawValue(arg));\r\n        };\r\n        this.unaryPlus = (arg) => arg;\r\n        this.unaryPercent = (arg) => {\r\n            return new PercentNumber(getRawValue(arg) / 100);\r\n        };\r\n        this.concat = (left, right) => {\r\n            return left.concat(right);\r\n        };\r\n        this.nonstrictadd = (left, right) => {\r\n            if (left instanceof CellError) {\r\n                return left;\r\n            }\r\n            else if (right instanceof CellError) {\r\n                return right;\r\n            }\r\n            else if (typeof left === 'number') {\r\n                if (typeof right === 'number') {\r\n                    return this.addWithEpsilonRaw(left, right);\r\n                }\r\n                else {\r\n                    return left;\r\n                }\r\n            }\r\n            else if (typeof right === 'number') {\r\n                return right;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        };\r\n        /**\r\n         * Subtracts two numbers\r\n         *\r\n         * Implementation of subtracting which is used in interpreter.\r\n         *\r\n         * @param left - left operand of subtraction\r\n         * @param right - right operand of subtraction\r\n         * @param eps - precision of comparison\r\n         */\r\n        this.subtract = (leftArg, rightArg) => {\r\n            const typeOfResult = inferExtendedNumberTypeAdditive(leftArg, rightArg);\r\n            const left = getRawValue(leftArg);\r\n            const right = getRawValue(rightArg);\r\n            let ret = left - right;\r\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\r\n                ret = 0;\r\n            }\r\n            return this.ExtendedNumberFactory(ret, typeOfResult);\r\n        };\r\n        this.divide = (leftArg, rightArg) => {\r\n            const left = getRawValue(leftArg);\r\n            const right = getRawValue(rightArg);\r\n            if (right === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            else {\r\n                const typeOfResult = inferExtendedNumberTypeMultiplicative(leftArg, rightArg);\r\n                return this.ExtendedNumberFactory(left / right, typeOfResult);\r\n            }\r\n        };\r\n        this.multiply = (left, right) => {\r\n            const typeOfResult = inferExtendedNumberTypeMultiplicative(left, right);\r\n            return this.ExtendedNumberFactory(getRawValue(left) * getRawValue(right), typeOfResult);\r\n        };\r\n        this.manyToExactComplex = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg) || typeof arg === 'string') {\r\n                    const coerced = this.coerceScalarToComplex(arg);\r\n                    if (!(coerced instanceof CellError)) {\r\n                        ret.push(coerced);\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.coerceNumbersExactRanges = (args) => this.manyToNumbers(args, this.manyToExactNumbers);\r\n        this.coerceNumbersCoerceRangesDropNulls = (args) => this.manyToNumbers(args, this.manyToCoercedNumbersDropNulls);\r\n        this.manyToExactNumbers = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg)) {\r\n                    ret.push(getRawValue(arg));\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.manyToOnlyNumbersDropNulls = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg)) {\r\n                    ret.push(getRawValue(arg));\r\n                }\r\n                else if (arg !== EmptyValue) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.manyToCoercedNumbersDropNulls = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                if (arg === EmptyValue) {\r\n                    continue;\r\n                }\r\n                const coerced = this.coerceScalarToNumberOrError(arg);\r\n                if (isExtendedNumber(coerced)) {\r\n                    ret.push(getRawValue(coerced));\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.collator = collatorFromConfig(config);\r\n        this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\r\n    }\r\n    eqMatcherFunction(pattern) {\r\n        const regexp = this.buildRegex(pattern);\r\n        return (cellValue) => (typeof cellValue === 'string' && regexp.test(this.normalizeString(cellValue)));\r\n    }\r\n    neqMatcherFunction(pattern) {\r\n        const regexp = this.buildRegex(pattern);\r\n        return (cellValue) => {\r\n            return (!(typeof cellValue === 'string') || !regexp.test(this.normalizeString(cellValue)));\r\n        };\r\n    }\r\n    searchString(pattern, text) {\r\n        var _a;\r\n        const regexp = this.buildRegex(pattern, false);\r\n        const result = regexp.exec(text);\r\n        return (_a = result === null || result === void 0 ? void 0 : result.index) !== null && _a !== void 0 ? _a : -1;\r\n    }\r\n    requiresRegex(pattern) {\r\n        if (!this.config.useRegularExpressions && !this.config.useWildcards) {\r\n            return !this.config.matchWholeCell;\r\n        }\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            const c = pattern.charAt(i);\r\n            if (isWildcard(c) || (this.config.useRegularExpressions && needsEscape(c))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    floatCmp(leftArg, rightArg) {\r\n        const left = getRawValue(leftArg);\r\n        const right = getRawValue(rightArg);\r\n        const mod = (1 + this.actualEps);\r\n        if ((right >= 0) && (left * mod >= right) && (left <= right * mod)) {\r\n            return 0;\r\n        }\r\n        else if ((right <= 0) && (left * mod <= right) && (left >= right * mod)) {\r\n            return 0;\r\n        }\r\n        else if (left > right) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    coerceScalarToNumberOrError(arg) {\r\n        var _a;\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.NumberCoercion);\r\n    }\r\n    coerceToMaybeNumber(arg) {\r\n        var _a;\r\n        return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : (typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined);\r\n    }\r\n    coerceNonDateScalarToMaybeNumber(arg) {\r\n        if (arg === EmptyValue) {\r\n            return 0;\r\n        }\r\n        else if (typeof arg === 'string') {\r\n            if (arg === '') {\r\n                return 0;\r\n            }\r\n            const maybePercentNumber = this.coerceStringToMaybePercentNumber(arg);\r\n            if (maybePercentNumber !== undefined) {\r\n                return maybePercentNumber;\r\n            }\r\n            const maybeCurrencyNumber = this.coerceStringToMaybeCurrencyNumber(arg);\r\n            if (maybeCurrencyNumber !== undefined) {\r\n                return maybeCurrencyNumber;\r\n            }\r\n            return this.numberLiteralsHelper.numericStringToMaybeNumber(arg.trim());\r\n        }\r\n        else if (isExtendedNumber(arg)) {\r\n            return arg;\r\n        }\r\n        else if (typeof arg === 'boolean') {\r\n            return Number(arg);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    coerceStringToMaybePercentNumber(input) {\r\n        const trimmedInput = input.trim();\r\n        if (trimmedInput.endsWith('%')) {\r\n            const numOfPercents = trimmedInput.slice(0, trimmedInput.length - 1).trim();\r\n            const parsedNumOfPercents = this.numberLiteralsHelper.numericStringToMaybeNumber(numOfPercents);\r\n            if (parsedNumOfPercents !== undefined) {\r\n                return new PercentNumber(parsedNumOfPercents / 100);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    coerceStringToMaybeCurrencyNumber(input) {\r\n        const matchedCurrency = this.currencyMatcher(input.trim());\r\n        if (matchedCurrency !== undefined) {\r\n            const [currencySymbol, currencyValue] = matchedCurrency;\r\n            const parsedCurrencyValue = this.numberLiteralsHelper.numericStringToMaybeNumber(currencyValue);\r\n            if (parsedCurrencyValue !== undefined) {\r\n                return new CurrencyNumber(parsedCurrencyValue, currencySymbol);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    currencyMatcher(token) {\r\n        for (const currency of this.config.currencySymbol) {\r\n            if (token.startsWith(currency)) {\r\n                return [currency, token.slice(currency.length).trim()];\r\n            }\r\n            if (token.endsWith(currency)) {\r\n                return [currency, token.slice(0, token.length - currency.length).trim()];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    coerceComplexExactRanges(args) {\r\n        const vals = [];\r\n        for (const arg of args) {\r\n            if (arg instanceof SimpleRangeValue) {\r\n                vals.push(arg);\r\n            }\r\n            else if (arg !== EmptyValue) {\r\n                const coerced = this.coerceScalarToComplex(arg);\r\n                if (coerced instanceof CellError) {\r\n                    return coerced;\r\n                }\r\n                else {\r\n                    vals.push(coerced);\r\n                }\r\n            }\r\n        }\r\n        const expandedVals = [];\r\n        for (const val of vals) {\r\n            if (val instanceof SimpleRangeValue) {\r\n                const arr = this.manyToExactComplex(val.valuesFromTopLeftCorner());\r\n                if (arr instanceof CellError) {\r\n                    return arr;\r\n                }\r\n                else {\r\n                    expandedVals.push(...arr);\r\n                }\r\n            }\r\n            else {\r\n                expandedVals.push(val);\r\n            }\r\n        }\r\n        return expandedVals;\r\n    }\r\n    coerceScalarToComplex(arg) {\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        else if (arg === EmptyValue) {\r\n            return [0, 0];\r\n        }\r\n        else if (isExtendedNumber(arg)) {\r\n            return [getRawValue(arg), 0];\r\n        }\r\n        else if (typeof arg === 'string') {\r\n            return this.coerceStringToComplex(arg);\r\n        }\r\n        else {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n    }\r\n    ExtendedNumberFactory(value, typeFormat) {\r\n        const { type, format } = typeFormat;\r\n        switch (type) {\r\n            case NumberType.NUMBER_RAW:\r\n                return value;\r\n            case NumberType.NUMBER_CURRENCY: {\r\n                return new CurrencyNumber(value, format !== null && format !== void 0 ? format : this.config.currencySymbol[0]);\r\n            }\r\n            case NumberType.NUMBER_DATE:\r\n                return new DateNumber(value, format);\r\n            case NumberType.NUMBER_DATETIME:\r\n                return new DateTimeNumber(value, format);\r\n            case NumberType.NUMBER_TIME:\r\n                return new TimeNumber(value, format);\r\n            case NumberType.NUMBER_PERCENT:\r\n                return new PercentNumber(value, format);\r\n        }\r\n    }\r\n    buildRegex(pattern, matchWholeCell = true) {\r\n        pattern = this.normalizeString(pattern);\r\n        let regexpStr;\r\n        let useWildcards = this.config.useWildcards;\r\n        let useRegularExpressions = this.config.useRegularExpressions;\r\n        if (useRegularExpressions) {\r\n            try {\r\n                RegExp(pattern);\r\n            }\r\n            catch (e) {\r\n                useRegularExpressions = false;\r\n                useWildcards = false;\r\n            }\r\n        }\r\n        if (useRegularExpressions) {\r\n            regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\r\n        }\r\n        else if (useWildcards) {\r\n            regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\r\n        }\r\n        else {\r\n            regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\r\n        }\r\n        if (this.config.matchWholeCell && matchWholeCell) {\r\n            return RegExp('^(' + regexpStr + ')$');\r\n        }\r\n        else {\r\n            return RegExp(regexpStr);\r\n        }\r\n    }\r\n    normalizeString(str) {\r\n        if (!this.config.caseSensitive) {\r\n            str = str.toLowerCase();\r\n        }\r\n        if (!this.config.accentSensitive) {\r\n            str = normalizeString(str, 'nfd').replace(/[\\u0300-\\u036f]/g, '');\r\n        }\r\n        return str;\r\n    }\r\n    compare(left, right) {\r\n        if (typeof left === 'string' || typeof right === 'string') {\r\n            const leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\r\n            const rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\r\n            if (isExtendedNumber(leftTmp) && isExtendedNumber(rightTmp)) {\r\n                return this.floatCmp(leftTmp, rightTmp);\r\n            }\r\n        }\r\n        if (left === EmptyValue) {\r\n            left = coerceEmptyToValue(right);\r\n        }\r\n        else if (right === EmptyValue) {\r\n            right = coerceEmptyToValue(left);\r\n        }\r\n        if (typeof left === 'string' && typeof right === 'string') {\r\n            return this.stringCmp(left, right);\r\n        }\r\n        else if (typeof left === 'boolean' && typeof right === 'boolean') {\r\n            return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\r\n        }\r\n        else if (isExtendedNumber(left) && isExtendedNumber(right)) {\r\n            return this.floatCmp(left, right);\r\n        }\r\n        else if (left === EmptyValue && right === EmptyValue) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\r\n        }\r\n    }\r\n    stringCmp(left, right) {\r\n        return this.collator.compare(left, right);\r\n    }\r\n    manyToNumbers(args, rangeFn) {\r\n        const vals = [];\r\n        for (const arg of args) {\r\n            if (arg instanceof SimpleRangeValue) {\r\n                vals.push(arg);\r\n            }\r\n            else {\r\n                const coerced = getRawValue(this.coerceScalarToNumberOrError(arg));\r\n                if (coerced instanceof CellError) {\r\n                    return coerced;\r\n                }\r\n                else {\r\n                    vals.push(coerced);\r\n                }\r\n            }\r\n        }\r\n        const expandedVals = [];\r\n        for (const val of vals) {\r\n            if (val instanceof SimpleRangeValue) {\r\n                const arr = rangeFn(val.valuesFromTopLeftCorner());\r\n                if (arr instanceof CellError) {\r\n                    return arr;\r\n                }\r\n                else {\r\n                    expandedVals.push(...arr);\r\n                }\r\n            }\r\n            else {\r\n                expandedVals.push(val);\r\n            }\r\n        }\r\n        return expandedVals;\r\n    }\r\n    coerceStringToComplex(arg) {\r\n        const match = complexParsingRegexp.exec(arg);\r\n        if (match === null) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        let val1;\r\n        if (match[6] !== undefined) {\r\n            val1 = (match[1] === '-' ? [0, -1] : [0, 1]);\r\n        }\r\n        else {\r\n            val1 = this.parseComplexToken(match[1] + match[3], match[5]);\r\n        }\r\n        if (val1 instanceof CellError) {\r\n            return val1;\r\n        }\r\n        if (match[8] === undefined) {\r\n            return val1;\r\n        }\r\n        let val2;\r\n        if (match[14] !== undefined) {\r\n            val2 = (match[9] === '-' ? [0, -1] : [0, 1]);\r\n        }\r\n        else {\r\n            val2 = this.parseComplexToken(match[9] + match[11], match[13]);\r\n        }\r\n        if (val2 instanceof CellError) {\r\n            return val2;\r\n        }\r\n        if ((match[5] !== '') || (match[13] === '')) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        if (match[8] === '+') {\r\n            return [val1[0] + val2[0], val1[1] + val2[1]];\r\n        }\r\n        else {\r\n            return [val1[0] - val2[0], val1[1] - val2[1]];\r\n        }\r\n    }\r\n    parseComplexToken(arg, mod) {\r\n        const val = getRawValue(this.coerceNonDateScalarToMaybeNumber(arg));\r\n        if (val === undefined) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        if (mod === '') {\r\n            return [val, 0];\r\n        }\r\n        else {\r\n            return [0, val];\r\n        }\r\n    }\r\n}\r\nexport function coerceComplexToString([re, im], symb) {\r\n    if (!isFinite(re) || !isFinite(im)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n    }\r\n    symb = symb !== null && symb !== void 0 ? symb : COMPLEX_NUMBER_SYMBOL;\r\n    if (im === 0) {\r\n        return `${re}`;\r\n    }\r\n    const imStr = `${im === -1 || im === 1 ? '' : Math.abs(im)}${symb}`;\r\n    if (re === 0) {\r\n        return `${im < 0 ? '-' : ''}${imStr}`;\r\n    }\r\n    return `${re}${im < 0 ? '-' : '+'}${imStr}`;\r\n}\r\nexport function coerceToRange(arg) {\r\n    if (arg instanceof SimpleRangeValue) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return SimpleRangeValue.fromScalar(arg);\r\n    }\r\n}\r\nexport function coerceToRangeNumbersOrError(arg) {\r\n    if ((arg instanceof SimpleRangeValue && arg.hasOnlyNumbers()) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return SimpleRangeValue.fromScalar(arg);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexport function coerceBooleanToNumber(arg) {\r\n    return Number(arg);\r\n}\r\nexport function coerceEmptyToValue(arg) {\r\n    if (typeof arg === 'string') {\r\n        return '';\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return 0;\r\n    }\r\n    else if (typeof arg === 'boolean') {\r\n        return false;\r\n    }\r\n    else {\r\n        return EmptyValue;\r\n    }\r\n}\r\n/**\r\n * Coerce scalar value to boolean if possible, or error if value is an error\r\n *\r\n * @param arg\r\n */\r\nexport function coerceScalarToBoolean(arg) {\r\n    if (arg instanceof CellError || typeof arg === 'boolean') {\r\n        return arg;\r\n    }\r\n    else if (arg === EmptyValue) {\r\n        return false;\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg) !== 0;\r\n    }\r\n    else {\r\n        const argUppered = arg.toUpperCase();\r\n        if (argUppered === 'TRUE') {\r\n            return true;\r\n        }\r\n        else if (argUppered === 'FALSE') {\r\n            return false;\r\n        }\r\n        else if (argUppered === '') {\r\n            return false;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexport function coerceScalarToString(arg) {\r\n    if (arg instanceof CellError || typeof arg === 'string') {\r\n        return arg;\r\n    }\r\n    else if (arg === EmptyValue) {\r\n        return '';\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg).toString();\r\n    }\r\n    else {\r\n        return arg ? 'TRUE' : 'FALSE';\r\n    }\r\n}\r\nexport function zeroIfEmpty(arg) {\r\n    return arg === EmptyValue ? 0 : arg;\r\n}\r\nexport function numberCmp(leftArg, rightArg) {\r\n    const left = getRawValue(leftArg);\r\n    const right = getRawValue(rightArg);\r\n    if (left > right) {\r\n        return 1;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isNumberOverflow(arg) {\r\n    return (isNaN(arg) || arg === Infinity || arg === -Infinity);\r\n}\r\nexport function fixNegativeZero(arg) {\r\n    if (arg === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return arg;\r\n    }\r\n}\r\nfunction isWildcard(c) {\r\n    return ['*', '?'].includes(c);\r\n}\r\nconst escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\r\nfunction needsEscape(c) {\r\n    return escapedCharacters.includes(c);\r\n}\r\nfunction escapeNonWildcards(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (c === '~') {\r\n            if (i == pattern.length - 1) {\r\n                str += '~';\r\n                continue;\r\n            }\r\n            const d = pattern.charAt(i + 1);\r\n            if (isWildcard(d) || needsEscape(d)) {\r\n                str += '\\\\' + d;\r\n                i++;\r\n            }\r\n            else {\r\n                str += d;\r\n                i++;\r\n            }\r\n        }\r\n        else if (isWildcard(c)) {\r\n            str += '.' + c;\r\n        }\r\n        else if (needsEscape(c)) {\r\n            str += '\\\\' + c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction escapeAllCharacters(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (isWildcard(c) || needsEscape(c)) {\r\n            str += '\\\\' + c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction escapeNoCharacters(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (isWildcard(c) || needsEscape(c)) {\r\n            str += c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction inferExtendedNumberTypeAdditive(leftArg, rightArg) {\r\n    const { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\r\n    const { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\r\n    if (leftType === NumberType.NUMBER_RAW) {\r\n        return { type: rightType, format: rightFormat };\r\n    }\r\n    if (rightType === NumberType.NUMBER_RAW) {\r\n        return { type: leftType, format: leftFormat };\r\n    }\r\n    if ((leftType === NumberType.NUMBER_DATETIME || leftType === NumberType.NUMBER_DATE)\r\n        && (rightType === NumberType.NUMBER_DATETIME || rightType === NumberType.NUMBER_DATE)) {\r\n        return { type: NumberType.NUMBER_RAW };\r\n    }\r\n    if (leftType === NumberType.NUMBER_TIME) {\r\n        if (rightType === NumberType.NUMBER_DATE) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: `${rightFormat} ${leftFormat}` };\r\n        }\r\n        if (rightType === NumberType.NUMBER_DATETIME) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat };\r\n        }\r\n    }\r\n    if (rightType === NumberType.NUMBER_TIME) {\r\n        if (leftType === NumberType.NUMBER_DATE) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: `${leftFormat} ${rightFormat}` };\r\n        }\r\n        if (leftType === NumberType.NUMBER_DATETIME) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat };\r\n        }\r\n    }\r\n    return { type: leftType, format: leftFormat };\r\n}\r\nfunction inferExtendedNumberTypeMultiplicative(leftArg, rightArg) {\r\n    let { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\r\n    let { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\r\n    if (leftType === NumberType.NUMBER_PERCENT) {\r\n        leftType = NumberType.NUMBER_RAW;\r\n        leftFormat = undefined;\r\n    }\r\n    if (rightType === NumberType.NUMBER_PERCENT) {\r\n        rightType = NumberType.NUMBER_RAW;\r\n        rightFormat = undefined;\r\n    }\r\n    if (leftType === NumberType.NUMBER_RAW) {\r\n        return { type: rightType, format: rightFormat };\r\n    }\r\n    if (rightType === NumberType.NUMBER_RAW) {\r\n        return { type: leftType, format: leftFormat };\r\n    }\r\n    return { type: NumberType.NUMBER_RAW };\r\n}\r\nexport function forceNormalizeString(str) {\r\n    return normalizeString(str.toLowerCase(), 'nfd').replace(/[\\u0300-\\u036f]/g, '');\r\n}\r\nexport function coerceRangeToScalar(arg, state) {\r\n    var _a;\r\n    if (arg.isAdHoc()) {\r\n        return (_a = arg.data[0]) === null || _a === void 0 ? void 0 : _a[0];\r\n    }\r\n    const range = arg.range;\r\n    if (state.formulaAddress.sheet === range.sheet) {\r\n        if (range.width() === 1) {\r\n            const offset = state.formulaAddress.row - range.start.row;\r\n            if (offset >= 0 && offset < range.height()) {\r\n                return arg.data[offset][0];\r\n            }\r\n        }\r\n        else if (range.height() === 1) {\r\n            const offset = state.formulaAddress.col - range.start.col;\r\n            if (offset >= 0 && offset < range.width()) {\r\n                return arg.data[0][offset];\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport function normalizeString(str, form) {\r\n    return typeof str.normalize === 'function'\r\n        ? str.normalize(form.toUpperCase()) : unorm[form](str);\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__125__;","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport function collatorFromConfig(config) {\r\n    const sensitivity = config.caseSensitive ? (config.accentSensitive ? 'variant' : 'case') : (config.accentSensitive ? 'accent' : 'base');\r\n    const caseFirst = config.caseFirst;\r\n    const ignorePunctuation = config.ignorePunctuation;\r\n    return new Intl.Collator(config.localeLang, { sensitivity, caseFirst, ignorePunctuation });\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport class DetailedCellError {\r\n    constructor(error, value, address) {\r\n        var _a;\r\n        this.value = value;\r\n        this.address = address;\r\n        this.type = error.type;\r\n        this.message = (_a = error.message) !== null && _a !== void 0 ? _a : '';\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { configCheckIfParametersNotInConflict, configValueFromParam, configValueFromParamCheck, validateNumberToBeAtLeast, validateNumberToBeAtMost } from './ArgumentSanitization';\r\nimport { defaultParseToDateTime } from './DateTimeDefault';\r\nimport { instanceOfSimpleDate } from './DateTimeHelper';\r\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\r\nimport { ConfigValueEmpty, ExpectedValueOfTypeError } from './errors';\r\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\r\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\r\nimport { HyperFormula } from './HyperFormula';\r\nconst privatePool = new WeakMap();\r\nexport class Config {\r\n    constructor(options = {}, showDeprecatedWarns = true) {\r\n        const { accentSensitive, binarySearchThreshold, caseSensitive, caseFirst, chooseAddressMappingPolicy, currencySymbol, dateFormats, decimalSeparator, evaluateNullToZero, functionArgSeparator, functionPlugins, ignorePunctuation, leapYear1900, localeLang, language, ignoreWhiteSpace, licenseKey, matchWholeCell, arrayColumnSeparator, arrayRowSeparator, maxRows, maxColumns, nullYear, nullDate, parseDateTime, precisionEpsilon, precisionRounding, stringifyDateTime, stringifyDuration, smartRounding, timeFormats, thousandSeparator, useArrayArithmetic, useStats, undoLimit, useColumnIndex, useRegularExpressions, useWildcards, } = options;\r\n        if (showDeprecatedWarns) {\r\n            Config.warnDeprecatedOptions(options);\r\n        }\r\n        this.useArrayArithmetic = configValueFromParam(useArrayArithmetic, 'boolean', 'useArrayArithmetic');\r\n        this.accentSensitive = configValueFromParam(accentSensitive, 'boolean', 'accentSensitive');\r\n        this.caseSensitive = configValueFromParam(caseSensitive, 'boolean', 'caseSensitive');\r\n        this.caseFirst = configValueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\r\n        this.ignorePunctuation = configValueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\r\n        this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\r\n        this.dateFormats = [...configValueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats')];\r\n        this.timeFormats = [...configValueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats')];\r\n        this.functionArgSeparator = configValueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\r\n        this.decimalSeparator = configValueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\r\n        this.language = configValueFromParam(language, 'string', 'language');\r\n        this.ignoreWhiteSpace = configValueFromParam(ignoreWhiteSpace, ['standard', 'any'], 'ignoreWhiteSpace');\r\n        this.licenseKey = configValueFromParam(licenseKey, 'string', 'licenseKey');\r\n        this.thousandSeparator = configValueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\r\n        this.arrayColumnSeparator = configValueFromParam(arrayColumnSeparator, [',', ';'], 'arrayColumnSeparator');\r\n        this.arrayRowSeparator = configValueFromParam(arrayRowSeparator, [';', '|'], 'arrayRowSeparator');\r\n        this.localeLang = configValueFromParam(localeLang, 'string', 'localeLang');\r\n        this.functionPlugins = [...(functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins)];\r\n        this.smartRounding = configValueFromParam(smartRounding, 'boolean', 'smartRounding');\r\n        this.evaluateNullToZero = configValueFromParam(evaluateNullToZero, 'boolean', 'evaluateNullToZero');\r\n        this.nullYear = configValueFromParam(nullYear, 'number', 'nullYear');\r\n        validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\r\n        validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\r\n        this.precisionRounding = configValueFromParam(precisionRounding, 'number', 'precisionRounding');\r\n        validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\r\n        this.precisionEpsilon = configValueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\r\n        validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\r\n        this.useColumnIndex = configValueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\r\n        this.useStats = configValueFromParam(useStats, 'boolean', 'useStats');\r\n        this.binarySearchThreshold = binarySearchThreshold !== null && binarySearchThreshold !== void 0 ? binarySearchThreshold : Config.defaultConfig.binarySearchThreshold;\r\n        this.parseDateTime = configValueFromParam(parseDateTime, 'function', 'parseDateTime');\r\n        this.stringifyDateTime = configValueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\r\n        this.stringifyDuration = configValueFromParam(stringifyDuration, 'function', 'stringifyDuration');\r\n        this.translationPackage = HyperFormula.getLanguage(this.language);\r\n        this.errorMapping = this.translationPackage.buildErrorMapping();\r\n        this.nullDate = configValueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\r\n        this.leapYear1900 = configValueFromParam(leapYear1900, 'boolean', 'leapYear1900');\r\n        this.undoLimit = configValueFromParam(undoLimit, 'number', 'undoLimit');\r\n        this.useRegularExpressions = configValueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\r\n        this.useWildcards = configValueFromParam(useWildcards, 'boolean', 'useWildcards');\r\n        this.matchWholeCell = configValueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\r\n        validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\r\n        this.maxRows = configValueFromParam(maxRows, 'number', 'maxRows');\r\n        validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\r\n        this.maxColumns = configValueFromParam(maxColumns, 'number', 'maxColumns');\r\n        this.currencySymbol = this.setupCurrencySymbol(currencySymbol);\r\n        validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\r\n        privatePool.set(this, {\r\n            licenseKeyValidityState: checkLicenseKeyValidity(this.licenseKey)\r\n        });\r\n        configCheckIfParametersNotInConflict({ value: this.decimalSeparator, name: 'decimalSeparator' }, { value: this.functionArgSeparator, name: 'functionArgSeparator' }, { value: this.thousandSeparator, name: 'thousandSeparator' });\r\n        configCheckIfParametersNotInConflict({ value: this.arrayRowSeparator, name: 'arrayRowSeparator' }, { value: this.arrayColumnSeparator, name: 'arrayColumnSeparator' });\r\n    }\r\n    setupCurrencySymbol(currencySymbol) {\r\n        const valueAfterCheck = [...configValueFromParamCheck(currencySymbol, Array.isArray, 'array', 'currencySymbol')];\r\n        valueAfterCheck.forEach((val) => {\r\n            if (typeof val !== 'string') {\r\n                throw new ExpectedValueOfTypeError('string[]', 'currencySymbol');\r\n            }\r\n            if (val === '') {\r\n                throw new ConfigValueEmpty('currencySymbol');\r\n            }\r\n        });\r\n        return valueAfterCheck;\r\n    }\r\n    /**\r\n     * Proxied property to its private counterpart. This makes the property\r\n     * as accessible as the other Config options but without ability to change the value.\r\n     *\r\n     * @internal\r\n     */\r\n    get licenseKeyValidityState() {\r\n        return privatePool.get(this).licenseKeyValidityState;\r\n    }\r\n    getConfig() {\r\n        return getFullConfigFromPartial(this);\r\n    }\r\n    mergeConfig(init) {\r\n        const mergedConfig = Object.assign({}, this.getConfig(), init);\r\n        Config.warnDeprecatedOptions(init);\r\n        return new Config(mergedConfig, false);\r\n    }\r\n    static warnDeprecatedOptions(options) {\r\n        Config.warnDeprecatedIfUsed(options.binarySearchThreshold, 'binarySearchThreshold', '1.1');\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static warnDeprecatedIfUsed(inputValue, paramName, fromVersion, replacementName) {\r\n        if (inputValue !== undefined) {\r\n            if (replacementName === undefined) {\r\n                console.warn(`${paramName} option is deprecated since ${fromVersion}`);\r\n            }\r\n            else {\r\n                console.warn(`${paramName} option is deprecated since ${fromVersion}, please use ${replacementName}`);\r\n            }\r\n        }\r\n    }\r\n}\r\nConfig.defaultConfig = {\r\n    accentSensitive: false,\r\n    binarySearchThreshold: 20,\r\n    currencySymbol: ['$'],\r\n    caseSensitive: false,\r\n    caseFirst: 'lower',\r\n    chooseAddressMappingPolicy: new AlwaysDense(),\r\n    dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\r\n    decimalSeparator: '.',\r\n    evaluateNullToZero: false,\r\n    functionArgSeparator: ',',\r\n    functionPlugins: [],\r\n    ignorePunctuation: false,\r\n    language: 'enGB',\r\n    ignoreWhiteSpace: 'standard',\r\n    licenseKey: '',\r\n    leapYear1900: false,\r\n    localeLang: 'en',\r\n    matchWholeCell: true,\r\n    arrayColumnSeparator: ',',\r\n    arrayRowSeparator: ';',\r\n    maxRows: 40000,\r\n    maxColumns: 18278,\r\n    nullYear: 30,\r\n    nullDate: { year: 1899, month: 12, day: 30 },\r\n    parseDateTime: defaultParseToDateTime,\r\n    precisionEpsilon: 1e-13,\r\n    precisionRounding: 14,\r\n    smartRounding: true,\r\n    stringifyDateTime: defaultStringifyDateTime,\r\n    stringifyDuration: defaultStringifyDuration,\r\n    timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\r\n    thousandSeparator: '',\r\n    undoLimit: 20,\r\n    useRegularExpressions: false,\r\n    useWildcards: true,\r\n    useColumnIndex: false,\r\n    useStats: false,\r\n    useArrayArithmetic: false,\r\n};\r\nfunction getFullConfigFromPartial(partialConfig) {\r\n    var _a;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const ret = {};\r\n    for (const key in Config.defaultConfig) {\r\n        const val = (_a = partialConfig[key]) !== null && _a !== void 0 ? _a : Config.defaultConfig[key];\r\n        if (Array.isArray(val)) {\r\n            ret[key] = [...val];\r\n        }\r\n        else {\r\n            ret[key] = val;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport function getDefaultConfig() {\r\n    return getFullConfigFromPartial({});\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { Config } from './Config';\r\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, ExpectedOneOfValuesError, ExpectedValueOfTypeError } from './errors';\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function configValueFromParam(inputValue, expectedType, paramName) {\r\n    if (typeof inputValue === 'undefined') {\r\n        return Config.defaultConfig[paramName];\r\n    }\r\n    else if (typeof expectedType === 'string') {\r\n        if (typeof inputValue === expectedType) {\r\n            return inputValue;\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n        }\r\n    }\r\n    else {\r\n        if (expectedType.includes(inputValue)) {\r\n            return inputValue;\r\n        }\r\n        else {\r\n            throw new ExpectedOneOfValuesError(expectedType.map((val) => `'${val}'`).join(' '), paramName);\r\n        }\r\n    }\r\n}\r\nexport function validateNumberToBeAtLeast(value, paramName, minimum) {\r\n    if (value < minimum) {\r\n        throw new ConfigValueTooSmallError(paramName, minimum);\r\n    }\r\n}\r\nexport function validateNumberToBeAtMost(value, paramName, maximum) {\r\n    if (value > maximum) {\r\n        throw new ConfigValueTooBigError(paramName, maximum);\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function configValueFromParamCheck(inputValue, typeCheck, expectedType, paramName) {\r\n    if (typeCheck(inputValue)) {\r\n        return inputValue;\r\n    }\r\n    else if (typeof inputValue === 'undefined') {\r\n        return Config.defaultConfig[paramName];\r\n    }\r\n    else {\r\n        throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n    }\r\n}\r\nexport function configCheckIfParametersNotInConflict(...params) {\r\n    const valuesMap = new Map();\r\n    params.forEach((param) => {\r\n        const names = valuesMap.get(param.value) || [];\r\n        names.push(param.name);\r\n        valuesMap.set(param.value, names);\r\n    });\r\n    const duplicates = [];\r\n    for (const entry of valuesMap.values()) {\r\n        if (entry.length > 1) {\r\n            duplicates.push(entry);\r\n        }\r\n    }\r\n    if (duplicates.length > 0) {\r\n        duplicates.forEach(entry => entry.sort());\r\n        const paramNames = duplicates.map(entry => `[${entry}]`).join('; ');\r\n        throw new Error(`Config initialization failed. Parameters in conflict: ${paramNames}`);\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function validateArgToType(inputValue, expectedType, paramName) {\r\n    if (typeof inputValue !== expectedType) {\r\n        throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport function defaultParseToDateTime(dateTimeString, dateFormat, timeFormat) {\r\n    dateTimeString = dateTimeString.replace(/\\s\\s+/g, ' ').trim().toLowerCase();\r\n    let ampmtoken = dateTimeString.substring(dateTimeString.length - 2);\r\n    if (ampmtoken === 'am' || ampmtoken === 'pm') {\r\n        dateTimeString = dateTimeString.substring(0, dateTimeString.length - 2).trim();\r\n    }\r\n    else {\r\n        ampmtoken = dateTimeString.substring(dateTimeString.length - 1);\r\n        if (ampmtoken === 'a' || ampmtoken === 'p') {\r\n            dateTimeString = dateTimeString.substring(0, dateTimeString.length - 1).trim();\r\n        }\r\n        else {\r\n            ampmtoken = undefined;\r\n        }\r\n    }\r\n    const dateItems = dateTimeString.split(/[ /.-]/g);\r\n    if (dateItems.length >= 2 && dateItems[dateItems.length - 2].includes(':')) {\r\n        dateItems[dateItems.length - 2] = dateItems[dateItems.length - 2] + '.' + dateItems[dateItems.length - 1];\r\n        dateItems.pop();\r\n    }\r\n    const timeItems = dateItems[dateItems.length - 1].split(':');\r\n    if (ampmtoken !== undefined) {\r\n        timeItems.push(ampmtoken);\r\n    }\r\n    if (dateItems.length === 1) {\r\n        return defaultParseToTime(timeItems, timeFormat);\r\n    }\r\n    if (timeItems.length === 1) {\r\n        return defaultParseToDate(dateItems, dateFormat);\r\n    }\r\n    const parsedDate = defaultParseToDate(dateItems.slice(0, dateItems.length - 1), dateFormat);\r\n    const parsedTime = defaultParseToTime(timeItems, timeFormat);\r\n    if (parsedDate === undefined) {\r\n        return undefined;\r\n    }\r\n    else if (parsedTime === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, parsedDate), parsedTime);\r\n    }\r\n}\r\nexport const secondsExtendedRegexp = /^ss(\\.(s+|0+))?$/;\r\nfunction defaultParseToTime(timeItems, timeFormat) {\r\n    const precision = 1000;\r\n    if (timeFormat === undefined) {\r\n        return undefined;\r\n    }\r\n    timeFormat = timeFormat.toLowerCase();\r\n    if (timeFormat.endsWith('am/pm')) {\r\n        timeFormat = timeFormat.substring(0, timeFormat.length - 5).trim();\r\n    }\r\n    else if (timeFormat.endsWith('a/p')) {\r\n        timeFormat = timeFormat.substring(0, timeFormat.length - 3).trim();\r\n    }\r\n    const formatItems = timeFormat.split(':');\r\n    let ampm = undefined;\r\n    if (timeItems[timeItems.length - 1] === 'am' || timeItems[timeItems.length - 1] === 'a') {\r\n        ampm = false;\r\n        timeItems.pop();\r\n    }\r\n    else if (timeItems[timeItems.length - 1] === 'pm' || timeItems[timeItems.length - 1] === 'p') {\r\n        ampm = true;\r\n        timeItems.pop();\r\n    }\r\n    if (timeItems.length !== formatItems.length) {\r\n        return undefined;\r\n    }\r\n    const hourIndex = formatItems.indexOf('hh');\r\n    const minuteIndex = formatItems.indexOf('mm');\r\n    const secondIndex = formatItems.findIndex(item => secondsExtendedRegexp.test(item));\r\n    const hourString = hourIndex !== -1 ? timeItems[hourIndex] : '0';\r\n    if (!/^\\d+$/.test(hourString)) {\r\n        return undefined;\r\n    }\r\n    let hours = Number(hourString);\r\n    if (ampm !== undefined) {\r\n        if (hours < 0 || hours > 12) {\r\n            return undefined;\r\n        }\r\n        hours = hours % 12;\r\n        if (ampm) {\r\n            hours = hours + 12;\r\n        }\r\n    }\r\n    const minuteString = minuteIndex !== -1 ? timeItems[minuteIndex] : '0';\r\n    if (!/^\\d+$/.test(minuteString)) {\r\n        return undefined;\r\n    }\r\n    const minutes = Number(minuteString);\r\n    const secondString = secondIndex !== -1 ? timeItems[secondIndex] : '0';\r\n    if (!/^\\d+(\\.\\d+)?$/.test(secondString)) {\r\n        return undefined;\r\n    }\r\n    const seconds = Math.round(Number(secondString) * precision) / precision;\r\n    return { hours, minutes, seconds };\r\n}\r\nfunction defaultParseToDate(dateItems, dateFormat) {\r\n    if (dateFormat === undefined) {\r\n        return undefined;\r\n    }\r\n    const formatItems = dateFormat.toLowerCase().split(/[ /.-]/g);\r\n    if (dateItems.length !== formatItems.length) {\r\n        return undefined;\r\n    }\r\n    const monthIndex = formatItems.indexOf('mm');\r\n    const dayIndex = formatItems.indexOf('dd');\r\n    const yearIndexLong = formatItems.indexOf('yyyy');\r\n    const yearIndexShort = formatItems.indexOf('yy');\r\n    if (!(monthIndex in dateItems) || !(dayIndex in dateItems) ||\r\n        (!(yearIndexLong in dateItems) && !(yearIndexShort in dateItems))) {\r\n        return undefined;\r\n    }\r\n    if (yearIndexLong in dateItems && yearIndexShort in dateItems) {\r\n        return undefined;\r\n    }\r\n    let year;\r\n    if (yearIndexLong in dateItems) {\r\n        const yearString = dateItems[yearIndexLong];\r\n        if (/^\\d+$/.test(yearString)) {\r\n            year = Number(yearString);\r\n            if (year < 1000 || year > 9999) {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        const yearString = dateItems[yearIndexShort];\r\n        if (/^\\d+$/.test(yearString)) {\r\n            year = Number(yearString);\r\n            if (year < 0 || year > 99) {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    const monthString = dateItems[monthIndex];\r\n    if (!/^\\d+$/.test(monthString)) {\r\n        return undefined;\r\n    }\r\n    const month = Number(monthString);\r\n    const dayString = dateItems[dayIndex];\r\n    if (!/^\\d+$/.test(dayString)) {\r\n        return undefined;\r\n    }\r\n    const day = Number(dayString);\r\n    return { year, month, day };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { DateNumber, DateTimeNumber, TimeNumber } from './interpreter/InterpreterValue';\r\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nconst SECONDS_PER_MINUTE = 60;\r\nconst MINUTES_PER_HOUR = 60;\r\nconst HOURS_PER_DAY = 24;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function instanceOfSimpleDate(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function instanceOfSimpleTime(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const maxDate = { year: 9999, month: 12, day: 31 };\r\nexport class DateTimeHelper {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.minDateAbsoluteValue = this.dateToNumberFromZero(config.nullDate);\r\n        this.maxDateValue = this.dateToNumber(maxDate);\r\n        this.leapYear1900 = config.leapYear1900;\r\n        // code below fixes epochYearStart while being leapYear1900 sensitive\r\n        // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\r\n        // add two days (this is the config default)\r\n        // otherwise only one day\r\n        if (!this.leapYear1900 && 0 <= this.dateToNumber({ year: 1900, month: 2, day: 28 })) {\r\n            this.epochYearZero = this.numberToSimpleDate(2).year;\r\n        }\r\n        else {\r\n            this.epochYearZero = this.numberToSimpleDate(1).year;\r\n        }\r\n        this.parseDateTime = config.parseDateTime;\r\n    }\r\n    getWithinBounds(dayNumber) {\r\n        return (dayNumber <= this.maxDateValue) && (dayNumber >= 0) ? dayNumber : undefined;\r\n    }\r\n    dateStringToDateNumber(dateTimeString) {\r\n        const { dateTime, dateFormat = '', timeFormat = '' } = this.parseDateTimeFromConfigFormats(dateTimeString);\r\n        if (dateTime === undefined) {\r\n            return undefined;\r\n        }\r\n        if (instanceOfSimpleTime(dateTime)) {\r\n            if (instanceOfSimpleDate(dateTime)) {\r\n                return new DateTimeNumber(timeToNumber(dateTime) + this.dateToNumber(dateTime), dateFormat + ' ' + timeFormat);\r\n            }\r\n            else {\r\n                return new TimeNumber(timeToNumber(dateTime), timeFormat);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceOfSimpleDate(dateTime)) {\r\n                return new DateNumber(this.dateToNumber(dateTime), dateFormat);\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    parseDateTimeFromConfigFormats(dateTimeString) {\r\n        return this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\r\n    }\r\n    getNullYear() {\r\n        return this.config.nullYear;\r\n    }\r\n    getEpochYearZero() {\r\n        return this.epochYearZero;\r\n    }\r\n    isValidDate(date) {\r\n        if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\r\n            return false;\r\n        }\r\n        else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\r\n            return false;\r\n        }\r\n        else if (date.year < 1582) { // Gregorian calendar start\r\n            return false;\r\n        }\r\n        else if (date.month < 1 || date.month > 12) {\r\n            return false;\r\n        }\r\n        else if (date.day < 1) {\r\n            return false;\r\n        }\r\n        else if (this.isLeapYear(date.year) && date.month === 2) {\r\n            return date.day <= 29;\r\n        }\r\n        else {\r\n            return date.day <= numDays[date.month - 1];\r\n        }\r\n    }\r\n    dateToNumber(date) {\r\n        return this.dateToNumberFromZero(date) - this.minDateAbsoluteValue;\r\n    }\r\n    relativeNumberToAbsoluteNumber(arg) {\r\n        return arg + this.minDateAbsoluteValue - (this.leapYear1900 ? 1 : 0);\r\n    }\r\n    numberToSimpleDate(arg) {\r\n        const dateNumber = Math.floor(arg) + this.minDateAbsoluteValue;\r\n        let year = Math.floor(dateNumber / 365.2425);\r\n        if (this.dateToNumberFromZero({ year: year + 1, month: 1, day: 1 }) <= dateNumber) {\r\n            year++;\r\n        }\r\n        else if (this.dateToNumberFromZero({ year: year - 1, month: 1, day: 1 }) > dateNumber) {\r\n            year--;\r\n        }\r\n        const dayOfYear = dateNumber - this.dateToNumberFromZero({ year, month: 1, day: 1 });\r\n        const month = dayToMonth(dayOfYear - (this.isLeapYear(year) && dayOfYear >= 59 ? 1 : 0));\r\n        const day = dayOfYear - prefSumDays[month] - (this.isLeapYear(year) && month > 1 ? 1 : 0);\r\n        return { year, month: month + 1, day: day + 1 };\r\n    }\r\n    numberToSimpleDateTime(arg) {\r\n        const time = numberToSimpleTime(arg % 1);\r\n        const carryDays = Math.floor(time.hours / HOURS_PER_DAY);\r\n        time.hours = time.hours % HOURS_PER_DAY;\r\n        const date = this.numberToSimpleDate(Math.floor(arg) + carryDays);\r\n        return Object.assign(Object.assign({}, date), time);\r\n    }\r\n    leapYearsCount(year) {\r\n        return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\r\n    }\r\n    daysInMonth(year, month) {\r\n        if (this.isLeapYear(year) && month === 2) {\r\n            return 29;\r\n        }\r\n        else {\r\n            return numDays[month - 1];\r\n        }\r\n    }\r\n    endOfMonth(date) {\r\n        return { year: date.year, month: date.month, day: this.daysInMonth(date.year, date.month) };\r\n    }\r\n    toBasisUS(start, end) {\r\n        if (start.day === 31) {\r\n            start.day = 30;\r\n        }\r\n        if (start.day === 30 && end.day === 31) {\r\n            end.day = 30;\r\n        }\r\n        if (start.month === 2 && start.day === this.daysInMonth(start.year, start.month)) {\r\n            start.day = 30;\r\n            if (end.month === 2 && end.day === this.daysInMonth(end.year, end.month)) {\r\n                end.day = 30;\r\n            }\r\n        }\r\n        return [start, end];\r\n    }\r\n    yearLengthForBasis(start, end) {\r\n        if (start.year !== end.year) {\r\n            if ((start.year + 1 !== end.year) || (start.month < end.month) || (start.month === end.month && start.day < end.day)) {\r\n                // this is true IFF at least one year of gap between dates\r\n                return (this.leapYearsCount(end.year) - this.leapYearsCount(start.year - 1)) / (end.year - start.year + 1) + 365;\r\n            }\r\n            if (this.countLeapDays(end) !== this.countLeapDays({ year: start.year, month: start.month, day: start.day - 1 })) {\r\n                return 366;\r\n            }\r\n            else {\r\n                return 365;\r\n            }\r\n        }\r\n        if (this.isLeapYear(start.year)) {\r\n            return 366;\r\n        }\r\n        else {\r\n            return 365;\r\n        }\r\n    }\r\n    parseSingleFormat(dateString, dateFormat, timeFormat) {\r\n        const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\r\n        if (instanceOfSimpleDate(dateTime)) {\r\n            if (dateTime.year >= 0 && dateTime.year < 100) {\r\n                if (dateTime.year < this.getNullYear()) {\r\n                    dateTime.year += 2000;\r\n                }\r\n                else {\r\n                    dateTime.year += 1900;\r\n                }\r\n            }\r\n            if (!this.isValidDate(dateTime)) {\r\n                return undefined;\r\n            }\r\n        }\r\n        return dateTime;\r\n    }\r\n    parseDateTimeFromFormats(dateTimeString, dateFormats, timeFormats) {\r\n        const dateFormatsIterate = dateFormats.length === 0 ? [undefined] : dateFormats;\r\n        const timeFormatsIterate = timeFormats.length === 0 ? [undefined] : timeFormats;\r\n        for (const dateFormat of dateFormatsIterate) {\r\n            for (const timeFormat of timeFormatsIterate) {\r\n                const dateTime = this.parseSingleFormat(dateTimeString, dateFormat, timeFormat);\r\n                if (dateTime !== undefined) {\r\n                    return { dateTime, timeFormat, dateFormat };\r\n                }\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n    countLeapDays(date) {\r\n        if (date.month > 2 || (date.month === 2 && date.day >= 29)) {\r\n            return this.leapYearsCount(date.year);\r\n        }\r\n        else {\r\n            return this.leapYearsCount(date.year - 1);\r\n        }\r\n    }\r\n    dateToNumberFromZero(date) {\r\n        return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\r\n    }\r\n    isLeapYear(year) {\r\n        if (year % 4) {\r\n            return false;\r\n        }\r\n        else if (year % 100) {\r\n            return true;\r\n        }\r\n        else if (year % 400) {\r\n            return year === 1900 && this.config.leapYear1900;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction dayToMonth(dayOfYear) {\r\n    let month = 0;\r\n    if (prefSumDays[month + 6] <= dayOfYear) {\r\n        month += 6;\r\n    }\r\n    if (prefSumDays[month + 3] <= dayOfYear) {\r\n        month += 3;\r\n    }\r\n    if (prefSumDays[month + 2] <= dayOfYear) {\r\n        month += 2;\r\n    }\r\n    else if (prefSumDays[month + 1] <= dayOfYear) {\r\n        month += 1;\r\n    }\r\n    return month;\r\n}\r\nexport function offsetMonth(date, offset) {\r\n    const totalM = 12 * date.year + date.month - 1 + offset;\r\n    return { year: Math.floor(totalM / 12), month: totalM % 12 + 1, day: date.day };\r\n}\r\nexport function truncateDayInMonth(date) {\r\n    return { year: date.year, month: date.month, day: Math.min(date.day, numDays[date.month - 1]) };\r\n}\r\nexport function roundToNearestSecond(arg) {\r\n    return Math.round(arg * 3600 * 24) / (3600 * 24);\r\n}\r\nfunction roundToEpsilon(arg, epsilon = 1) {\r\n    return Math.round(arg * epsilon) / epsilon;\r\n}\r\n// Note: The result of this function might be { hours = 24, minutes = 0, seconds = 0 } if arg < 1 but arg ≈ 1\r\nexport function numberToSimpleTime(arg) {\r\n    const argAsSeconds = arg * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE;\r\n    const seconds = roundToEpsilon(argAsSeconds % SECONDS_PER_MINUTE, 100000) % SECONDS_PER_MINUTE;\r\n    const argAsMinutes = (argAsSeconds - seconds) / SECONDS_PER_MINUTE;\r\n    const minutes = Math.round(argAsMinutes % MINUTES_PER_HOUR) % MINUTES_PER_HOUR;\r\n    const argAsHours = (argAsMinutes - minutes) / MINUTES_PER_HOUR;\r\n    const hours = Math.round(argAsHours);\r\n    return { hours, minutes, seconds };\r\n}\r\nexport function timeToNumber(time) {\r\n    return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\r\n}\r\nexport function toBasisEU(date) {\r\n    return { year: date.year, month: date.month, day: Math.min(30, date.day) };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { DenseStrategy } from './DenseStrategy';\r\nimport { SparseStrategy } from './SparseStrategy';\r\nexport class DenseSparseChooseBasedOnThreshold {\r\n    constructor(threshold) {\r\n        this.threshold = threshold;\r\n    }\r\n    call(fill) {\r\n        if (fill > this.threshold) {\r\n            return DenseStrategy;\r\n        }\r\n        else {\r\n            return SparseStrategy;\r\n        }\r\n    }\r\n}\r\nexport class AlwaysSparse {\r\n    call() {\r\n        return SparseStrategy;\r\n    }\r\n}\r\nexport class AlwaysDense {\r\n    call() {\r\n        return DenseStrategy;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\r\nimport { numberToSimpleTime } from '../DateTimeHelper';\r\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\r\nexport function format(value, formatArg, config, dateHelper) {\r\n    const tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\r\n    if (tryDateTime !== undefined) {\r\n        return tryDateTime;\r\n    }\r\n    const tryDuration = config.stringifyDuration(numberToSimpleTime(value), formatArg);\r\n    if (tryDuration !== undefined) {\r\n        return tryDuration;\r\n    }\r\n    const expression = parseForNumberFormat(formatArg);\r\n    if (expression !== undefined) {\r\n        return numberFormat(expression.tokens, value);\r\n    }\r\n    return formatArg;\r\n}\r\nexport function padLeft(number, size) {\r\n    let result = `${number}`;\r\n    while (result.length < size) {\r\n        result = '0' + result;\r\n    }\r\n    return result;\r\n}\r\nexport function padRight(number, size) {\r\n    let result = `${number}`;\r\n    while (result.length < size) {\r\n        result = result + '0';\r\n    }\r\n    return result;\r\n}\r\nfunction countChars(text, char) {\r\n    return text.split(char).length - 1;\r\n}\r\nfunction numberFormat(tokens, value) {\r\n    let result = '';\r\n    for (let i = 0; i < tokens.length; ++i) {\r\n        const token = tokens[i];\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        const tokenParts = token.value.split('.');\r\n        const integerFormat = tokenParts[0];\r\n        const decimalFormat = tokenParts[1] || '';\r\n        const separator = tokenParts[1] ? '.' : '';\r\n        /* get fixed-point number without trailing zeros */\r\n        const valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\r\n        let integerPart = valueParts[0] || '';\r\n        let decimalPart = valueParts[1] || '';\r\n        if (integerFormat.length > integerPart.length) {\r\n            const padSizeInteger = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\r\n            integerPart = padLeft(integerPart, padSizeInteger + integerPart.length);\r\n        }\r\n        const padSizeDecimal = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\r\n        decimalPart = padRight(decimalPart, padSizeDecimal + decimalPart.length);\r\n        result += integerPart + separator + decimalPart;\r\n    }\r\n    return result;\r\n}\r\nexport function defaultStringifyDuration(time, formatArg) {\r\n    const expression = parseForDateTimeFormat(formatArg);\r\n    if (expression === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = expression.tokens;\r\n    let result = '';\r\n    for (const token of tokens) {\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        switch (token.value.toLowerCase()) {\r\n            case 'h':\r\n            case 'hh': {\r\n                result += padLeft(time.hours, token.value.length);\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            case '[hh]': {\r\n                result += padLeft(time.hours, token.value.length - 2);\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            case 'm':\r\n            case 'mm': {\r\n                result += padLeft(time.minutes, token.value.length);\r\n                time.minutes = 0;\r\n                break;\r\n            }\r\n            case '[mm]': {\r\n                result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\r\n                time.minutes = 0;\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            /* seconds */\r\n            case 's':\r\n            case 'ss': {\r\n                result += padLeft(Math.floor(time.seconds), token.value.length);\r\n                break;\r\n            }\r\n            default: {\r\n                if (secondsExtendedRegexp.test(token.value)) {\r\n                    const fractionOfSecondPrecision = Math.max(token.value.length - 3, 0);\r\n                    result += `${time.seconds < 10 ? '0' : ''}${Math.floor(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision)}`;\r\n                    continue;\r\n                }\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function defaultStringifyDateTime(dateTime, formatArg) {\r\n    const expression = parseForDateTimeFormat(formatArg);\r\n    if (expression === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = expression.tokens;\r\n    let result = '';\r\n    let minutes = false;\r\n    const ampm = tokens.some((token) => token.type === TokenType.FORMAT &&\r\n        (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM'));\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        const token = tokens[i];\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        switch (token.value.toLowerCase()) {\r\n            /* hours*/\r\n            case 'h':\r\n            case 'hh': {\r\n                minutes = true;\r\n                result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\r\n                break;\r\n            }\r\n            /* days */\r\n            case 'd':\r\n            case 'dd': {\r\n                result += padLeft(dateTime.day, token.value.length);\r\n                break;\r\n            }\r\n            /* seconds */\r\n            case 's':\r\n            case 'ss': {\r\n                result += padLeft(Math.floor(dateTime.seconds), token.value.length);\r\n                break;\r\n            }\r\n            /* minutes / months */\r\n            case 'm':\r\n            case 'mm': {\r\n                if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\r\n                    minutes = true;\r\n                }\r\n                if (minutes) {\r\n                    result += padLeft(dateTime.minutes, token.value.length);\r\n                }\r\n                else {\r\n                    result += padLeft(dateTime.month, token.value.length);\r\n                }\r\n                minutes = true;\r\n                break;\r\n            }\r\n            /* years */\r\n            case 'yy': {\r\n                result += padLeft(dateTime.year % 100, token.value.length);\r\n                break;\r\n            }\r\n            case 'yyyy': {\r\n                result += dateTime.year;\r\n                break;\r\n            }\r\n            /* AM / PM */\r\n            case 'am/pm':\r\n            case 'a/p': {\r\n                const [am, pm] = token.value.split('/');\r\n                result += dateTime.hours < 12 ? am : pm;\r\n                break;\r\n            }\r\n            default: {\r\n                if (secondsExtendedRegexp.test(token.value)) {\r\n                    const fractionOfSecondPrecision = token.value.length - 3;\r\n                    result += `${dateTime.seconds < 10 ? '0' : ''}${Math.floor(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision)}`;\r\n                    continue;\r\n                }\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nconst dateFormatRegex = /(\\\\.|dd|DD|d|D|mm|MM|m|M|YYYY|YY|yyyy|yy|HH|hh|H|h|ss(\\.(0+|s+))?|s|AM\\/PM|am\\/pm|A\\/P|a\\/p|\\[mm]|\\[MM]|\\[hh]|\\[HH])/g;\r\nconst numberFormatRegex = /(\\\\.|[#0]+(\\.[#0]*)?)/g;\r\nexport var TokenType;\r\n(function (TokenType) {\r\n    TokenType[\"FORMAT\"] = \"FORMAT\";\r\n    TokenType[\"FREE_TEXT\"] = \"FREE_TEXT\";\r\n})(TokenType || (TokenType = {}));\r\nexport function formatToken(type, value) {\r\n    return {\r\n        type,\r\n        value,\r\n    };\r\n}\r\nexport var FormatExpressionType;\r\n(function (FormatExpressionType) {\r\n    FormatExpressionType[\"DATE\"] = \"DATE\";\r\n    FormatExpressionType[\"NUMBER\"] = \"NUMBER\";\r\n    FormatExpressionType[\"STRING\"] = \"STRING\";\r\n})(FormatExpressionType || (FormatExpressionType = {}));\r\nfunction matchDateFormat(str) {\r\n    dateFormatRegex.lastIndex = 0;\r\n    const tokens = [];\r\n    let m;\r\n    do {\r\n        m = dateFormatRegex.exec(str);\r\n        if (m !== null) {\r\n            tokens.push(m);\r\n        }\r\n    } while (m);\r\n    return tokens;\r\n}\r\nfunction matchNumberFormat(str) {\r\n    numberFormatRegex.lastIndex = 0;\r\n    const numberFormatToken = numberFormatRegex.exec(str);\r\n    if (numberFormatToken !== null) {\r\n        return [numberFormatToken];\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction createTokens(regexTokens, str) {\r\n    const tokens = [];\r\n    let start = 0;\r\n    for (let i = 0; i < regexTokens.length; ++i) {\r\n        const token = regexTokens[i];\r\n        if (token.index !== start) {\r\n            const beforeToken = str.substr(start, token.index - start);\r\n            tokens.push(formatToken(TokenType.FREE_TEXT, beforeToken));\r\n        }\r\n        if (token[0].startsWith('\\\\')) {\r\n            tokens.push(formatToken(TokenType.FREE_TEXT, token[0]));\r\n        }\r\n        else {\r\n            tokens.push(formatToken(TokenType.FORMAT, token[0]));\r\n        }\r\n        start = token.index + token[0].length;\r\n    }\r\n    const lastToken = regexTokens[regexTokens.length - 1];\r\n    if (lastToken.index + lastToken[0].length < str.length) {\r\n        const afterLastToken = str.substr(lastToken.index + lastToken[0].length, str.length);\r\n        tokens.push(formatToken(TokenType.FREE_TEXT, afterLastToken));\r\n    }\r\n    return tokens;\r\n}\r\nexport function parseForDateTimeFormat(str) {\r\n    const dateFormatTokens = matchDateFormat(str);\r\n    if (dateFormatTokens.every((elem) => isEscapeToken(elem))) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            type: FormatExpressionType.DATE,\r\n            tokens: createTokens(dateFormatTokens, str),\r\n        };\r\n    }\r\n}\r\nexport function parseForNumberFormat(str) {\r\n    const numberFormatTokens = matchNumberFormat(str);\r\n    if (numberFormatTokens.every((elem) => isEscapeToken(elem))) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            type: FormatExpressionType.NUMBER,\r\n            tokens: createTokens(numberFormatTokens, str),\r\n        };\r\n    }\r\n}\r\nexport function parse(str) {\r\n    var _a, _b;\r\n    return (_b = (_a = parseForDateTimeFormat(str)) !== null && _a !== void 0 ? _a : parseForNumberFormat(str)) !== null && _b !== void 0 ? _b : {\r\n        type: FormatExpressionType.STRING,\r\n        tokens: [{\r\n                type: TokenType.FREE_TEXT,\r\n                value: str,\r\n            }],\r\n    };\r\n}\r\nexport function isEscapeToken(token) {\r\n    return token[0].startsWith('\\\\');\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { checkKeySchema, extractTime } from './licenseKeyHelper';\r\n/**\r\n * List of all not valid messages which may occur.\r\n */\r\nconst consoleMessages = {\r\n    invalid: () => 'The license key for HyperFormula is invalid.',\r\n    expired: ({ keyValidityDate }) => 'The license key for HyperFormula expired' +\r\n        ` on ${keyValidityDate}, and is not valid for the installed version.`,\r\n    missing: () => 'The license key for HyperFormula is missing.',\r\n};\r\nlet _notified = false;\r\n/**\r\n * Checks if the provided license key is grammatically valid or not expired.\r\n *\r\n * @param {string} licenseKey The license key to check.\r\n * @returns {LicenseKeyValidityState} Returns the checking state.\r\n */\r\nexport function checkLicenseKeyValidity(licenseKey) {\r\n    const messageDescriptor = {\r\n        template: \"missing\" /* MISSING */,\r\n        vars: {},\r\n    };\r\n    if (licenseKey === 'gpl-v3' || licenseKey === 'internal-use-in-handsontable') {\r\n        messageDescriptor.template = \"valid\" /* VALID */;\r\n    }\r\n    else if (typeof licenseKey === 'string' && checkKeySchema(licenseKey)) {\r\n        const [day, month, year] = (process.env.HT_RELEASE_DATE || '').split('/');\r\n        const releaseDays = Math.floor(new Date(`${month}/${day}/${year}`).getTime() / 8.64e7);\r\n        const keyValidityDays = extractTime(licenseKey);\r\n        messageDescriptor.vars.keyValidityDate = formatDate(new Date((keyValidityDays + 1) * 8.64e7));\r\n        if (releaseDays > keyValidityDays) {\r\n            messageDescriptor.template = \"expired\" /* EXPIRED */;\r\n        }\r\n        else {\r\n            messageDescriptor.template = \"valid\" /* VALID */;\r\n        }\r\n    }\r\n    else if (licenseKey !== '') {\r\n        messageDescriptor.template = \"invalid\" /* INVALID */;\r\n    }\r\n    if (!_notified && messageDescriptor.template !== \"valid\" /* VALID */) {\r\n        console.warn(consoleMessages[messageDescriptor.template](messageDescriptor.vars));\r\n        _notified = true;\r\n    }\r\n    return messageDescriptor.template;\r\n}\r\n/**\r\n * Formats a Date instance to hard-coded format MMMM DD, YYYY.\r\n *\r\n * @param {Date} date The date to format.\r\n * @returns {string}\r\n */\r\nfunction formatDate(date) {\r\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\r\n        'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = date.getDate();\r\n    const year = date.getFullYear();\r\n    return `${month} ${day}, ${year}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-nocheck\r\n/* eslint-disable */\r\nconst _rl = '\\x6C\\x65\\x6E\\x67\\x74\\x68';\r\nconst _hd = (v) => parseInt(v, 16);\r\nconst _pi = (v) => parseInt(v, 10);\r\nconst _nm = (v) => (v + '').replace(/\\-/g, '');\r\nconst _ss = (v, s, l) => v['\\x73\\x75\\x62\\x73\\x74\\x72'](s, l);\r\nconst _cp = (v) => v['\\x63\\x6F\\x64\\x65\\x50\\x6F\\x69\\x6E\\x74\\x41\\x74'](0) - 65;\r\nexport function extractTime(v) {\r\n    return _nm(v)[_rl] === (50 >> 1) ? _hd(_ss(_nm(v), _hd('12'), _cp('\\x46'))) / (_hd(_ss(_nm(v), _cp('C'), _cp('\\x59') >> 4)) || ((~~![][_rl]) << 3) + 1) : 0;\r\n}\r\nexport function checkKeySchema(v) {\r\n    v = (v + '').replace(/\\-/g, '');\r\n    if (v[_rl] !== _cp('\\x5A')) {\r\n        return false;\r\n    }\r\n    let sp = 0;\r\n    return [[0, _cp('\\x47') + 1], [_cp('\\x48'), _cp('\\x48') - 1], [_cp('G') + _cp('H'), _cp('\\x47')]].reduce((e, [a, b], c) => {\r\n        e |= (_pi(`${_pi(_hd(_ss(v, ...[sp + a - (c === (3 >> 2) ? 0 : 2), b + (!c ? 0 : 2)])) + (_hd(_ss(v, ...[sp + a + b, 2])) + []).padStart(2, '0'))}`) % 97 || 2) >> 1;\r\n        sp += 2;\r\n        return e;\r\n    }, _cp('A')) === ([] + 1 >> 1);\r\n}\r\n/* eslint-enable */\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, isSimpleCellRange } from './AbsoluteCellRange';\r\nimport { validateArgToType } from './ArgumentSanitization';\r\nimport { BuildEngineFactory } from './BuildEngineFactory';\r\nimport { CellType, getCellType, getCellValueDetailedType, getCellValueFormat, getCellValueType, isSimpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { getDefaultConfig } from './Config';\r\nimport { numberToSimpleTime } from './DateTimeHelper';\r\nimport { objectDestroy } from './Destroy';\r\nimport { Emitter, Events } from './Emitter';\r\nimport { EvaluationSuspendedError, ExpectedValueOfTypeError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, NotAFormulaError, } from './errors';\r\nimport { buildTranslationPackage } from './i18n';\r\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\r\nimport { normalizeAddedIndexes, normalizeRemovedIndexes } from './Operations';\r\nimport { AstNodeType, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString, } from './parser';\r\n/**\r\n * This is a class for creating HyperFormula instance, all the following public methods\r\n * ale related to this class.\r\n *\r\n * The instance can be created only by calling one of the static methods\r\n * `buildFromArray`, `buildFromSheets` or `buildEmpty` and should be disposed of with the\r\n * `destroy` method when it's no longer needed to free the resources.\r\n *\r\n * The instance can be seen as a workbook where worksheets can be created and\r\n * manipulated. They are organized within a widely known structure of columns and rows\r\n * which can be manipulated as well. The smallest possible data unit are the cells, which\r\n * may contain simple values or formulas to be calculated.\r\n *\r\n * All CRUD methods are called directly on HyperFormula instance and will trigger\r\n * corresponding lifecycle events. The events are marked accordingly, as well as thrown\r\n * errors, so they can be correctly handled.\r\n */\r\nexport class HyperFormula {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(_config, _stats, _dependencyGraph, _columnSearch, _parser, _unparser, _cellContentParser, _evaluator, _lazilyTransformingAstService, _crudOperations, _exporter, _namedExpressions, _serialization, _functionRegistry) {\r\n        this._config = _config;\r\n        this._stats = _stats;\r\n        this._dependencyGraph = _dependencyGraph;\r\n        this._columnSearch = _columnSearch;\r\n        this._parser = _parser;\r\n        this._unparser = _unparser;\r\n        this._cellContentParser = _cellContentParser;\r\n        this._evaluator = _evaluator;\r\n        this._lazilyTransformingAstService = _lazilyTransformingAstService;\r\n        this._crudOperations = _crudOperations;\r\n        this._exporter = _exporter;\r\n        this._namedExpressions = _namedExpressions;\r\n        this._serialization = _serialization;\r\n        this._functionRegistry = _functionRegistry;\r\n        this._emitter = new Emitter();\r\n        this._evaluationSuspended = false;\r\n    }\r\n    /**\r\n     * Returns all of HyperFormula's default [configuration options](../../guide/configuration-options.md).\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // returns all default configuration options\r\n     * const defaultConfig = HyperFormula.defaultConfig;\r\n     * ```\r\n     *\r\n     * @category Static Accessors\r\n     */\r\n    static get defaultConfig() {\r\n        return getDefaultConfig();\r\n    }\r\n    /**\r\n     * Calls the `graph` method on the dependency graph.\r\n     * Allows for executing `graph` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get graph() {\r\n        return this.dependencyGraph.graph;\r\n    }\r\n    /**\r\n     * Calls the `rangeMapping` method on the dependency graph.\r\n     * Allows for executing `rangeMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get rangeMapping() {\r\n        return this.dependencyGraph.rangeMapping;\r\n    }\r\n    /**\r\n     * Calls the `arrayMapping` method on the dependency graph.\r\n     * Allows for executing `arrayMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get arrayMapping() {\r\n        return this.dependencyGraph.arrayMapping;\r\n    }\r\n    /**\r\n     * Calls the `sheetMapping` method on the dependency graph.\r\n     * Allows for executing `sheetMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    /**\r\n     * Calls the `addressMapping` method on the dependency graph.\r\n     * Allows for executing `addressMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get addressMapping() {\r\n        return this.dependencyGraph.addressMapping;\r\n    }\r\n    /** @internal */\r\n    get dependencyGraph() {\r\n        return this._dependencyGraph;\r\n    }\r\n    /** @internal */\r\n    get evaluator() {\r\n        return this._evaluator;\r\n    }\r\n    /** @internal */\r\n    get columnSearch() {\r\n        return this._columnSearch;\r\n    }\r\n    /** @internal */\r\n    get lazilyTransformingAstService() {\r\n        return this._lazilyTransformingAstService;\r\n    }\r\n    /**\r\n     * Returns state of the validity of the license key.\r\n     *\r\n     * @internal\r\n     */\r\n    get licenseKeyValidityState() {\r\n        return this._config.licenseKeyValidityState;\r\n    }\r\n    /**\r\n     * Builds the engine for a sheet from a two-dimensional array representation.\r\n     * The engine is created with a single sheet.\r\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\r\n     * If not specified, the engine will be built with the default configuration.\r\n     *\r\n     * @param {Sheet} sheet - two-dimensional array representation of sheet\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\r\n     * @throws [[InvalidArgumentsError]] when sheet is not an array of arrays\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // data represented as an array\r\n     * const sheetData = [\r\n     *  ['0', '=SUM(1, 2, 3)', '52'],\r\n     *  ['=SUM(A1:C1)', '', '=A1'],\r\n     *  ['2', '=SUM(A1:C1)', '91'],\r\n     * ];\r\n     *\r\n     * // method with optional config parameter maxColumns\r\n     * const hfInstance = HyperFormula.buildFromArray(sheetData, { maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildFromArray(sheet, configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheet(sheet, configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Builds the engine from an object containing multiple sheets with names.\r\n     * The engine is created with one or more sheets.\r\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\r\n     * If not specified the engine will be built with the default configuration.\r\n     *\r\n     * @param {Sheet} sheets - object with sheets definition\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\r\n     * @throws [[InvalidArgumentsError]] when any sheet is not an array of arrays\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // data represented as an object with sheets: Sheet1 and Sheet2\r\n     * const sheetData = {\r\n     *  'Sheet1': [\r\n     *    ['1', '', '=Sheet2!$A1'],\r\n     *    ['', '2', '=SUM(1, 2, 3)'],\r\n     *    ['=Sheet2!$A2', '2', ''],\r\n     *   ],\r\n     *  'Sheet2': [\r\n     *    ['', '4', '=Sheet1!$B1'],\r\n     *    ['', '8', '=SUM(9, 3, 3)'],\r\n     *    ['=Sheet1!$B1', '2', ''],\r\n     *   ],\r\n     * };\r\n     *\r\n     * // method with optional config parameter useColumnIndex\r\n     * const hfInstance = HyperFormula.buildFromSheets(sheetData, { useColumnIndex: true });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildFromSheets(sheets, configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheets(sheets, configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Builds an empty engine instance.\r\n     * Can be configured with the optional parameter that represents a [[ConfigParams]].\r\n     * If not specified the engine will be built with the default configuration.\r\n     *\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // build with no initial data and with optional config parameter maxColumns\r\n     * const hfInstance = HyperFormula.buildEmpty({ maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildEmpty(configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildEmpty(configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Returns registered language from its code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[LanguageNotRegisteredError]] when trying to retrieve not registered language\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return registered language\r\n     * const language = HyperFormula.getLanguage('enGB');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getLanguage(languageCode) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        const val = this.registeredLanguages.get(languageCode);\r\n        if (val === undefined) {\r\n            throw new LanguageNotRegisteredError();\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    /**\r\n     * Registers language under given code string.\r\n     *\r\n     * For more information, see the [Localizing functions guide](/guide/localizing-functions.md).\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     * @param {RawTranslationPackage} languagePackage - translation package to be registered\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     * @throws [[LanguageAlreadyRegisteredError]] when given language is already registered\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return registered language\r\n     * HyperFormula.registerLanguage('enUS', enUS);\r\n     * const engine = HyperFormula.buildEmpty({language: 'enUS'});\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerLanguage(languageCode, languagePackage) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        if (this.registeredLanguages.has(languageCode)) {\r\n            throw new LanguageAlreadyRegisteredError();\r\n        }\r\n        else {\r\n            this.registeredLanguages.set(languageCode, buildTranslationPackage(languagePackage));\r\n        }\r\n    }\r\n    /**\r\n     * Unregisters language that is registered under given code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[LanguageNotRegisteredError]] when given language is not registered\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // register the language for the instance\r\n     * HyperFormula.registerLanguage('plPL', plPL);\r\n     *\r\n     * // unregister plPL\r\n     * HyperFormula.unregisterLanguage('plPL');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterLanguage(languageCode) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        if (this.registeredLanguages.has(languageCode)) {\r\n            this.registeredLanguages.delete(languageCode);\r\n        }\r\n        else {\r\n            throw new LanguageNotRegisteredError();\r\n        }\r\n    }\r\n    /**\r\n     * Returns all registered languages codes.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // should return all registered language codes: ['enGB', 'plPL']\r\n     * const registeredLanguages = HyperFormula.getRegisteredLanguagesCodes();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getRegisteredLanguagesCodes() {\r\n        return Array.from(this.registeredLanguages.keys());\r\n    }\r\n    /**\r\n     * Registers all functions in a given plugin with optional translations.\r\n     *\r\n     * Note: FunctionPlugins must be registered prior to the creation of HyperFormula instances in which they are used.\r\n     * HyperFormula instances created prior to the registration of a FunctionPlugin are unable to access the FunctionPlugin.\r\n     * Registering a FunctionPlugin with [[custom-functions]] requires the translations parameter.\r\n     *\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     * @param {FunctionTranslationsPackage} translations - optional package of function names translations\r\n     *\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register the plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerFunctionPlugin(plugin, translations) {\r\n        FunctionRegistry.registerFunctionPlugin(plugin, translations);\r\n    }\r\n    /**\r\n     * Unregisters all functions defined in given plugin.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // get the class of a plugin\r\n     * const registeredPluginClass = HyperFormula.getFunctionPlugin('EXAMPLE');\r\n     *\r\n     * // unregister all functions defined in a plugin of ID 'EXAMPLE'\r\n     * HyperFormula.unregisterFunctionPlugin(registeredPluginClass);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterFunctionPlugin(plugin) {\r\n        FunctionRegistry.unregisterFunctionPlugin(plugin);\r\n    }\r\n    /**\r\n     * Registers a function with a given id if such exists in a plugin.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {string} functionId - function id, e.g. 'SUMIF'\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     * @param {FunctionTranslationsPackage} translations - translations for the function name\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[FunctionPluginValidationError]] when function with a given id does not exist in plugin or plugin class definition is not consistent with metadata\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a function\r\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerFunction(functionId, plugin, translations) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        FunctionRegistry.registerFunction(functionId, plugin, translations);\r\n    }\r\n    /**\r\n     * Unregisters a function with a given id.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {string} functionId - function id, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a function\r\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\r\n     *\r\n     * // unregister a function\r\n     * HyperFormula.unregisterFunction('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterFunction(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        FunctionRegistry.unregisterFunction(functionId);\r\n    }\r\n    /**\r\n     * Clears function registry.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * HyperFormula.unregisterAllFunctions();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterAllFunctions() {\r\n        FunctionRegistry.unregisterAll();\r\n    }\r\n    /**\r\n     * Returns translated names of all registered functions for a given language\r\n     *\r\n     * @param {string} code - language code\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return a list of function names registered for enGB\r\n     * const allNames = HyperFormula.getRegisteredFunctionNames('enGB');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getRegisteredFunctionNames(code) {\r\n        validateArgToType(code, 'string', 'code');\r\n        const functionIds = FunctionRegistry.getRegisteredFunctionIds();\r\n        const language = this.getLanguage(code);\r\n        return language.getFunctionTranslations(functionIds);\r\n    }\r\n    /**\r\n     * Returns class of a plugin used by function with given id\r\n     *\r\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     *\r\n     * // return the class of a given plugin\r\n     * const myFunctionClass = HyperFormula.getFunctionPlugin('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getFunctionPlugin(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        return FunctionRegistry.getFunctionPlugin(functionId);\r\n    }\r\n    /**\r\n     * Returns classes of all plugins registered in HyperFormula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return classes of all plugins\r\n     * const allClasses = HyperFormula.getAllFunctionPlugins();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getAllFunctionPlugins() {\r\n        return FunctionRegistry.getPlugins();\r\n    }\r\n    static buildFromEngineState(engine) {\r\n        return new HyperFormula(engine.config, engine.stats, engine.dependencyGraph, engine.columnSearch, engine.parser, engine.unparser, engine.cellContentParser, engine.evaluator, engine.lazilyTransformingAstService, engine.crudOperations, engine.exporter, engine.namedExpressions, engine.serialization, engine.functionRegistry);\r\n    }\r\n    /**\r\n     * Returns the cell value of a given address.\r\n     * Applies rounding and post-processing.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '2'],\r\n     * ]);\r\n     *\r\n     * // get value of A1 cell, should be '6'\r\n     * const A1Value = hfInstance.getCellValue({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // get value of B1 cell, should be '2'\r\n     * const B1Value = hfInstance.getCellValue({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValue(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellValue(cellAddress);\r\n    }\r\n    /**\r\n     * Returns a normalized formula string from the cell of a given address or `undefined` for an address that does not exist and empty values.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '0'],\r\n     * ]);\r\n     *\r\n     * // should return a normalized A1 cell formula: '=SUM(1, 2, 3)'\r\n     * const A1Formula = hfInstance.getCellFormula({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return a normalized B1 cell formula: 'undefined'\r\n     * const B1Formula = hfInstance.getCellFormula({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellFormula(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this._serialization.getCellFormula(cellAddress);\r\n    }\r\n    /**\r\n     * Returns the `HYPERLINK` url for a cell of a given address or `undefined` for an address that does not exist or a cell that is not `HYPERLINK`\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=HYPERLINK(\"https://hyperformula.handsontable.com/\", \"HyperFormula\")', '0'],\r\n     * ]);\r\n     *\r\n     * // should return url of 'HYPERLINK': https://hyperformula.handsontable.com/\r\n     * const A1Hyperlink = hfInstance.getCellHyperlink({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'undefined' for a cell that is not 'HYPERLINK'\r\n     * const B1Hyperlink = hfInstance.getCellHyperlink({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellHyperlink(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellHyperlink(cellAddress);\r\n    }\r\n    /**\r\n     * Returns [[RawCellContent]] with a serialized content of the cell of a given address: either a cell formula, an explicit value, or an error.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '0'],\r\n     * ]);\r\n     *\r\n     * // should return serialized content of A1 cell: '=SUM(1, 2, 3)'\r\n     * const cellA1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return serialized content of B1 cell: '0'\r\n     * const cellB1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellSerialized(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellSerialized(cellAddress);\r\n    }\r\n    /**\r\n     * Returns an array of arrays of [[CellValue]] with values of all cells from [[Sheet]].\r\n     * Applies rounding and post-processing.\r\n     *\r\n     * @param {number} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return all values of a sheet: [[0, 6, 0], [1, '1.0%', 0], [2, 6, 0]]\r\n     * const sheetValues = hfInstance.getSheetValues(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetValues(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getSheetValues(sheetId);\r\n    }\r\n    /**\r\n     * Returns an array with normalized formula strings from [[Sheet]] or `undefined` for a cells that have no value.\r\n     *\r\n     * @param {SimpleCellAddress} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return all formulas of a sheet:\r\n     * // [\r\n     * //  [undefined, '=SUM(1, 2, 3)', '=A1'],\r\n     * //  [undefined, '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     * //  [undefined, '=SUM(A1:C1)', '=C1'],\r\n     * // ];\r\n     * const sheetFormulas = hfInstance.getSheetFormulas(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetFormulas(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return this._serialization.getSheetFormulas(sheetId);\r\n    }\r\n    /**\r\n     * Returns an array of arrays of [[RawCellContent]] with serialized content of cells from [[Sheet]], either a cell formula or an explicit value.\r\n     *\r\n     * @param {SimpleCellAddress} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return:\r\n     * // [\r\n     * //  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     * //  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     * //  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * // ];\r\n     * const serializedContent = hfInstance.getSheetSerialized(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetSerialized(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getSheetSerialized(sheetId);\r\n    }\r\n    /**\r\n     * Returns a map containing dimensions of all sheets for the engine instance represented as a key-value pairs where keys are sheet IDs and dimensions are returned as numbers, width and height respectively.\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   Sheet1: [\r\n     *    ['1', '2', '=Sheet2!$A1'],\r\n     *   ],\r\n     *   Sheet2: [\r\n     *    ['3'],\r\n     *    ['4'],\r\n     *   ],\r\n     * });\r\n     *\r\n     * // should return the dimensions of all sheets:\r\n     * // { Sheet1: { width: 3, height: 1 }, Sheet2: { width: 1, height: 2 } }\r\n     * const allSheetsDimensions = hfInstance.getAllSheetsDimensions();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsDimensions() {\r\n        return this._serialization.genericAllSheetsGetter((arg) => this.getSheetDimensions(arg));\r\n    }\r\n    /**\r\n     * Returns dimensions of a specified sheet.\r\n     * The sheet dimensions is represented with numbers: width and height.\r\n     *\r\n     * @param {number} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *    ['1', '2', '=Sheet2!$A1'],\r\n     * ]);\r\n     *\r\n     * // should return provided sheet's dimensions: { width: 3, height: 1 }\r\n     * const sheetDimensions = hfInstance.getSheetDimensions(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetDimensions(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return {\r\n            width: this.dependencyGraph.getSheetWidth(sheetId),\r\n            height: this.dependencyGraph.getSheetHeight(sheetId),\r\n        };\r\n    }\r\n    /**\r\n     * Returns values of all sheets in a form of an object which property keys are strings and values are 2D arrays of [[CellValue]].\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '=A1+10', '3'],\r\n     * ]);\r\n     *\r\n     * // should return all sheets values: { Sheet1: [ [ 1, 11, 3 ] ] }\r\n     * const allSheetsValues = hfInstance.getAllSheetsValues();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsValues() {\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getAllSheetsValues();\r\n    }\r\n    /**\r\n     * Returns formulas of all sheets in a form of an object which property keys are strings and values are 2D arrays of strings or possibly `undefined` when the call does not contain a formula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1+10'],\r\n     * ]);\r\n     *\r\n     * // should return only formulas: { Sheet1: [ [ undefined, undefined, '=A1+10' ] ] }\r\n     * const allSheetsFormulas = hfInstance.getAllSheetsFormulas();\r\n     * ```\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsFormulas() {\r\n        return this._serialization.getAllSheetsFormulas();\r\n    }\r\n    /**\r\n     * Returns formulas or values of all sheets in a form of an object which property keys are strings and values are 2D arrays of [[RawCellContent]].\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1+10'],\r\n     * ]);\r\n     *\r\n     * // should return all sheets serialized content: { Sheet1: [ [ 1, 2, '=A1+10' ] ] }\r\n     * const allSheetsSerialized = hfInstance.getAllSheetsSerialized();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsSerialized() {\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getAllSheetsSerialized();\r\n    }\r\n    /**\r\n     * Updates the config with given new metadata. It is an expensive operation, as it might trigger rebuilding the engine and recalculation of all formulas.\r\n     *\r\n     * @param {Partial<ConfigParams>} newParams configuration options to be updated or added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] when some parameters of config are of wrong type (e.g. currencySymbol)\r\n     * @throws [[ConfigValueEmpty]] when some parameters of config are of invalid value (e.g. currencySymbol)\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // add a config param, for example maxColumns,\r\n     * // you can check the configuration with getConfig method\r\n     * hfInstance.updateConfig({ maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    updateConfig(newParams) {\r\n        const isNewConfigTheSame = Object.entries(newParams).every(([key, value]) => this._config[key] === value);\r\n        if (isNewConfigTheSame) {\r\n            return;\r\n        }\r\n        this.rebuildWithConfig(newParams);\r\n    }\r\n    /**\r\n     * Returns current configuration of the engine instance.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // should return all config metadata including default and those which were added\r\n     * const hfConfig = hfInstance.getConfig();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    getConfig() {\r\n        return this._config.getConfig();\r\n    }\r\n    /**\r\n     * Rebuilds the HyperFormula instance preserving the current sheets data.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * hfInstance.rebuildAndRecalculate();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    rebuildAndRecalculate() {\r\n        this.rebuildWithConfig({});\r\n    }\r\n    /**\r\n     * Returns a snapshot of computation time statistics.\r\n     * It returns a map with key-value pairs where keys are enums for stat type and time (number).\r\n     *\r\n     * @internal\r\n     *\r\n     * @category Instance\r\n     */\r\n    getStats() {\r\n        return this._stats.snapshot();\r\n    }\r\n    /**\r\n     * Undo the previous operation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoOperationToUndoError]] when there is no operation running that can be undone\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     *  ['3', ''],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // undo the operation, it should return the changes\r\n     * const changes = hfInstance.undo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    undo() {\r\n        this._crudOperations.undo();\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Re-do recently undone operation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoOperationToRedoError]] when there is no operation running that can be re-done\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     *  ['3'],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // undo the operation, it should return previous values: [['1'], ['2'], ['3']]\r\n     * hfInstance.undo();\r\n     *\r\n     * // do a redo, it should return the values after removing the second row: [['1'], ['3']]\r\n     * const changes = hfInstance.redo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    redo() {\r\n        this._crudOperations.redo();\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if there is at least one operation that can be undone.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     *  ['3'],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // should return 'true', it is possible to undo last operation\r\n     * // which is removing rows in this example\r\n     * const isSomethingToUndo = hfInstance.isThereSomethingToUndo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    isThereSomethingToUndo() {\r\n        return this._crudOperations.isThereSomethingToUndo();\r\n    }\r\n    /**\r\n     * Checks if there is at least one operation that can be re-done.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * hfInstance.undo();\r\n     *\r\n     * // when there is an action to redo, this returns 'true'\r\n     * const isSomethingToRedo = hfInstance.isThereSomethingToRedo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    isThereSomethingToRedo() {\r\n        return this._crudOperations.isThereSomethingToRedo();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to change the content in a rectangular area bounded by the box.\r\n     * If returns `true`, doing [[setCellContents]] operation won't throw any errors.\r\n     * Returns `false` if the address is invalid or the sheet does not exist.\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - single cell or block of cells to check\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // top left corner\r\n     * const address1 = { col: 0, row: 0, sheet: 0 };\r\n     * // bottom right corner\r\n     * const address2 = { col: 1, row: 0, sheet: 0 };\r\n     *\r\n     * // should return 'true' for this example, it is possible to set content of\r\n     * // width 2, height 1 in the first row and column of sheet 0\r\n     * const isSettable = hfInstance.isItPossibleToSetCellContents({ start: address1, end: address2 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isItPossibleToSetCellContents(address) {\r\n        let range;\r\n        if (isSimpleCellAddress(address)) {\r\n            range = new AbsoluteCellRange(address, address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            range = new AbsoluteCellRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', 'address');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureRangeInSizeLimits(range);\r\n            for (const it of range.addresses(this._dependencyGraph)) {\r\n                this._crudOperations.ensureItIsPossibleToChangeContent(it);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Sets the content for a block of cells of a given coordinates.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellAddress} topLeftCornerAddress - top left corner of block of cells\r\n     * @param {(RawCellContent[][]|RawCellContent)} cellContents - array with content\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the value is not an array of arrays or a raw cell value\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[ExpectedValueOfTypeError]] if topLeftCornerAddress argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1'],\r\n     * ]);\r\n     *\r\n     * // should set the content, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 3, row: 0 },\r\n     * //   newValue: 2,\r\n     * // }]\r\n     * const changes = hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    setCellContents(topLeftCornerAddress, cellContents) {\r\n        this._crudOperations.setCellContents(topLeftCornerAddress, cellContents);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Reorders rows of a sheet according to a source-target mapping.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // should set swap rows 0 and 2 in place, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 2 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 2 },\r\n     * //   newValue: null,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 5,\r\n     * // }]\r\n     * const changes = hfInstance.swapRowIndexes(0, [[0, 2], [2, 0]]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    swapRowIndexes(sheetId, rowMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setRowOrder(sheetId, rowMapping);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder rows of a sheet according to a source-target mapping.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0, 2], [2, 0]]);\r\n     *\r\n     * // returns false\r\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0, 1]]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToSwapRowIndexes(sheetId, rowMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\r\n            this._crudOperations.testRowOrderForArrays(sheetId, rowMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders rows of a sheet according to a permutation of 0-based indexes.\r\n     * Parameter `newRowOrder` should have a form `[ newPositionForRow0, newPositionForRow1, newPositionForRow2, ... ]`.\r\n     * This method might be used to [sort the rows of a sheet](../../guide/sorting-data.md).\r\n     *\r\n     * Note: This method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newRowOrder - permutation of rows\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['A'],\r\n     *  ['B'],\r\n     *  ['C'],\r\n     *  ['D']\r\n     * ]);\r\n     *\r\n     * const newRowOrder = [0, 3, 2, 1]; // [ newPosForA, newPosForB, newPosForC, newPosForD ]\r\n     *\r\n     * const changes = hfInstance.setRowOrder(0, newRowOrder);\r\n     *\r\n     * // Sheet after this operation: [['A'], ['D'], ['C'], ['B']]\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    setRowOrder(sheetId, newRowOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\r\n        return this.swapRowIndexes(sheetId, mapping);\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder rows of a sheet according to a permutation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newRowOrder - permutation of rows\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSetRowOrder(0, [2, 1, 0]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSetRowOrder(0, [2]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToSetRowOrder(sheetId, newRowOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            const rowMapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\r\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\r\n            this._crudOperations.testRowOrderForArrays(sheetId, rowMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders columns of a sheet according to a source-target mapping.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} columnMapping - array mapping original positions to final positions of columns\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // should set swap columns 0 and 2 in place, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 2, row: 0 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 2, row: 1 },\r\n     * //   newValue: 5,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 1 },\r\n     * //   newValue: null,\r\n     * // }]\r\n     * const changes = hfInstance.swapColumnIndexes(0, [[0, 2], [2, 0]]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    swapColumnIndexes(sheetId, columnMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setColumnOrder(sheetId, columnMapping);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder columns of a sheet according to a source-target mapping.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0, 2], [2, 0]]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0, 1]]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToSwapColumnIndexes(sheetId, columnMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\r\n            this._crudOperations.testColumnOrderForArrays(sheetId, columnMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders columns of a sheet according to a permutation of 0-based indexes.\r\n     * Parameter `newColumnOrder` should have a form `[ newPositionForColumn0, newPositionForColumn1, newPositionForColumn2, ... ]`.\r\n     * This method might be used to [sort the columns of a sheet](../../guide/sorting-data.md).\r\n     *\r\n     * Note: This method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newColumnOrder - permutation of columns\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['A', 'B', 'C', 'D']\r\n     * ]);\r\n     *\r\n     * const newColumnOrder = [0, 3, 2, 1]; // [ newPosForA, newPosForB, newPosForC, newPosForD ]\r\n     *\r\n     * const changes = hfInstance.setColumnOrder(0, newColumnOrder);\r\n     *\r\n     * // Sheet after this operation: [['A', 'D', 'C', 'B']]\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    setColumnOrder(sheetId, newColumnOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\r\n        return this.swapColumnIndexes(sheetId, mapping);\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder columns of a sheet according to a permutation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newColumnOrder - permutation of columns\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSetColumnOrder(0, [2, 1, 0]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSetColumnOrder(0, [1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToSetColumnOrder(sheetId, newColumnOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            const columnMapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\r\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\r\n            this._crudOperations.testColumnOrderForArrays(sheetId, columnMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add rows into a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that addRows can be called.\r\n     * If returns `true`, doing [[addRows]] operation won't throw any errors.\r\n     * Returns `false` if adding rows would exceed the sheet size limit or given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which rows will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add one row in the second row of sheet 0\r\n     * const isAddable = hfInstance.isItPossibleToAddRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToAddRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddRows(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds multiple rows into a specified position in a given sheet.\r\n     * Does nothing if rows are outside effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which rows will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.addRows(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    addRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.addRows(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove rows from a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that removeRows can be called.\r\n     * If returns `true`, doing [[removeRows]] operation won't throw any errors.\r\n     * Returns `false` if given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which rows will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to remove one row from row 1 of sheet 0\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToRemoveRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRemoveRows(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes multiple rows from a specified position in a given sheet.\r\n     * Does nothing if rows are outside the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which rows will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return: [{ sheet: 0, col: 1, row: 2, value: null }] for this example\r\n     * const changes = hfInstance.removeRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    removeRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.removeRows(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add columns into a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that addColumns can be called.\r\n     * If returns `true`, doing [[addColumns]] operation won't throw any errors.\r\n     * Returns `false` if adding columns would exceed the sheet size limit or given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which columns will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add 1 column in sheet 0, at column 1\r\n     * const isAddable = hfInstance.isItPossibleToAddColumns(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToAddColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddColumns(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds multiple columns into a specified position in a given sheet.\r\n     * Does nothing if the columns are outside the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which columns will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=RAND()', '42'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 0.92754862796338,\r\n     * // }]\r\n     * const changes = hfInstance.addColumns(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    addColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.addColumns(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove columns from a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that removeColumns can be called.\r\n     * If returns `true`, doing [[removeColumns]] operation won't throw any errors.\r\n     * Returns `false` if given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which columns will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [column, amount]\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to remove one column, in place of the second column of sheet 0\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveColumns(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToRemoveColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRemoveColumns(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes multiple columns from a specified position in a given sheet.\r\n     * Does nothing if columns are outside the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which columns will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount]\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: { error: [CellError], value: '#REF!' },\r\n     * // }]\r\n     * const changes = hfInstance.removeColumns(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    removeColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.removeColumns(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move cells to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveCells can be called.\r\n     * If returns `true`, doing [[moveCells]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected columns, the target location includes an array or the provided address is invalid.\r\n     *\r\n     * @param {SimpleCellRange} source - range for a moved block\r\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if destinationLeftCorner, source, or any of basic type arguments are of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // choose the coordinates and assign them to variables\r\n     * const source = { sheet: 0, col: 1, row: 0 };\r\n     * const destination = { sheet: 0, col: 3, row: 0 };\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move a block of width 1 and height 1\r\n     * // from the corner: column 1 and row 0 of sheet 0\r\n     * // into destination corner: column 3, row 0 of sheet 0\r\n     * const isMovable = hfInstance.isItPossibleToMoveCells({ start: source, end: source }, destination);\r\n     * ```\r\n     * @category Cells\r\n     */\r\n    isItPossibleToMoveCells(source, destinationLeftCorner) {\r\n        if (!isSimpleCellAddress(destinationLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'destinationLeftCorner');\r\n        }\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        try {\r\n            const range = new AbsoluteCellRange(source.start, source.end);\r\n            this._crudOperations.operations.ensureItIsPossibleToMoveCells(range.start, range.width(), range.height(), destinationLeftCorner);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves the content of a cell block from source to the target location.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellRange} source - range for a moved block\r\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if destinationLeftCorner or source are of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=RAND()', '42'],\r\n     * ]);\r\n     *\r\n     * // choose the coordinates and assign them to variables\r\n     * const source = { sheet: 0, col: 1, row: 0 };\r\n     * const destination = { sheet: 0, col: 3, row: 0 };\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 0.93524248002062,\r\n     * // }]\r\n     * const changes = hfInstance.moveCells({ start: source, end: source }, destination);\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    moveCells(source, destinationLeftCorner) {\r\n        if (!isSimpleCellAddress(destinationLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'destinationLeftCorner');\r\n        }\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.moveCells(range.start, range.width(), range.height(), destinationLeftCorner);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move a particular number of rows to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveRows can be called.\r\n     * If returns `true`, doing [[moveRows]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected rows, the target location includes an array or the provided address is invalid.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startRow - number of the first row to move\r\n     * @param {number} numberOfRows - number of rows to move\r\n     * @param {number} targetRow - row number before which rows will be moved\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move one row from row 0 into row 2\r\n     * const isMovable = hfInstance.isItPossibleToMoveRows(0, 0, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startRow, 'number', 'startRow');\r\n        validateArgToType(numberOfRows, 'number', 'numberOfRows');\r\n        validateArgToType(targetRow, 'number', 'targetRow');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves a particular number of rows to a specified position in a given sheet.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startRow - number of the first row to move\r\n     * @param {number} numberOfRows - number of rows to move\r\n     * @param {number} targetRow - row number before which rows will be moved\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.moveRows(0, 0, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    moveRows(sheetId, startRow, numberOfRows, targetRow) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startRow, 'number', 'startRow');\r\n        validateArgToType(numberOfRows, 'number', 'numberOfRows');\r\n        validateArgToType(targetRow, 'number', 'targetRow');\r\n        this._crudOperations.moveRows(sheetId, startRow, numberOfRows, targetRow);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move a particular number of columns to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveColumns can be called.\r\n     * If returns `true`, doing [[moveColumns]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected columns, the target location includes an array or the provided address is invalid.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startColumn - number of the first column to move\r\n     * @param {number} numberOfColumns - number of columns to move\r\n     * @param {number} targetColumn - column number before which columns will be moved\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move one column from column 1 into column 2 of sheet 0\r\n     * const isMovable = hfInstance.isItPossibleToMoveColumns(0, 1, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startColumn, 'number', 'startColumn');\r\n        validateArgToType(numberOfColumns, 'number', 'numberOfColumns');\r\n        validateArgToType(targetColumn, 'number', 'targetColumn');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves a particular number of columns to a specified position in a given sheet.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startColumn - number of the first column to move\r\n     * @param {number} numberOfColumns - number of columns to move\r\n     * @param {number} targetColumn - column number before which columns will be moved\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '3', '=RAND()', '=SUM(A1:C1)'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 0.16210054671639,\r\n     * //  }, {\r\n     * //   address: { sheet: 0, col: 4, row: 0 },\r\n     * //   newValue: 6.16210054671639,\r\n     * // }]\r\n     * const changes = hfInstance.moveColumns(0, 1, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    moveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startColumn, 'number', 'startColumn');\r\n        validateArgToType(numberOfColumns, 'number', 'numberOfColumns');\r\n        validateArgToType(targetColumn, 'number', 'targetColumn');\r\n        this._crudOperations.moveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Stores a copy of the cell block in internal clipboard for the further paste.\r\n     * Returns the copied values for use in external clipboard.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangle range to copy\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // it copies [ [ 2 ] ]\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    copy(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.copy(range.start, range.width(), range.height());\r\n        return this.getRangeValues(source);\r\n    }\r\n    /**\r\n     * Stores information of the cell block in internal clipboard for further paste.\r\n     * Calling [[paste]] right after this method is equivalent to call [[moveCells]].\r\n     * Almost any CRUD operation called after this method will abort the cut operation.\r\n     * Returns the cut values for use in external clipboard.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangle range to cut\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // returns the values that were cut: [ [ 1 ] ]\r\n     * const clipboardContent = hfInstance.cut({\r\n     *   start: { sheet: 0, col: 0, row: 0 },\r\n     *   end: { sheet: 0, col: 0, row: 0 },\r\n     * });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    cut(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.cut(range.start, range.width(), range.height());\r\n        return this.getRangeValues(source);\r\n    }\r\n    /**\r\n     * When called after [[copy]] it pastes copied values and formulas into a cell block.\r\n     * When called after [[cut]] it performs [[moveCells]] operation into the cell block.\r\n     * Does nothing if the clipboard is empty.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellAddress} targetLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[NothingToPasteError]] when clipboard is empty\r\n     * @throws [[TargetLocationHasArrayError]] when the selected target area has array inside\r\n     * @throws [[ExpectedValueOfTypeError]] if targetLeftCorner is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // [ [ 2 ] ] was copied\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     *\r\n     * // returns a list of modified cells: their absolute addresses and new values\r\n     * const changes = hfInstance.paste({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    paste(targetLeftCorner) {\r\n        if (!isSimpleCellAddress(targetLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'targetLeftCorner');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        this._crudOperations.paste(targetLeftCorner);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether there is something in the clipboard.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // copy desired content\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     *\r\n     * // returns 'false', there is content in the clipboard\r\n     * const isClipboardEmpty = hfInstance.isClipboardEmpty();\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    isClipboardEmpty() {\r\n        return this._crudOperations.isClipboardEmpty();\r\n    }\r\n    /**\r\n     * Clears the clipboard content.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // clears the clipboard, isClipboardEmpty() should return true if called afterwards\r\n     * hfInstance.clearClipboard();\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    clearClipboard() {\r\n        this._crudOperations.clearClipboard();\r\n    }\r\n    /**\r\n     * Clears the redo stack in undoRedo history.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // do an operation, for example remove columns\r\n     * hfInstance.removeColumns(0, [0, 1]);\r\n     *\r\n     * // undo the operation\r\n     * hfInstance.undo();\r\n     *\r\n     * // redo the operation\r\n     * hfInstance.redo();\r\n     *\r\n     * // clear the redo stack\r\n     * hfInstance.clearRedoStack();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    clearRedoStack() {\r\n        this._crudOperations.undoRedo.clearRedoStack();\r\n    }\r\n    /**\r\n     * Clears the undo stack in undoRedo history.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // do an operation, for example remove columns\r\n     * hfInstance.removeColumns(0, [0, 1]);\r\n     *\r\n     * // undo the operation\r\n     * hfInstance.undo();\r\n     *\r\n     * // clear the undo stack\r\n     * hfInstance.clearUndoStack();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    clearUndoStack() {\r\n        this._crudOperations.undoRedo.clearUndoStack();\r\n    }\r\n    /**\r\n     * Returns the cell content of a given range in a [[CellValue]][][] format.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     *\r\n     * // returns calculated cells content: [ [ 3, 2 ], [ 5, 6 ] ]\r\n     * const rangeValues = hfInstance.getRangeValues({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeValues(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellValue(address)));\r\n    }\r\n    /**\r\n     * Returns cell formulas in given range.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     * // returns cell formulas of a given range only:\r\n     * // [ [ '=SUM(1, 2)', undefined ], [ undefined, undefined ] ]\r\n     * const rangeFormulas = hfInstance.getRangeFormulas({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeFormulas(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellFormula(address)));\r\n    }\r\n    /**\r\n     * Returns serialized cells in given range.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     * // should return serialized cell content for the given range:\r\n     * // [ [ '=SUM(1, 2)', 2 ], [ 5, 6 ] ]\r\n     * const rangeSerialized = hfInstance.getRangeSerialized({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeSerialized(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellSerialized(address)));\r\n    }\r\n    /**\r\n     * Returns values to fill target range using source range, with properly extending the range using wrap-around heuristic.\r\n     *\r\n     * @param {SimpleCellRange} source of data\r\n     * @param {SimpleCellRange} target range where data is intended to be put\r\n     * @param {boolean} offsetsFromTarget if true, offsets are computed from target corner, otherwise from source corner\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if source or target are of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([[1, '=A1'], ['=$A$1', '2']]);\r\n     *\r\n     * // should return [['2', '=$A$1', '2'], ['=A3', 1, '=C3'], ['2', '=$A$1', '2']]\r\n     * hfInstance.getFillRangeData( {start: {sheet: 0, row: 0, col: 0}, end: {sheet: 0, row: 1, col: 1}},\r\n     * {start: {sheet: 0, row: 1, col: 1}, end: {sheet: 0, row: 3, col: 3}});\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getFillRangeData(source, target, offsetsFromTarget = false) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        if (!isSimpleCellRange(target)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'target');\r\n        }\r\n        const sourceRange = new AbsoluteCellRange(source.start, source.end);\r\n        const targetRange = new AbsoluteCellRange(target.start, target.end);\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return targetRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => {\r\n            const row = ((address.row - (offsetsFromTarget ? target : source).start.row) % sourceRange.height() + sourceRange.height()) % sourceRange.height() + source.start.row;\r\n            const col = ((address.col - (offsetsFromTarget ? target : source).start.col) % sourceRange.width() + sourceRange.width()) % sourceRange.width() + source.start.col;\r\n            return this._serialization.getCellSerialized({ row, col, sheet: sourceRange.sheet }, address);\r\n        }));\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add a sheet to the engine.\r\n     * Checks against particular rules to ascertain that addSheet can be called.\r\n     * If returns `true`, doing [[addSheet]] operation won't throw any errors, and it is possible to add sheet with provided name.\r\n     * Returns `false` if the chosen name is already used.\r\n     *\r\n     * @param {string} sheetName - sheet name, case-insensitive\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'false' because 'MySheet2' already exists\r\n     * const isAddable = hfInstance.isItPossibleToAddSheet('MySheet2');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToAddSheet(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddSheet(sheetName);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a new sheet to the HyperFormula instance. Returns given or autogenerated name of a new sheet.\r\n     *\r\n     * @param {string} [sheetName] - if not specified, name is autogenerated\r\n     *\r\n     * @fires [[sheetAdded]] after the sheet was added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[SheetNameAlreadyTakenError]] when sheet with a given name already exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'MySheet3'\r\n     * const nameProvided = hfInstance.addSheet('MySheet3');\r\n     *\r\n     * // should return autogenerated 'Sheet4'\r\n     * // because no name was provided and 3 other ones already exist\r\n     * const generatedName = hfInstance.addSheet();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    addSheet(sheetName) {\r\n        if (sheetName !== undefined) {\r\n            validateArgToType(sheetName, 'string', 'sheetName');\r\n        }\r\n        const addedSheetName = this._crudOperations.addSheet(sheetName);\r\n        this._emitter.emit(Events.SheetAdded, addedSheetName);\r\n        return addedSheetName;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove sheet for the engine.\r\n     * Returns `true` if the provided sheet exists, and therefore it can be removed, doing [[removeSheet]] operation won't throw any errors.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because sheet with ID 1 exists and is removable\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToRemoveSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes a sheet\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @fires [[sheetRemoved]] after the sheet was removed\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: { error: [CellError], value: '#REF!' },\r\n     * // }]\r\n     * const changes = hfInstance.removeSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    removeSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const displayName = this.sheetMapping.getDisplayName(sheetId);\r\n        this._crudOperations.removeSheet(sheetId);\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.SheetRemoved, displayName, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to clear a specified sheet.\r\n     * If returns `true`, doing [[clearSheet]] operation won't throw any errors, provided sheet exists and its content can be cleared.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because 'MySheet2' exists and can be cleared\r\n     * const isClearable = hfInstance.isItPossibleToClearSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToClearSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Clears the sheet content. Double-checks if the sheet exists.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 0,\r\n     * // }]\r\n     * const changes = hfInstance.clearSheet(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    clearSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.clearSheet(sheetId);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to replace the sheet content.\r\n     * If returns `true`, doing [[setSheetContent]] operation won't throw any errors, the provided sheet exists and then its content can be replaced.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     * @param {RawCellContent[][]} values - array of new values\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because sheet of ID 0 exists\r\n     * // and the provided content can be placed in this sheet\r\n     * const isReplaceable = hfInstance.isItPossibleToReplaceSheetContent(0, [['50'], ['60']]);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToReplaceSheetContent(sheetId, values) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            this._crudOperations.ensureItIsPossibleToChangeSheetContents(sheetId, values);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Replaces the sheet content with new values.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     * @param {RawCellContent[][]} values - array of new values\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when values argument is not an array of arrays\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.setSheetContent(0, [['50'], ['60']]);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    setSheetContent(sheetId, values) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setSheetContent(sheetId, values);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Computes simple (absolute) address of a cell address based on its string representation.\r\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\r\n     *\r\n     * @param {string} cellAddress - string representation of cell address in A1 notation\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 0 }\r\n     * const simpleCellAddress = hfInstance.simpleCellAddressFromString('A1', 0);\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 5 }\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet1!A6');\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 5 }\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet1!$A$6');\r\n     *\r\n     * // returns 'undefined', as there's no 'Sheet 2' in the HyperFormula instance\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet2!A6');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellAddressFromString(cellAddress, sheetId) {\r\n        validateArgToType(cellAddress, 'string', 'cellAddress');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellAddressFromString(this.sheetMapping.get, cellAddress, sheetId);\r\n    }\r\n    /**\r\n     * Computes simple (absolute) address of a cell range based on its string representation.\r\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\r\n     *\r\n     * @param {string} cellRange - string representation of cell range in A1 notation\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // should return { start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 0 } }\r\n     * const simpleCellAddress = hfInstance.simpleCellRangeFromString('A1:A2', 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellRangeFromString(cellRange, sheetId) {\r\n        validateArgToType(cellRange, 'string', 'cellRange');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellRangeFromString(this.sheetMapping.get, cellRange, sheetId);\r\n    }\r\n    /**\r\n     * Returns string representation of an absolute address in A1 notation or `undefined` if the sheet index is not present in the engine.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - object representation of an absolute address\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if its arguments are of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // should return 'B2'\r\n     * const A1Notation = hfInstance.simpleCellAddressToString({ sheet: 0, col: 1, row: 1 }, 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellAddressToString(cellAddress, sheetId) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellAddressToString(this.sheetMapping.fetchDisplayName, cellAddress, sheetId);\r\n    }\r\n    /**\r\n     * Returns string representation of an absolute range in A1 notation or `undefined` if the sheet index is not present in the engine.\r\n     *\r\n     * @param {SimpleCellRange} cellRange - object representation of an absolute range\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if its arguments are of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     * hfInstance.addSheet('Sheet1'); //sheetId = 1\r\n     *\r\n     * // should return 'B2:C2'\r\n     * const A1Notation = hfInstance.simpleCellRangeToString({ start: { sheet: 0, col: 1, row: 1 }, end: { sheet: 0, col: 2, row: 1 } }, 0);\r\n     *\r\n     *  // should return 'Sheet1!B2:C2'\r\n     * const another = hfInstance.simpleCellRangeToString({ start: { sheet: 1, col: 1, row: 1 }, end: { sheet: 1, col: 2, row: 1 } }, 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellRangeToString(cellRange, sheetId) {\r\n        if (!isSimpleCellRange(cellRange)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'cellRange');\r\n        }\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellRangeToString(this.sheetMapping.fetchDisplayName, cellRange, sheetId);\r\n    }\r\n    /**\r\n     * Returns all the out-neighbors in the [dependency graph](../../guide/dependency-graph.md) for a given cell address or range. Including:\r\n     * - All cells with formulas that contain the given cell address or range\r\n     * - Some of the ranges that contain the given cell address or range\r\n     *\r\n     * The exact result depends on the optimizations applied by the HyperFormula to the dependency graph, some of which are described in the section [\"Optimizations for large ranges\"](../../guide/dependency-graph.md#optimizations-for-large-ranges).\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - object representation of an absolute address or range of addresses\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if address is not [[SimpleCellAddress]] or [[SimpleCellRange]]\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\r\n     *\r\n     * hfInstance.getCellDependents({ sheet: 0, col: 0, row: 0});\r\n     * // returns [{ sheet: 0, col: 1, row: 0}, { sheet: 0, col: 2, row: 0}]\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    getCellDependents(address) {\r\n        let vertex;\r\n        if (isSimpleCellAddress(address)) {\r\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', address);\r\n        }\r\n        if (vertex === undefined) {\r\n            return [];\r\n        }\r\n        return this._dependencyGraph.getAdjacentNodesAddresses(vertex);\r\n    }\r\n    /**\r\n     * Returns all the in-neighbors in the [dependency graph](../../guide/dependency-graph.md) for a given cell address or range. In particular:\r\n     * - If the argument is a single cell, `getCellPrecedents()` returns all cells and ranges contained in that cell's formula.\r\n     * - If the argument is a range of cells, `getCellPrecedents()` returns some of the cell addresses and smaller ranges contained in that range (but not all of them). The exact result depends on the optimizations applied by the HyperFormula to the dependency graph, some of which are described in the section [\"Optimizations for large ranges\"](../../guide/dependency-graph.md#optimizations-for-large-ranges).\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - object representation of an absolute address or range of addresses\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if address is of wrong type\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\r\n     *\r\n     * hfInstance.getCellPrecedents({ sheet: 0, col: 2, row: 0});\r\n     * // returns [{ sheet: 0, col: 0, row: 0}, { sheet: 0, col: 1, row: 0}]\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    getCellPrecedents(address) {\r\n        let vertex;\r\n        if (isSimpleCellAddress(address)) {\r\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', address);\r\n        }\r\n        if (vertex === undefined) {\r\n            return [];\r\n        }\r\n        return this._dependencyGraph.dependencyQueryAddresses(vertex);\r\n    }\r\n    /**\r\n     * Returns a unique sheet name assigned to the sheet of a given ID or `undefined` if the there is no sheet with a given ID.\r\n     *\r\n     * @param {number} sheetId - ID of the sheet, for which we want to retrieve name\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'MySheet2' as this sheet is the second one\r\n     * const sheetName = hfInstance.getSheetName(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetName(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return this.sheetMapping.getDisplayName(sheetId);\r\n    }\r\n    /**\r\n     * List all sheet names.\r\n     * Returns an array of sheet names as strings.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return all sheets names: ['MySheet1', 'MySheet2']\r\n     * const sheetNames = hfInstance.getSheetNames();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetNames() {\r\n        return this.sheetMapping.sheetNames();\r\n    }\r\n    /**\r\n     * Returns a unique sheet ID assigned to the sheet with a given name or `undefined` if the sheet does not exist.\r\n     *\r\n     * @param {string} sheetName - name of the sheet, for which we want to retrieve ID, case-insensitive.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return '0' because 'MySheet1' is of ID '0'\r\n     * const sheetID = hfInstance.getSheetId('MySheet1');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetId(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        return this.sheetMapping.get(sheetName);\r\n    }\r\n    /**\r\n     * Returns `true` whether sheet with a given name exists. The method accepts sheet name to be checked.\r\n     *\r\n     * @param {string} sheetName - name of the sheet, case-insensitive.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' since 'MySheet1' exists\r\n     * const sheetExist = hfInstance.doesSheetExist('MySheet1');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    doesSheetExist(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        return this.sheetMapping.hasSheetWithName(sheetName);\r\n    }\r\n    /**\r\n     * Returns the type of a cell at a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'FORMULA', the cell of given coordinates is of this type\r\n     * const cellA1Type = hfInstance.getCellType({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'VALUE', the cell of given coordinates is of this type\r\n     * const cellB1Type = hfInstance.getCellType({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const vertex = this.dependencyGraph.getCell(cellAddress);\r\n        return getCellType(vertex, cellAddress);\r\n    }\r\n    /**\r\n     * Returns `true` if the specified cell contains a simple value.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' since the selected cell contains a simple value\r\n     * const isA1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false' since the selected cell does not contain a simple value\r\n     * const isB1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    doesCellHaveSimpleValue(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this.getCellType(cellAddress) === CellType.VALUE;\r\n    }\r\n    /**\r\n     * Returns `true` if the specified cell contains a formula.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' since the A1 cell contains a formula\r\n     * const A1Formula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false' since the B1 cell does not contain a formula\r\n     * const B1NoFormula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    doesCellHaveFormula(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const cellType = this.getCellType(cellAddress);\r\n        return cellType === CellType.FORMULA || cellType === CellType.ARRAYFORMULA;\r\n    }\r\n    /**\r\n     * Returns`true` if the specified cell is empty.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   [null, '1'],\r\n     * ]);\r\n     *\r\n     * // should return 'true', cell of provided coordinates is empty\r\n     * const isEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false', cell of provided coordinates is not empty\r\n     * const isNotEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isCellEmpty(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this.getCellType(cellAddress) === CellType.EMPTY;\r\n    }\r\n    /**\r\n     * Returns `true` if a given cell is a part of an array.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *    ['{=TRANSPOSE(B1:B1)}'],\r\n     * ]);\r\n     *\r\n     * // should return 'true', cell of provided coordinates is a part of an array\r\n     * const isPartOfArray = hfInstance.isCellPartOfArray({ sheet: 0, col: 0, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isCellPartOfArray(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const cellType = this.getCellType(cellAddress);\r\n        return cellType === CellType.ARRAY || cellType === CellType.ARRAYFORMULA;\r\n    }\r\n    /**\r\n     * Returns type of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\r\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 1, row: 0 });\r\n     *\r\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\r\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 0, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueType(value);\r\n    }\r\n    /**\r\n     * Returns detailed type of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1%', '1$'],\r\n     * ]);\r\n     *\r\n     * // should return 'NUMBER_PERCENT', cell value type of provided coordinates is a number with a format inference percent.\r\n     * const cellType = hfInstance.getCellValueDetailedType({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'NUMBER_CURRENCY', cell value type of provided coordinates is a number with a format inference currency.\r\n     * const cellType = hfInstance.getCellValueDetailedType({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueDetailedType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueDetailedType(value);\r\n    }\r\n    /**\r\n     * Returns auxiliary format information of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1$', '1'],\r\n     * ]);\r\n     *\r\n     * // should return '$', cell value type of provided coordinates is a number with a format inference currency, parsed as using '$' as currency.\r\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return undefined, cell value type of provided coordinates is a number with no format information.\r\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueFormat(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueFormat(value);\r\n    }\r\n    /**\r\n     * Returns the number of existing sheets.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return the number of sheets which is '1'\r\n     * const sheetsCount = hfInstance.countSheets();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    countSheets() {\r\n        return this.sheetMapping.numberOfSheets();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to rename sheet.\r\n     * Returns `true` if the sheet with provided id exists and new name is available\r\n     * Returns `false` if sheet cannot be renamed\r\n     *\r\n     * @param {number} sheetId - a sheet number\r\n     * @param {string} newName - a name of the sheet to be given\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToRenameSheet(0, 'MySheet0');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToRenameSheet(sheetId, newName) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(newName, 'string', 'newName');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRenameSheet(sheetId, newName);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Renames a specified sheet.\r\n     *\r\n     * @param {number} sheetId - a sheet ID\r\n     * @param {string} newName - a name of the sheet to be given, if is the same as the old one the method does nothing\r\n     *\r\n     * @fires [[sheetRenamed]] after the sheet was renamed\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[SheetNameAlreadyTakenError]] when the provided sheet name already exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // renames the sheet 'MySheet1'\r\n     * hfInstance.renameSheet(0, 'MySheet0');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    renameSheet(sheetId, newName) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(newName, 'string', 'newName');\r\n        const oldName = this._crudOperations.renameSheet(sheetId, newName);\r\n        if (oldName !== undefined) {\r\n            this._emitter.emit(Events.SheetRenamed, oldName, newName);\r\n        }\r\n    }\r\n    /**\r\n     * Runs multiple operations and recomputes formulas at the end.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {() => void} batchOperations - a function with operations to be performed\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     * @fires [[evaluationSuspended]] always\r\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // multiple operations in a single callback will trigger evaluation only once\r\n     * // and only one set of changes is returned as a combined result of all\r\n     * // the operations that were triggered within the callback\r\n     * const changes = hfInstance.batch(() => {\r\n     *  hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     *  hfInstance.setCellContents({ col: 4, row: 0, sheet: 0 }, [['=A1']]);\r\n     * });\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    batch(batchOperations) {\r\n        this.suspendEvaluation();\r\n        this._crudOperations.beginUndoRedoBatchMode();\r\n        try {\r\n            batchOperations();\r\n        }\r\n        catch (e) {\r\n            this._crudOperations.commitUndoRedoBatchMode();\r\n            this.resumeEvaluation();\r\n            throw (e);\r\n        }\r\n        this._crudOperations.commitUndoRedoBatchMode();\r\n        return this.resumeEvaluation();\r\n    }\r\n    /**\r\n     * Suspends the dependency graph recalculation.\r\n     * It allows optimizing the performance.\r\n     * With this method, multiple CRUD operations can be done without triggering recalculation after every operation.\r\n     * Suspending evaluation should result in an overall faster calculation compared to recalculating after each operation separately.\r\n     * To resume the evaluation use [[resumeEvaluation]].\r\n     *\r\n     * @fires [[evaluationSuspended]] always\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // similar to batch() but operations are not within a callback,\r\n     * // one method suspends the recalculation\r\n     * // the second will resume calculations and return the changes\r\n     *\r\n     * // suspend the evaluation with this method\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // perform operations\r\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * hfInstance.setSheetContent(1, [['50'], ['60']]);\r\n     *\r\n     * // use resumeEvaluation to resume\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    suspendEvaluation() {\r\n        this._evaluationSuspended = true;\r\n        this._emitter.emit(Events.EvaluationSuspended);\r\n    }\r\n    /**\r\n     * Resumes the dependency graph recalculation that was suspended with [[suspendEvaluation]].\r\n     * It also triggers the recalculation and returns changes that are a result of all batched operations.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // similar to batch() but operations are not within a callback,\r\n     * // one method suspends the recalculation\r\n     * // the second will resume calculations and return the changes\r\n     *\r\n     * // first, suspend the evaluation\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // perform operations\r\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * hfInstance.setSheetContent(1, [['50'], ['60']]);\r\n     *\r\n     * // resume the evaluation\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    resumeEvaluation() {\r\n        this._evaluationSuspended = false;\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.EvaluationResumed, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Checks if the dependency graph recalculation process is suspended or not.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // suspend the evaluation\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // between suspendEvaluation() and resumeEvaluation()\r\n     * // or inside batch() callback it will return 'true', otherwise 'false'\r\n     * const isEvaluationSuspended = hfInstance.isEvaluationSuspended();\r\n     *\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    isEvaluationSuspended() {\r\n        return this._evaluationSuspended;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add named expression into a specific scope.\r\n     * Checks against particular rules to ascertain that addNamedExpression can be called.\r\n     * If returns `true`, doing [[addNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - a name of the expression to be added\r\n     * @param {RawCellContent} expression - the expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add named expression to global scope\r\n     * const isAddable = hfInstance.isItPossibleToAddNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToAddNamedExpression(expressionName, expression, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddNamedExpression(expressionName, expression, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a specified named expression.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - a name of the expression to be added\r\n     * @param {RawCellContent} expression - the expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\r\n     *\r\n     * @fires [[namedExpressionAdded]] always, unless [[batch]] mode is used\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionNameIsAlreadyTakenError]] when the named-expression name is not available.\r\n     * @throws [[NamedExpressionNameIsInvalidError]] when the named-expression name is not valid\r\n     * @throws [[NoRelativeAddressesAllowedError]] when the named-expression formula contains relative references\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add own expression, scope limited to 'Sheet1' (sheetId=0), the method should return a list of cells which values\r\n     * // changed after the operation, their absolute addresses and new values\r\n     * // for this example:\r\n     * // [{\r\n     * //   name: 'prettyName',\r\n     * //   newValue: 142,\r\n     * // }]\r\n     * const changes = hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    addNamedExpression(expressionName, expression, scope, options) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.addNamedExpression(expressionName, expression, scope, options);\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.NamedExpressionAdded, expressionName, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Gets specified named expression value.\r\n     * Returns a [[CellValue]] or undefined if the given named expression does not exist.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression, only 'Sheet1' (sheetId=0) considered as it is the scope\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\r\n     *\r\n     * // returns the calculated value of a passed named expression, '142' for this example\r\n     * const myFormula = hfInstance.getNamedExpressionValue('prettyName', 'Sheet1');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpressionValue(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression) {\r\n            return this._serialization.getCellValue(namedExpression.address);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a normalized formula string for given named expression, or `undefined` for a named expression that does not exist or does not hold a formula.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression in 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // returns a normalized formula string corresponding to the passed name from 'Sheet1' (sheetId=0),\r\n     * // '=Sheet1!A1+100' for this example\r\n     * const myFormula = hfInstance.getNamedExpressionFormula('prettyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpressionFormula(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression === undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this._serialization.getCellFormula(namedExpression.address);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a named expression, or `undefined` for a named expression that does not exist or does not hold a formula.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression in 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // returns a named expression that corresponds to the passed name from 'Sheet1' (sheetId=0)\r\n     * // for this example, returns:\r\n     * // {name: 'prettyName', expression: '=Sheet1!$A$1+100', options: undefined, scope: 0}\r\n     * const myFormula = hfInstance.getNamedExpression('prettyName', 0);\r\n     *\r\n     * // for a named expression that doesn't exist, returns 'undefined':\r\n     * const myFormulaTwo = hfInstance.getNamedExpression('uglyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression === undefined) {\r\n            return undefined;\r\n        }\r\n        const expression = this._serialization.getCellFormula(namedExpression.address);\r\n        return {\r\n            name: expressionName,\r\n            scope: scope,\r\n            expression: expression,\r\n            options: namedExpression.options\r\n        };\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to change named expression in a specific scope.\r\n     * Checks against particular rules to ascertain that changeNamedExpression can be called.\r\n     * If returns `true`, doing [[changeNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {RawCellContent} newExpression - a new expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to change named expression\r\n     * const isAddable = hfInstance.isItPossibleToChangeNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToChangeNamedExpression(expressionName, newExpression, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Changes a given named expression to a specified formula.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {RawCellContent} newExpression - a new expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     * @throws [[ArrayFormulasNotSupportedError]] when the named expression formula is an array formula\r\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression, scope limited to 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // change the named expression\r\n     * const changes = hfInstance.changeNamedExpression('prettyName', '=Sheet1!$A$1+200');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    changeNamedExpression(expressionName, newExpression, scope, options) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.changeNamedExpressionExpression(expressionName, scope, newExpression, options);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove named expression from a specific scope.\r\n     * Checks against particular rules to ascertain that removeNamedExpression can be called.\r\n     * If returns `true`, doing [[removeNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to change named expression\r\n     * const isAddable = hfInstance.isItPossibleToRemoveNamedExpression('prettyName');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToRemoveNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.isItPossibleToRemoveNamedExpression(expressionName, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes a named expression.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @fires [[namedExpressionRemoved]] after the expression was removed\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // remove the named expression\r\n     * const changes = hfInstance.removeNamedExpression('prettyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    removeNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        const removedNamedExpression = this._crudOperations.removeNamedExpression(expressionName, scope);\r\n        if (removedNamedExpression) {\r\n            const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n            this._emitter.emit(Events.NamedExpressionRemoved, removedNamedExpression.displayName, changes);\r\n            return changes;\r\n        }\r\n        else {\r\n            return []; // codecov note: this does not look possible - removeNamedExpression() will throw if the named expression cannot be found\r\n        }\r\n    }\r\n    /**\r\n     * Lists named expressions.\r\n     * - If scope parameter is provided, returns an array of expression names defined for this scope.\r\n     * - If scope parameter is undefined, returns an array of global expression names.\r\n     *\r\n     * @param {number?} scope - scope of the named expressions, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     *  ['60'],\r\n     * ]);\r\n     *\r\n     * // add two named expressions and one scoped\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * hfInstance.addNamedExpression('anotherPrettyName', '=Sheet1!$A$2+100');\r\n     * hfInstance.addNamedExpression('alsoPrettyName', '=Sheet1!$A$3+100', 0);\r\n     *\r\n     * // list the expressions, should return: ['prettyName', 'anotherPrettyName'] for this example\r\n     * const listOfExpressions = hfInstance.listNamedExpressions();\r\n     *\r\n     *  // list the expressions, should return: ['alsoPrettyName'] for this example\r\n     * const listOfExpressions = hfInstance.listNamedExpressions(0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    listNamedExpressions(scope) {\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        return this._namedExpressions.getAllNamedExpressionsNamesInScope(scope);\r\n    }\r\n    /**\r\n     * Returns all named expressions serialized.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     *  ['60'],\r\n     * ]);\r\n     *\r\n     * // add two named expressions and one scoped\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * hfInstance.addNamedExpression('anotherPrettyName', '=Sheet1!$A$2+100');\r\n     * hfInstance.addNamedExpression('prettyName3', '=Sheet1!$A$3+100', 0);\r\n     *\r\n     * // get all expressions serialized\r\n     * // should return:\r\n     * // [\r\n     * // {name: 'prettyName', expression: '=Sheet1!$A$1+100', options: undefined, scope: undefined},\r\n     * // {name: 'anotherPrettyName', expression: '=Sheet1!$A$2+100', options: undefined, scope: undefined},\r\n     * // {name: 'alsoPrettyName', expression: '=Sheet1!$A$3+100', options: undefined, scope: 0}\r\n     * // ]\r\n     * const allExpressions = hfInstance.getAllNamedExpressionsSerialized();\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getAllNamedExpressionsSerialized() {\r\n        return this._serialization.getAllNamedExpressionsSerialized();\r\n    }\r\n    /**\r\n     * Parses and then unparses a formula.\r\n     * Returns a normalized formula (e.g. restores the original capitalization of sheet names, function names, cell addresses, and named expressions).\r\n     *\r\n     * @param {string} formulaString - a formula in a proper format - it must start with \"=\"\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e. does not start with \"=\"\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     * ]);\r\n     *\r\n     * // returns '=Sheet1!$A$1+10'\r\n     * const normalizedFormula = hfInstance.normalizeFormula('=SHEET1!$A$1+10');\r\n     *\r\n     * // returns '=3*$A$1'\r\n     * const normalizedFormula = hfInstance.normalizeFormula('=3*$a$1');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    normalizeFormula(formulaString) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        const { ast, address } = this.extractTemporaryFormula(formulaString);\r\n        if (ast === undefined) {\r\n            throw new NotAFormulaError();\r\n        }\r\n        return this._unparser.unparse(ast, address);\r\n    }\r\n    /**\r\n     * Calculates fire-and-forget formula, returns the calculated value.\r\n     *\r\n     * @param {string} formulaString - A formula in a proper format, starting with `=`.\r\n     * @param {number} sheetId - The ID of a sheet in context of which the formula gets evaluated.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type arguments is of wrong type.\r\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula (i.e. doesn't start with `=`).\r\n     * @throws [[NoSheetWithIdError]] when the provided `sheetID` doesn't exist.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  Sheet1: [['58']],\r\n     *  Sheet2: [['1', '2', '3'], ['4', '5', '6']]\r\n     * });\r\n     *\r\n     * // returns the calculated formula's value\r\n     * // for this example, returns `68`\r\n     * const calculatedFormula = hfInstance.calculateFormula('=A1+10', 0);\r\n     *\r\n     * // for this example, returns [['11', '12', '13'], ['14', '15', '16']]\r\n     * const calculatedFormula = hfInstance.calculateFormula('=A1:B3+10', 1);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    calculateFormula(formulaString, sheetId) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n        const { ast, address, dependencies } = this.extractTemporaryFormula(formulaString, sheetId);\r\n        if (ast === undefined) {\r\n            throw new NotAFormulaError();\r\n        }\r\n        const internalCellValue = this.evaluator.runAndForget(ast, address, dependencies);\r\n        return this._exporter.exportScalarOrRange(internalCellValue);\r\n    }\r\n    /**\r\n     * Validates the formula.\r\n     * If the provided string starts with \"=\" and is a parsable formula, the method returns `true`.\r\n     * The validation is purely grammatical: the method doesn't verify if the formula can be calculated or not.\r\n     *\r\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // checks if the given string is a valid formula, should return 'true' for this example\r\n     * const isFormula = hfInstance.validateFormula('=SUM(1, 2)');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    validateFormula(formulaString) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        const { ast } = this.extractTemporaryFormula(formulaString);\r\n        if (ast === undefined) {\r\n            return false;\r\n        }\r\n        if (ast.type === AstNodeType.ERROR && !ast.error) {\r\n            return false; // codecov note: could not identify a formulaString that would cause this condition\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns translated names of all functions registered in this instance of HyperFormula\r\n     * according to the language set in the configuration\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // return translated names of all functions, assign to a variable\r\n     * const allNames = hfInstance.getRegisteredFunctionNames();\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getRegisteredFunctionNames() {\r\n        const language = HyperFormula.getLanguage(this._config.language);\r\n        return language.getFunctionTranslations(this._functionRegistry.getRegisteredFunctionIds());\r\n    }\r\n    /**\r\n     * Returns class of a plugin used by function with given id\r\n     *\r\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // register a plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     *\r\n     * // get the plugin\r\n     * const myPlugin = hfInstance.getFunctionPlugin('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getFunctionPlugin(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        return this._functionRegistry.getFunctionPlugin(functionId);\r\n    }\r\n    /**\r\n     * Returns classes of all plugins registered in this instance of HyperFormula\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // return classes of all plugins registered, assign to a variable\r\n     * const allNames = hfInstance.getAllFunctionPlugins();\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getAllFunctionPlugins() {\r\n        return this._functionRegistry.getPlugins();\r\n    }\r\n    /**\r\n     * Interprets number as a date + time.\r\n     *\r\n     * @param {number} inputNumber - number of days since nullDate, should be non-negative, fractions are interpreted as hours/minutes/seconds.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass the number of days since nullDate\r\n     * // the method should return formatted date and time, for this example:\r\n     * // {year: 2020, month: 1, day: 15, hours: 2, minutes: 24, seconds: 0}\r\n     * const dateTimeFromNumber = hfInstance.numberToDateTime(43845.1);\r\n     *\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToDateTime(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return this._evaluator.interpreter.dateTimeHelper.numberToSimpleDateTime(inputNumber);\r\n    }\r\n    /**\r\n     * Interprets number as a date.\r\n     *\r\n     * @param {number} inputNumber - number of days since nullDate, should be non-negative, fractions are ignored.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass the number of days since nullDate\r\n     * // the method should return formatted date, for this example:\r\n     * // {year: 2020, month: 1, day: 15}\r\n     * const dateFromNumber = hfInstance.numberToDate(43845);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToDate(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return this._evaluator.interpreter.dateTimeHelper.numberToSimpleDate(inputNumber);\r\n    }\r\n    /**\r\n     * Interprets number as a time (hours/minutes/seconds).\r\n     *\r\n     * @param {number} inputNumber - time in 24h units.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass a number to be interpreted as a time\r\n     * // should return {hours: 26, minutes: 24} for this example\r\n     * const timeFromNumber = hfInstance.numberToTime(1.1);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToTime(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return numberToSimpleTime(inputNumber);\r\n    }\r\n    /**\r\n     * Subscribes to an event.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass a simple handler\r\n     * hfInstance.on('sheetAdded', ( ) => { console.log('foo') });\r\n     *\r\n     * // add a sheet to trigger an event,\r\n     * // console should print 'foo' after each time sheet is added in this example\r\n     * hfInstance.addSheet('FooBar');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    on(event, listener) {\r\n        this._emitter.on(event, listener);\r\n    }\r\n    /**\r\n     * Subscribes to an event once.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass a simple handler\r\n     * hfInstance.once('sheetAdded', ( ) => { console.log('foo') });\r\n     *\r\n     * // call addSheet twice,\r\n     * // console should print 'foo' only once when the sheet is added in this example\r\n     * hfInstance.addSheet('FooBar');\r\n     * hfInstance.addSheet('FooBaz');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    once(event, listener) {\r\n        this._emitter.once(event, listener);\r\n    }\r\n    /**\r\n     * Unsubscribes from an event or from all events.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // define a simple function to be called upon emitting an event\r\n     * const handler = ( ) => { console.log('baz') }\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass the handler\r\n     * hfInstance.on('sheetAdded', handler);\r\n     *\r\n     * // add a sheet to trigger an event,\r\n     * // console should print 'baz' each time a sheet is added\r\n     * hfInstance.addSheet('FooBar');\r\n     *\r\n     * // unsubscribe from a 'sheetAdded'\r\n     * hfInstance.off('sheetAdded', handler);\r\n     *\r\n     * // add a sheet, the console should not print anything\r\n     * hfInstance.addSheet('FooBaz');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    off(event, listener) {\r\n        this._emitter.off(event, listener);\r\n    }\r\n    /**\r\n     * Destroys instance of HyperFormula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // destroys the instance\r\n     * hfInstance.destroy();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    destroy() {\r\n        objectDestroy(this);\r\n    }\r\n    ensureEvaluationIsNotSuspended() {\r\n        if (this._evaluationSuspended) {\r\n            throw new EvaluationSuspendedError();\r\n        }\r\n    }\r\n    extractTemporaryFormula(formulaString, sheetId = 1) {\r\n        const parsedCellContent = this._cellContentParser.parse(formulaString);\r\n        const address = { sheet: sheetId, col: 0, row: 0 };\r\n        if (!(parsedCellContent instanceof CellContent.Formula)) {\r\n            return { address, dependencies: [] };\r\n        }\r\n        const { ast, errors, dependencies } = this._parser.parse(parsedCellContent.formula, address);\r\n        if (errors.length > 0) {\r\n            return { address, dependencies: [] };\r\n        }\r\n        return { ast, address, dependencies };\r\n    }\r\n    /**\r\n     * Rebuilds the engine with new configuration.\r\n     */\r\n    rebuildWithConfig(newParams) {\r\n        const newConfig = this._config.mergeConfig(newParams);\r\n        const configNewLanguage = this._config.mergeConfig({ language: newParams.language });\r\n        const serializedSheets = this._serialization.withNewConfig(configNewLanguage, this._namedExpressions).getAllSheetsSerialized();\r\n        const serializedNamedExpressions = this._serialization.getAllNamedExpressionsSerialized();\r\n        const newEngine = BuildEngineFactory.rebuildWithConfig(newConfig, serializedSheets, serializedNamedExpressions, this._stats);\r\n        this._config = newEngine.config;\r\n        this._stats = newEngine.stats;\r\n        this._dependencyGraph = newEngine.dependencyGraph;\r\n        this._columnSearch = newEngine.columnSearch;\r\n        this._parser = newEngine.parser;\r\n        this._unparser = newEngine.unparser;\r\n        this._cellContentParser = newEngine.cellContentParser;\r\n        this._evaluator = newEngine.evaluator;\r\n        this._lazilyTransformingAstService = newEngine.lazilyTransformingAstService;\r\n        this._crudOperations = newEngine.crudOperations;\r\n        this._exporter = newEngine.exporter;\r\n        this._namedExpressions = newEngine.namedExpressions;\r\n        this._serialization = newEngine.serialization;\r\n        this._functionRegistry = newEngine.functionRegistry;\r\n    }\r\n    /**\r\n     * Runs a recomputation starting from recently changed vertices.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     */\r\n    recomputeIfDependencyGraphNeedsIt() {\r\n        if (!this._evaluationSuspended) {\r\n            const changes = this._crudOperations.getAndClearContentChanges();\r\n            const verticesToRecomputeFrom = Array.from(this.dependencyGraph.verticesToRecompute());\r\n            this.dependencyGraph.clearRecentlyChangedVertices();\r\n            if (verticesToRecomputeFrom.length > 0) {\r\n                changes.addAll(this.evaluator.partialRun(verticesToRecomputeFrom));\r\n            }\r\n            const exportedChanges = changes.exportChanges(this._exporter);\r\n            if (!changes.isEmpty()) {\r\n                this._emitter.emit(Events.ValuesUpdated, exportedChanges);\r\n            }\r\n            return exportedChanges;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n/**\r\n * Version of the HyperFormula.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.version = process.env.HT_VERSION;\r\n/**\r\n * Latest build date.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.buildDate = process.env.HT_BUILD_DATE;\r\n/**\r\n * A release date.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.releaseDate = process.env.HT_RELEASE_DATE;\r\n/**\r\n * Contains all available languages to use in registerLanguage.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.languages = {};\r\nHyperFormula.registeredLanguages = new Map();\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySizePredictor } from './ArraySize';\r\nimport { CellContentParser } from './CellContentParser';\r\nimport { ClipboardOperations } from './ClipboardOperations';\r\nimport { Config } from './Config';\r\nimport { CrudOperations } from './CrudOperations';\r\nimport { DateTimeHelper } from './DateTimeHelper';\r\nimport { DependencyGraph } from './DependencyGraph';\r\nimport { SheetSizeLimitExceededError } from './errors';\r\nimport { Evaluator } from './Evaluator';\r\nimport { Exporter } from './Exporter';\r\nimport { GraphBuilder } from './GraphBuilder';\r\nimport { UIElement } from './i18n';\r\nimport { ArithmeticHelper } from './interpreter/ArithmeticHelper';\r\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\r\nimport { Interpreter } from './interpreter/Interpreter';\r\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\r\nimport { buildColumnSearchStrategy } from './Lookup/SearchStrategy';\r\nimport { NamedExpressions } from './NamedExpressions';\r\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\r\nimport { Operations } from './Operations';\r\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\r\nimport { Serialization } from './Serialization';\r\nimport { findBoundaries, validateAsSheet } from './Sheet';\r\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\r\nimport { UndoRedo } from './UndoRedo';\r\nexport class BuildEngineFactory {\r\n    static buildFromSheets(sheets, configInput = {}, namedExpressions = []) {\r\n        const config = new Config(configInput);\r\n        return this.buildEngine(config, sheets, namedExpressions);\r\n    }\r\n    static buildFromSheet(sheet, configInput = {}, namedExpressions = []) {\r\n        const config = new Config(configInput);\r\n        const newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\r\n        return this.buildEngine(config, { [newsheetprefix]: sheet }, namedExpressions);\r\n    }\r\n    static buildEmpty(configInput = {}, namedExpressions = []) {\r\n        return this.buildEngine(new Config(configInput), {}, namedExpressions);\r\n    }\r\n    static rebuildWithConfig(config, sheets, namedExpressions, stats) {\r\n        return this.buildEngine(config, sheets, namedExpressions, stats);\r\n    }\r\n    static buildEngine(config, sheets = {}, inputNamedExpressions = [], stats = config.useStats ? new Statistics() : new EmptyStatistics()) {\r\n        stats.start(StatType.BUILD_ENGINE_TOTAL);\r\n        const namedExpressions = new NamedExpressions();\r\n        const functionRegistry = new FunctionRegistry(config);\r\n        const lazilyTransformingAstService = new LazilyTransformingAstService(stats);\r\n        const dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\r\n        const columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\r\n        const sheetMapping = dependencyGraph.sheetMapping;\r\n        const addressMapping = dependencyGraph.addressMapping;\r\n        for (const sheetName in sheets) {\r\n            if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\r\n                const sheet = sheets[sheetName];\r\n                validateAsSheet(sheet);\r\n                const boundaries = findBoundaries(sheet);\r\n                if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\r\n                    throw new SheetSizeLimitExceededError();\r\n                }\r\n                const sheetId = sheetMapping.addSheet(sheetName);\r\n                addressMapping.autoAddSheet(sheetId, sheet, boundaries);\r\n            }\r\n        }\r\n        const parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\r\n        lazilyTransformingAstService.parser = parser;\r\n        const unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\r\n        const dateTimeHelper = new DateTimeHelper(config);\r\n        const numberLiteralHelper = new NumberLiteralHelper(config);\r\n        const arithmeticHelper = new ArithmeticHelper(config, dateTimeHelper, numberLiteralHelper);\r\n        const cellContentParser = new CellContentParser(config, dateTimeHelper, numberLiteralHelper);\r\n        const arraySizePredictor = new ArraySizePredictor(config, functionRegistry);\r\n        const operations = new Operations(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor);\r\n        const undoRedo = new UndoRedo(config, operations);\r\n        lazilyTransformingAstService.undoRedo = undoRedo;\r\n        const clipboardOperations = new ClipboardOperations(config, dependencyGraph, operations);\r\n        const crudOperations = new CrudOperations(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\r\n        inputNamedExpressions.forEach((entry) => {\r\n            crudOperations.ensureItIsPossibleToAddNamedExpression(entry.name, entry.expression, entry.scope);\r\n            crudOperations.operations.addNamedExpression(entry.name, entry.expression, entry.scope, entry.options);\r\n        });\r\n        const exporter = new Exporter(config, namedExpressions, sheetMapping.fetchDisplayName, lazilyTransformingAstService);\r\n        const serialization = new Serialization(dependencyGraph, unparser, exporter);\r\n        const interpreter = new Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper);\r\n        stats.measure(StatType.GRAPH_BUILD, () => {\r\n            const graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor);\r\n            graphBuilder.buildGraph(sheets, stats);\r\n        });\r\n        const evaluator = new Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch);\r\n        evaluator.run();\r\n        stats.end(StatType.BUILD_ENGINE_TOTAL);\r\n        return {\r\n            config,\r\n            stats,\r\n            dependencyGraph,\r\n            columnSearch,\r\n            parser,\r\n            unparser,\r\n            cellContentParser,\r\n            evaluator,\r\n            lazilyTransformingAstService,\r\n            crudOperations,\r\n            exporter,\r\n            namedExpressions,\r\n            serialization,\r\n            functionRegistry,\r\n        };\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { timeToNumber } from './DateTimeHelper';\r\nimport { ErrorMessage } from './error-message';\r\nimport { UnableToParseError } from './errors';\r\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\r\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, getRawValue, PercentNumber, TimeNumber } from './interpreter/InterpreterValue';\r\nexport var CellContent;\r\n(function (CellContent) {\r\n    class Number {\r\n        constructor(value) {\r\n            this.value = value;\r\n            this.value = cloneNumber(this.value, fixNegativeZero(getRawValue(this.value)));\r\n        }\r\n    }\r\n    CellContent.Number = Number;\r\n    class String {\r\n        constructor(value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    CellContent.String = String;\r\n    class Boolean {\r\n        constructor(value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    CellContent.Boolean = Boolean;\r\n    class Empty {\r\n        static getSingletonInstance() {\r\n            if (!Empty.instance) {\r\n                Empty.instance = new Empty();\r\n            }\r\n            return Empty.instance;\r\n        }\r\n    }\r\n    CellContent.Empty = Empty;\r\n    class Formula {\r\n        constructor(formula) {\r\n            this.formula = formula;\r\n        }\r\n    }\r\n    CellContent.Formula = Formula;\r\n    class Error {\r\n        constructor(errorType, message) {\r\n            this.value = new CellError(errorType, message);\r\n        }\r\n    }\r\n    CellContent.Error = Error;\r\n})(CellContent || (CellContent = {}));\r\n/**\r\n * Checks whether string looks like formula or not.\r\n *\r\n * @param text - formula\r\n */\r\nexport function isFormula(text) {\r\n    return text.startsWith('=');\r\n}\r\nexport function isBoolean(text) {\r\n    const tl = text.toLowerCase();\r\n    return tl === 'true' || tl === 'false';\r\n}\r\nexport function isError(text, errorMapping) {\r\n    const upperCased = text.toUpperCase();\r\n    const errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\r\n    return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\r\n}\r\nexport class CellContentParser {\r\n    constructor(config, dateHelper, numberLiteralsHelper) {\r\n        this.config = config;\r\n        this.dateHelper = dateHelper;\r\n        this.numberLiteralsHelper = numberLiteralsHelper;\r\n    }\r\n    parse(content) {\r\n        if (content === undefined || content === null) {\r\n            return CellContent.Empty.getSingletonInstance();\r\n        }\r\n        else if (typeof content === 'number') {\r\n            if (isNumberOverflow(content)) {\r\n                return new CellContent.Error(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            else {\r\n                return new CellContent.Number(content);\r\n            }\r\n        }\r\n        else if (typeof content === 'boolean') {\r\n            return new CellContent.Boolean(content);\r\n        }\r\n        else if (content instanceof Date) {\r\n            const dateVal = this.dateHelper.dateToNumber({\r\n                day: content.getDate(),\r\n                month: content.getMonth() + 1,\r\n                year: content.getFullYear()\r\n            });\r\n            const timeVal = timeToNumber({\r\n                hours: content.getHours(),\r\n                minutes: content.getMinutes(),\r\n                seconds: content.getSeconds() + content.getMilliseconds() / 1000\r\n            });\r\n            const val = dateVal + timeVal;\r\n            if (val < 0) {\r\n                return new CellContent.Error(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            if (val % 1 === 0) {\r\n                return new CellContent.Number(new DateNumber(val, 'Date()'));\r\n            }\r\n            else if (val < 1) {\r\n                return new CellContent.Number(new TimeNumber(val, 'Date()'));\r\n            }\r\n            else {\r\n                return new CellContent.Number(new DateTimeNumber(val, 'Date()'));\r\n            }\r\n        }\r\n        else if (typeof content === 'string') {\r\n            if (isBoolean(content)) {\r\n                return new CellContent.Boolean(content.toLowerCase() === 'true');\r\n            }\r\n            else if (isFormula(content)) {\r\n                return new CellContent.Formula(content);\r\n            }\r\n            else if (isError(content, this.config.errorMapping)) {\r\n                return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\r\n            }\r\n            else {\r\n                let trimmedContent = content.trim();\r\n                let mode = 0;\r\n                let currency;\r\n                if (trimmedContent.endsWith('%')) {\r\n                    mode = 1;\r\n                    trimmedContent = trimmedContent.slice(0, trimmedContent.length - 1);\r\n                }\r\n                else {\r\n                    const res = this.currencyMatcher(trimmedContent);\r\n                    if (res !== undefined) {\r\n                        mode = 2;\r\n                        [currency, trimmedContent] = res;\r\n                    }\r\n                }\r\n                const val = this.numberLiteralsHelper.numericStringToMaybeNumber(trimmedContent);\r\n                if (val !== undefined) {\r\n                    let parseAsNum;\r\n                    if (mode === 1) {\r\n                        parseAsNum = new PercentNumber(val / 100);\r\n                    }\r\n                    else if (mode === 2) {\r\n                        parseAsNum = new CurrencyNumber(val, currency);\r\n                    }\r\n                    else {\r\n                        parseAsNum = val;\r\n                    }\r\n                    return new CellContent.Number(parseAsNum);\r\n                }\r\n                const parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\r\n                if (parsedDateNumber !== undefined) {\r\n                    return new CellContent.Number(parsedDateNumber);\r\n                }\r\n                else {\r\n                    return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new UnableToParseError(content);\r\n        }\r\n    }\r\n    currencyMatcher(token) {\r\n        for (const currency of this.config.currencySymbol) {\r\n            if (token.startsWith(currency)) {\r\n                return [currency, token.slice(currency.length)];\r\n            }\r\n            if (token.endsWith(currency)) {\r\n                return [currency, token.slice(0, token.length - currency.length)];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\r\nvar ClipboardOperationType;\r\n(function (ClipboardOperationType) {\r\n    ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\r\n    ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\r\n})(ClipboardOperationType || (ClipboardOperationType = {}));\r\nexport var ClipboardCellType;\r\n(function (ClipboardCellType) {\r\n    ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\r\n    ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\r\n    ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\r\n    ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\r\n})(ClipboardCellType || (ClipboardCellType = {}));\r\nclass Clipboard {\r\n    constructor(sourceLeftCorner, width, height, type, content) {\r\n        this.sourceLeftCorner = sourceLeftCorner;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.type = type;\r\n        this.content = content;\r\n    }\r\n    *getContent(leftCorner) {\r\n        if (this.content === undefined) {\r\n            return;\r\n        }\r\n        else {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                for (let x = 0; x < this.width; ++x) {\r\n                    yield [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class ClipboardOperations {\r\n    constructor(config, dependencyGraph, operations) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.operations = operations;\r\n        this.maxRows = config.maxRows;\r\n        this.maxColumns = config.maxColumns;\r\n    }\r\n    cut(leftCorner, width, height) {\r\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\r\n    }\r\n    copy(leftCorner, width, height) {\r\n        const content = [];\r\n        for (let y = 0; y < height; ++y) {\r\n            content[y] = [];\r\n            for (let x = 0; x < width; ++x) {\r\n                const clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\r\n                content[y].push(clipboardCell);\r\n            }\r\n        }\r\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\r\n    }\r\n    abortCut() {\r\n        if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\r\n            this.clear();\r\n        }\r\n    }\r\n    clear() {\r\n        this.clipboard = undefined;\r\n    }\r\n    ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\r\n        if (this.clipboard === undefined) {\r\n            return;\r\n        }\r\n        if (invalidSimpleCellAddress(destinationLeftCorner) ||\r\n            !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\r\n            throw new InvalidArgumentsError('a valid target address.');\r\n        }\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\r\n        if (targetRange.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(targetRange)) {\r\n            throw new Error('It is not possible to paste onto an array');\r\n        }\r\n    }\r\n    isCutClipboard() {\r\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\r\n    }\r\n    isCopyClipboard() {\r\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { InvalidAddressError, InvalidArgumentsError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NothingToPasteError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError } from './errors';\r\nimport { doesContainRelativeReferences } from './NamedExpressions';\r\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\r\nimport { findBoundaries, validateAsSheet } from './Sheet';\r\nimport { ColumnsSpan, RowsSpan } from './Span';\r\nimport { AddColumnsUndoEntry, AddNamedExpressionUndoEntry, AddRowsUndoEntry, AddSheetUndoEntry, ChangeNamedExpressionUndoEntry, ClearSheetUndoEntry, MoveCellsUndoEntry, MoveColumnsUndoEntry, MoveRowsUndoEntry, PasteUndoEntry, RemoveColumnsUndoEntry, RemoveNamedExpressionUndoEntry, RemoveRowsUndoEntry, RemoveSheetUndoEntry, RenameSheetUndoEntry, SetCellContentsUndoEntry, SetColumnOrderUndoEntry, SetRowOrderUndoEntry, SetSheetContentUndoEntry } from './UndoRedo';\r\nexport class CrudOperations {\r\n    constructor(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions) {\r\n        this.operations = operations;\r\n        this.undoRedo = undoRedo;\r\n        this.clipboardOperations = clipboardOperations;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.parser = parser;\r\n        this.cellContentParser = cellContentParser;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.namedExpressions = namedExpressions;\r\n        this.maxRows = config.maxRows;\r\n        this.maxColumns = config.maxColumns;\r\n    }\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    addRows(sheet, ...indexes) {\r\n        const addRowsCommand = new AddRowsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToAddRows(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.operations.addRows(addRowsCommand);\r\n        this.undoRedo.saveOperation(new AddRowsUndoEntry(addRowsCommand));\r\n    }\r\n    removeRows(sheet, ...indexes) {\r\n        const removeRowsCommand = new RemoveRowsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToRemoveRows(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const rowsRemovals = this.operations.removeRows(removeRowsCommand);\r\n        this.undoRedo.saveOperation(new RemoveRowsUndoEntry(removeRowsCommand, rowsRemovals));\r\n    }\r\n    addColumns(sheet, ...indexes) {\r\n        const addColumnsCommand = new AddColumnsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToAddColumns(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.operations.addColumns(addColumnsCommand);\r\n        this.undoRedo.saveOperation(new AddColumnsUndoEntry(addColumnsCommand));\r\n    }\r\n    removeColumns(sheet, ...indexes) {\r\n        const removeColumnsCommand = new RemoveColumnsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToRemoveColumns(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const columnsRemovals = this.operations.removeColumns(removeColumnsCommand);\r\n        this.undoRedo.saveOperation(new RemoveColumnsUndoEntry(removeColumnsCommand, columnsRemovals));\r\n    }\r\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const { version, overwrittenCellsData, addedGlobalNamedExpressions } = this.operations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        this.undoRedo.saveOperation(new MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version));\r\n    }\r\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        this.ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const version = this.operations.moveRows(sheet, startRow, numberOfRows, targetRow);\r\n        this.undoRedo.saveOperation(new MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow, version));\r\n    }\r\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        this.ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn);\r\n        this.undoRedo.clearRedoStack();\r\n        const version = this.operations.moveColumns(sheet, startColumn, numberOfColumns, targetColumn);\r\n        this.undoRedo.saveOperation(new MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn, version));\r\n    }\r\n    cut(sourceLeftCorner, width, height) {\r\n        this.clipboardOperations.cut(sourceLeftCorner, width, height);\r\n    }\r\n    ensureItIsPossibleToCopy(sourceLeftCorner, width, height) {\r\n        if (!isPositiveInteger(width)) {\r\n            throw new InvalidArgumentsError('width to be positive integer.');\r\n        }\r\n        if (!isPositiveInteger(height)) {\r\n            throw new InvalidArgumentsError('height to be positive integer.');\r\n        }\r\n    }\r\n    copy(sourceLeftCorner, width, height) {\r\n        this.ensureItIsPossibleToCopy(sourceLeftCorner, width, height);\r\n        this.clipboardOperations.copy(sourceLeftCorner, width, height);\r\n    }\r\n    paste(targetLeftCorner) {\r\n        const clipboard = this.clipboardOperations.clipboard;\r\n        if (clipboard === undefined) {\r\n            throw new NothingToPasteError();\r\n        }\r\n        else if (this.clipboardOperations.isCutClipboard()) {\r\n            this.moveCells(clipboard.sourceLeftCorner, clipboard.width, clipboard.height, targetLeftCorner);\r\n        }\r\n        else if (this.clipboardOperations.isCopyClipboard()) {\r\n            this.clipboardOperations.ensureItIsPossibleToCopyPaste(targetLeftCorner);\r\n            const targetRange = AbsoluteCellRange.spanFrom(targetLeftCorner, clipboard.width, clipboard.height);\r\n            const oldContent = this.operations.getRangeClipboardCells(targetRange);\r\n            this.undoRedo.clearRedoStack();\r\n            const addedGlobalNamedExpressions = this.operations.restoreClipboardCells(clipboard.sourceLeftCorner.sheet, clipboard.getContent(targetLeftCorner));\r\n            this.undoRedo.saveOperation(new PasteUndoEntry(targetLeftCorner, oldContent, clipboard.content, addedGlobalNamedExpressions));\r\n        }\r\n    }\r\n    beginUndoRedoBatchMode() {\r\n        this.undoRedo.beginBatchMode();\r\n    }\r\n    commitUndoRedoBatchMode() {\r\n        this.undoRedo.commitBatchMode();\r\n    }\r\n    isClipboardEmpty() {\r\n        return this.clipboardOperations.clipboard === undefined;\r\n    }\r\n    clearClipboard() {\r\n        this.clipboardOperations.clear();\r\n    }\r\n    addSheet(name) {\r\n        if (name !== undefined) {\r\n            this.ensureItIsPossibleToAddSheet(name);\r\n        }\r\n        this.undoRedo.clearRedoStack();\r\n        const addedSheetName = this.operations.addSheet(name);\r\n        this.undoRedo.saveOperation(new AddSheetUndoEntry(addedSheetName));\r\n        return addedSheetName;\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const originalName = this.sheetMapping.fetchDisplayName(sheetId);\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        const { version, scopedNamedExpressions } = this.operations.removeSheet(sheetId);\r\n        this.undoRedo.saveOperation(new RemoveSheetUndoEntry(originalName, sheetId, oldSheetContent, scopedNamedExpressions, version));\r\n    }\r\n    renameSheet(sheetId, newName) {\r\n        this.ensureItIsPossibleToRenameSheet(sheetId, newName);\r\n        const oldName = this.operations.renameSheet(sheetId, newName);\r\n        if (oldName !== undefined) {\r\n            this.undoRedo.clearRedoStack();\r\n            this.undoRedo.saveOperation(new RenameSheetUndoEntry(sheetId, oldName, newName));\r\n        }\r\n        return oldName;\r\n    }\r\n    clearSheet(sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        this.operations.clearSheet(sheetId);\r\n        this.undoRedo.saveOperation(new ClearSheetUndoEntry(sheetId, oldSheetContent));\r\n    }\r\n    setCellContents(topLeftCornerAddress, cellContents) {\r\n        if (!(cellContents instanceof Array)) {\r\n            cellContents = [[cellContents]];\r\n        }\r\n        else {\r\n            for (let i = 0; i < cellContents.length; i++) {\r\n                if (!(cellContents[i] instanceof Array)) {\r\n                    throw new InvalidArgumentsError('an array of arrays or a raw cell value.');\r\n                }\r\n            }\r\n        }\r\n        this.ensureItIsPossibleToChangeCellContents(topLeftCornerAddress, cellContents);\r\n        this.undoRedo.clearRedoStack();\r\n        const oldContents = [];\r\n        for (let i = 0; i < cellContents.length; i++) {\r\n            for (let j = 0; j < cellContents[i].length; j++) {\r\n                const address = {\r\n                    sheet: topLeftCornerAddress.sheet,\r\n                    row: topLeftCornerAddress.row + i,\r\n                    col: topLeftCornerAddress.col + j,\r\n                };\r\n                const newContent = cellContents[i][j];\r\n                this.clipboardOperations.abortCut();\r\n                const oldContent = this.operations.setCellContent(address, newContent);\r\n                oldContents.push({ address, newContent, oldContent });\r\n            }\r\n        }\r\n        this.undoRedo.saveOperation(new SetCellContentsUndoEntry(oldContents));\r\n    }\r\n    setSheetContent(sheetId, values) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.ensureItIsPossibleToChangeSheetContents(sheetId, values);\r\n        validateAsSheet(values);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        this.operations.setSheetContent(sheetId, values);\r\n        this.undoRedo.saveOperation(new SetSheetContentUndoEntry(sheetId, oldSheetContent, values));\r\n    }\r\n    setRowOrder(sheetId, rowMapping) {\r\n        this.validateSwapRowIndexes(sheetId, rowMapping);\r\n        this.testRowOrderForArrays(sheetId, rowMapping);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldContent = this.operations.setRowOrder(sheetId, rowMapping);\r\n        this.undoRedo.saveOperation(new SetRowOrderUndoEntry(sheetId, rowMapping, oldContent));\r\n    }\r\n    validateSwapRowIndexes(sheetId, rowMapping) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        this.validateRowOrColumnMapping(sheetId, rowMapping, 'row');\r\n    }\r\n    testColumnOrderForArrays(sheetId, columnMapping) {\r\n        for (const [source, target] of columnMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\r\n                if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(rowRange)) {\r\n                    throw new SourceLocationHasArrayError();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setColumnOrder(sheetId, columnMapping) {\r\n        this.validateSwapColumnIndexes(sheetId, columnMapping);\r\n        this.testColumnOrderForArrays(sheetId, columnMapping);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldContent = this.operations.setColumnOrder(sheetId, columnMapping);\r\n        this.undoRedo.saveOperation(new SetColumnOrderUndoEntry(sheetId, columnMapping, oldContent));\r\n    }\r\n    validateSwapColumnIndexes(sheetId, columnMapping) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        this.validateRowOrColumnMapping(sheetId, columnMapping, 'column');\r\n    }\r\n    testRowOrderForArrays(sheetId, rowMapping) {\r\n        for (const [source, target] of rowMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\r\n                if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(rowRange)) {\r\n                    throw new SourceLocationHasArrayError();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    mappingFromOrder(sheetId, newOrder, rowOrColumn) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\r\n        if (newOrder.length !== limit) {\r\n            throw new InvalidArgumentsError(`number of ${rowOrColumn}s provided to be sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\r\n        }\r\n        const ret = [];\r\n        for (let i = 0; i < limit; i++) {\r\n            if (newOrder[i] !== i) {\r\n                ret.push([i, newOrder[i]]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    undo() {\r\n        if (this.undoRedo.isUndoStackEmpty()) {\r\n            throw new NoOperationToUndoError();\r\n        }\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.undo();\r\n    }\r\n    redo() {\r\n        if (this.undoRedo.isRedoStackEmpty()) {\r\n            throw new NoOperationToRedoError();\r\n        }\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.redo();\r\n    }\r\n    addNamedExpression(expressionName, expression, sheetId, options) {\r\n        this.ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetId);\r\n        this.operations.addNamedExpression(expressionName, expression, sheetId, options);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new AddNamedExpressionUndoEntry(expressionName, expression, sheetId, options));\r\n    }\r\n    changeNamedExpressionExpression(expressionName, sheetId, newExpression, options) {\r\n        this.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, sheetId);\r\n        const [oldNamedExpression, content] = this.operations.changeNamedExpressionExpression(expressionName, newExpression, sheetId, options);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new ChangeNamedExpressionUndoEntry(oldNamedExpression, newExpression, content, sheetId, options));\r\n    }\r\n    removeNamedExpression(expressionName, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        const [namedExpression, content] = this.operations.removeNamedExpression(expressionName, sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new RemoveNamedExpressionUndoEntry(namedExpression, content, sheetId));\r\n        return namedExpression;\r\n    }\r\n    ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.ensureNamedExpressionNameIsValid(expressionName, sheetId);\r\n        this.ensureNamedExpressionIsValid(expression);\r\n    }\r\n    ensureItIsPossibleToChangeNamedExpression(expressionName, expression, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        if (this.namedExpressions.namedExpressionForScope(expressionName, sheetId) === undefined) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        this.ensureNamedExpressionIsValid(expression);\r\n    }\r\n    isItPossibleToRemoveNamedExpression(expressionName, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        if (this.namedExpressions.namedExpressionForScope(expressionName, sheetId) === undefined) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddRows(sheet, ...indexes) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const newRowsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\r\n        if (sheetHeight + newRowsCount > this.maxRows) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        for (const [row, numberOfRowsToAdd] of indexes) {\r\n            if (!isNonnegativeInteger(row) || !isPositiveInteger(numberOfRowsToAdd)) {\r\n                throw new InvalidArgumentsError('row number to be nonnegative and number of rows to add to be positive.');\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToRemoveRows(sheet, ...indexes) {\r\n        for (const [rowStart, numberOfRows] of indexes) {\r\n            const rowEnd = rowStart + numberOfRows - 1;\r\n            if (!isNonnegativeInteger(rowStart) || !isNonnegativeInteger(rowEnd)) {\r\n                throw new InvalidArgumentsError('starting and ending row to be nonnegative.');\r\n            }\r\n            if (rowEnd < rowStart) {\r\n                throw new InvalidArgumentsError('starting row to be smaller than the ending row.');\r\n            }\r\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n                throw new NoSheetWithIdError(sheet);\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddColumns(sheet, ...indexes) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const newColumnsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\r\n        if (sheetWidth + newColumnsCount > this.maxColumns) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        for (const [column, numberOfColumnsToAdd] of indexes) {\r\n            if (!isNonnegativeInteger(column) || !isPositiveInteger(numberOfColumnsToAdd)) {\r\n                throw new InvalidArgumentsError('column number to be nonnegative and number of columns to add to be positive.');\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToRemoveColumns(sheet, ...indexes) {\r\n        for (const [columnStart, numberOfColumns] of indexes) {\r\n            const columnEnd = columnStart + numberOfColumns - 1;\r\n            if (!isNonnegativeInteger(columnStart) || !isNonnegativeInteger(columnEnd)) {\r\n                throw new InvalidArgumentsError('starting and ending column to be nonnegative.');\r\n            }\r\n            if (columnEnd < columnStart) {\r\n                throw new InvalidArgumentsError('starting column to be smaller than the ending column.');\r\n            }\r\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n                throw new NoSheetWithIdError(sheet);\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        this.ensureItIsPossibleToAddRows(sheet, [targetRow, numberOfRows]);\r\n        const sourceStart = simpleCellAddress(sheet, 0, startRow);\r\n        const targetStart = simpleCellAddress(sheet, 0, targetRow);\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)\r\n            || invalidSimpleCellAddress(sourceStart)\r\n            || invalidSimpleCellAddress(targetStart)\r\n            || !isPositiveInteger(numberOfRows)\r\n            || (targetRow <= startRow + numberOfRows && targetRow >= startRow)) {\r\n            throw new InvalidArgumentsError('a valid range of rows to move.');\r\n        }\r\n        const width = this.dependencyGraph.getSheetWidth(sheet);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, width, numberOfRows);\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (targetRow > 0 && this.dependencyGraph.arrayMapping.isFormulaArrayInAllRows(RowsSpan.fromNumberOfRows(sheet, targetRow - 1, 2))) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        this.ensureItIsPossibleToAddColumns(sheet, [targetColumn, numberOfColumns]);\r\n        const sourceStart = simpleCellAddress(sheet, startColumn, 0);\r\n        const targetStart = simpleCellAddress(sheet, targetColumn, 0);\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)\r\n            || invalidSimpleCellAddress(sourceStart)\r\n            || invalidSimpleCellAddress(targetStart)\r\n            || !isPositiveInteger(numberOfColumns)\r\n            || (targetColumn <= startColumn + numberOfColumns && targetColumn >= startColumn)) {\r\n            throw new InvalidArgumentsError('a valid range of columns to move.');\r\n        }\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, numberOfColumns, sheetHeight);\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (targetColumn > 0 && this.dependencyGraph.arrayMapping.isFormulaArrayInAllColumns(ColumnsSpan.fromNumberOfColumns(sheet, targetColumn - 1, 2))) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddSheet(name) {\r\n        if (this.sheetMapping.hasSheetWithName(name)) {\r\n            throw new SheetNameAlreadyTakenError(name);\r\n        }\r\n    }\r\n    ensureItIsPossibleToRenameSheet(sheetId, name) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        const existingSheetId = this.sheetMapping.get(name);\r\n        if (existingSheetId !== undefined && existingSheetId !== sheetId) {\r\n            throw new SheetNameAlreadyTakenError(name);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeContent(address) {\r\n        if (invalidSimpleCellAddress(address)) {\r\n            throw new InvalidAddressError(address);\r\n        }\r\n        if (!this.sheetMapping.hasSheetWithId(address.sheet)) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeCellContents(inputAddress, content) {\r\n        const boundaries = findBoundaries(content);\r\n        const targetRange = AbsoluteCellRange.spanFrom(inputAddress, boundaries.width, boundaries.height);\r\n        this.ensureRangeInSizeLimits(targetRange);\r\n        for (const address of targetRange.addresses(this.dependencyGraph)) {\r\n            this.ensureItIsPossibleToChangeContent(address);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeSheetContents(sheetId, content) {\r\n        const boundaries = findBoundaries(content);\r\n        const targetRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheetId, 0, 0), boundaries.width, boundaries.height);\r\n        this.ensureRangeInSizeLimits(targetRange);\r\n    }\r\n    ensureRangeInSizeLimits(range) {\r\n        if (range.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n    }\r\n    isThereSomethingToUndo() {\r\n        return !this.undoRedo.isUndoStackEmpty();\r\n    }\r\n    isThereSomethingToRedo() {\r\n        return !this.undoRedo.isRedoStackEmpty();\r\n    }\r\n    getAndClearContentChanges() {\r\n        return this.operations.getAndClearContentChanges();\r\n    }\r\n    ensureScopeIdIsValid(scopeId) {\r\n        if (scopeId !== undefined && !this.sheetMapping.hasSheetWithId(scopeId)) {\r\n            throw new NoSheetWithIdError(scopeId);\r\n        }\r\n    }\r\n    validateRowOrColumnMapping(sheetId, rowMapping, rowOrColumn) {\r\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\r\n        const sources = rowMapping.map(([a, _]) => a).sort((a, b) => a - b);\r\n        const targets = rowMapping.map(([_, b]) => b).sort((a, b) => a - b);\r\n        for (let i = 0; i < sources.length; i++) {\r\n            if (!isNonnegativeInteger(sources[i]) || sources[i] >= limit) {\r\n                throw new InvalidArgumentsError(`${rowOrColumn} numbers to be nonnegative integers and less than sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\r\n            }\r\n            if (sources[i] === sources[i + 1]) {\r\n                throw new InvalidArgumentsError(`source ${rowOrColumn} numbers to be unique.`);\r\n            }\r\n            if (sources[i] !== targets[i]) {\r\n                throw new InvalidArgumentsError(`target ${rowOrColumn} numbers to be permutation of source ${rowOrColumn} numbers.`);\r\n            }\r\n        }\r\n    }\r\n    ensureNamedExpressionNameIsValid(expressionName, sheetId) {\r\n        if (!this.namedExpressions.isNameValid(expressionName)) {\r\n            throw new NamedExpressionNameIsInvalidError(expressionName);\r\n        }\r\n        if (!this.namedExpressions.isNameAvailable(expressionName, sheetId)) {\r\n            throw new NamedExpressionNameIsAlreadyTakenError(expressionName);\r\n        }\r\n    }\r\n    ensureNamedExpressionIsValid(expression) {\r\n        const parsedExpression = this.cellContentParser.parse(expression);\r\n        if (parsedExpression instanceof CellContent.Formula) {\r\n            const parsingResult = this.parser.parse(parsedExpression.formula, simpleCellAddress(-1, 0, 0));\r\n            if (doesContainRelativeReferences(parsingResult.ast)) {\r\n                throw new NoRelativeAddressesAllowedError();\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction isPositiveInteger(x) {\r\n    return Number.isInteger(x) && x > 0;\r\n}\r\nfunction isNonnegativeInteger(x) {\r\n    return Number.isInteger(x) && x >= 0;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from './Cell';\r\nimport { AstNodeType } from './parser';\r\nimport { CELL_REFERENCE_PATTERN, NAMED_EXPRESSION_PATTERN, R1C1_CELL_REFERENCE_PATTERN } from './parser/parser-consts';\r\nexport class InternalNamedExpression {\r\n    constructor(displayName, address, added, options) {\r\n        this.displayName = displayName;\r\n        this.address = address;\r\n        this.added = added;\r\n        this.options = options;\r\n    }\r\n    normalizeExpressionName() {\r\n        return this.displayName.toLowerCase();\r\n    }\r\n    copy() {\r\n        return new InternalNamedExpression(this.displayName, this.address, this.added, this.options);\r\n    }\r\n}\r\nclass WorkbookStore {\r\n    constructor() {\r\n        this.mapping = new Map();\r\n    }\r\n    has(expressionName) {\r\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\r\n    }\r\n    isNameAvailable(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        return !(namedExpression && namedExpression.added);\r\n    }\r\n    add(namedExpression) {\r\n        this.mapping.set(namedExpression.normalizeExpressionName(), namedExpression);\r\n    }\r\n    get(expressionName) {\r\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\r\n    }\r\n    getExisting(expressionName) {\r\n        const namedExpression = this.mapping.get(this.normalizeExpressionName(expressionName));\r\n        if (namedExpression && namedExpression.added) {\r\n            return namedExpression;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    remove(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        if (namedExpression) {\r\n            namedExpression.added = false;\r\n        }\r\n    }\r\n    getAllNamedExpressions() {\r\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\r\n    }\r\n    normalizeExpressionName(expressionName) {\r\n        return expressionName.toLowerCase();\r\n    }\r\n}\r\nclass WorksheetStore {\r\n    constructor() {\r\n        this.mapping = new Map();\r\n    }\r\n    add(namedExpression) {\r\n        this.mapping.set(this.normalizeExpressionName(namedExpression.displayName), namedExpression);\r\n    }\r\n    get(expressionName) {\r\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\r\n    }\r\n    has(expressionName) {\r\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\r\n    }\r\n    getAllNamedExpressions() {\r\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\r\n    }\r\n    isNameAvailable(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        return !this.mapping.has(normalizedExpressionName);\r\n    }\r\n    remove(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        if (namedExpression) {\r\n            this.mapping.delete(normalizedExpressionName);\r\n        }\r\n    }\r\n    normalizeExpressionName(expressionName) {\r\n        return expressionName.toLowerCase();\r\n    }\r\n}\r\nexport class NamedExpressions {\r\n    constructor() {\r\n        this.nextNamedExpressionRow = 0;\r\n        this.workbookStore = new WorkbookStore();\r\n        this.worksheetStores = new Map();\r\n        this.addressCache = new Map();\r\n    }\r\n    isNameAvailable(expressionName, sheetId) {\r\n        var _a, _b;\r\n        if (sheetId === undefined) {\r\n            return this.workbookStore.isNameAvailable(expressionName);\r\n        }\r\n        else {\r\n            return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.isNameAvailable(expressionName)) !== null && _b !== void 0 ? _b : true;\r\n        }\r\n    }\r\n    namedExpressionInAddress(row) {\r\n        const namedExpression = this.addressCache.get(row);\r\n        if (namedExpression && namedExpression.added) {\r\n            return namedExpression;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    namedExpressionForScope(expressionName, sheetId) {\r\n        var _a;\r\n        if (sheetId === undefined) {\r\n            return this.workbookStore.getExisting(expressionName);\r\n        }\r\n        else {\r\n            return (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName);\r\n        }\r\n    }\r\n    nearestNamedExpression(expressionName, sheetId) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName)) !== null && _b !== void 0 ? _b : this.workbookStore.getExisting(expressionName);\r\n    }\r\n    isExpressionInScope(expressionName, sheetId) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.has(expressionName)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /**\r\n     * Checks the validity of a named-expression's name.\r\n     *\r\n     * The name:\r\n     * - Must start with a Unicode letter or with an underscore (`_`).\r\n     * - Can contain only Unicode letters, numbers, underscores, and periods (`.`).\r\n     * - Can't be the same as any possible reference in the A1 notation (`[A-Za-z]+[0-9]+`).\r\n     * - Can't be the same as any possible reference in the R1C1 notation (`[rR][0-9]*[cC][0-9]*`).\r\n     *\r\n     * The naming rules follow the [OpenDocument](https://docs.oasis-open.org/office/OpenDocument/v1.3/os/part4-formula/OpenDocument-v1.3-os-part4-formula.html#__RefHeading__1017964_715980110) standard.\r\n     */\r\n    isNameValid(expressionName) {\r\n        const a1CellRefRegexp = new RegExp(`^${CELL_REFERENCE_PATTERN}$`);\r\n        const r1c1CellRefRegexp = new RegExp(`^${R1C1_CELL_REFERENCE_PATTERN}$`);\r\n        const namedExpRegexp = new RegExp(`^${NAMED_EXPRESSION_PATTERN}$`);\r\n        if (a1CellRefRegexp.test(expressionName) || r1c1CellRefRegexp.test(expressionName)) {\r\n            return false;\r\n        }\r\n        return namedExpRegexp.test(expressionName);\r\n    }\r\n    addNamedExpression(expressionName, sheetId, options) {\r\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\r\n        let namedExpression = store.get(expressionName);\r\n        if (namedExpression !== undefined) {\r\n            namedExpression.added = true;\r\n            namedExpression.displayName = expressionName;\r\n            namedExpression.options = options;\r\n        }\r\n        else {\r\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), true, options);\r\n            store.add(namedExpression);\r\n        }\r\n        this.addressCache.set(namedExpression.address.row, namedExpression);\r\n        return namedExpression;\r\n    }\r\n    restoreNamedExpression(namedExpression, sheetId) {\r\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\r\n        namedExpression.added = true;\r\n        store.add(namedExpression);\r\n        this.addressCache.set(namedExpression.address.row, namedExpression);\r\n        return namedExpression;\r\n    }\r\n    namedExpressionOrPlaceholder(expressionName, sheetId) {\r\n        var _a;\r\n        return (_a = this.worksheetStoreOrCreate(sheetId).get(expressionName)) !== null && _a !== void 0 ? _a : this.workbookNamedExpressionOrPlaceholder(expressionName);\r\n    }\r\n    workbookNamedExpressionOrPlaceholder(expressionName) {\r\n        let namedExpression = this.workbookStore.get(expressionName);\r\n        if (namedExpression === undefined) {\r\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), false);\r\n            this.workbookStore.add(namedExpression);\r\n        }\r\n        return namedExpression;\r\n    }\r\n    remove(expressionName, sheetId) {\r\n        let store;\r\n        if (sheetId === undefined) {\r\n            store = this.workbookStore;\r\n        }\r\n        else {\r\n            store = this.worksheetStore(sheetId);\r\n        }\r\n        const namedExpression = store === null || store === void 0 ? void 0 : store.get(expressionName);\r\n        if (store === undefined || namedExpression === undefined || !namedExpression.added) {\r\n            throw Error('Named expression does not exist');\r\n        }\r\n        store.remove(expressionName);\r\n        if (store instanceof WorksheetStore && store.mapping.size === 0) {\r\n            this.worksheetStores.delete(sheetId);\r\n        }\r\n        this.addressCache.delete(namedExpression.address.row);\r\n    }\r\n    getAllNamedExpressionsNamesInScope(sheetId) {\r\n        return this.getAllNamedExpressions().filter(({ scope }) => scope === sheetId).map((ne) => ne.expression.displayName);\r\n    }\r\n    getAllNamedExpressionsNames() {\r\n        return this.getAllNamedExpressions().map((ne) => ne.expression.displayName);\r\n    }\r\n    getAllNamedExpressions() {\r\n        const storedNamedExpressions = [];\r\n        this.workbookStore.getAllNamedExpressions().forEach(expr => {\r\n            storedNamedExpressions.push({\r\n                expression: expr,\r\n                scope: undefined\r\n            });\r\n        });\r\n        this.worksheetStores.forEach((store, sheetNum) => {\r\n            store.getAllNamedExpressions().forEach(expr => {\r\n                storedNamedExpressions.push({\r\n                    expression: expr,\r\n                    scope: sheetNum\r\n                });\r\n            });\r\n        });\r\n        return storedNamedExpressions;\r\n    }\r\n    getAllNamedExpressionsForScope(scope) {\r\n        var _a, _b;\r\n        if (scope === undefined) {\r\n            return this.workbookStore.getAllNamedExpressions();\r\n        }\r\n        else {\r\n            return (_b = (_a = this.worksheetStores.get(scope)) === null || _a === void 0 ? void 0 : _a.getAllNamedExpressions()) !== null && _b !== void 0 ? _b : [];\r\n        }\r\n    }\r\n    worksheetStoreOrCreate(sheetId) {\r\n        let store = this.worksheetStores.get(sheetId);\r\n        if (!store) {\r\n            store = new WorksheetStore();\r\n            this.worksheetStores.set(sheetId, store);\r\n        }\r\n        return store;\r\n    }\r\n    worksheetStore(sheetId) {\r\n        return this.worksheetStores.get(sheetId);\r\n    }\r\n    nextAddress() {\r\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow++);\r\n    }\r\n}\r\nNamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS = -1;\r\nexport const doesContainRelativeReferences = (ast) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            return false;\r\n        case AstNodeType.CELL_REFERENCE:\r\n            return !ast.reference.isAbsolute();\r\n        case AstNodeType.CELL_RANGE:\r\n        case AstNodeType.COLUMN_RANGE:\r\n        case AstNodeType.ROW_RANGE:\r\n            return !ast.start.isAbsolute();\r\n        case AstNodeType.NAMED_EXPRESSION:\r\n            return false;\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            return doesContainRelativeReferences(ast.value);\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            return doesContainRelativeReferences(ast.left) || doesContainRelativeReferences(ast.right);\r\n        case AstNodeType.PARENTHESIS:\r\n            return doesContainRelativeReferences(ast.expression);\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            return ast.args.some((arg) => doesContainRelativeReferences(arg));\r\n        }\r\n        case AstNodeType.ARRAY: {\r\n            return ast.args.some(row => row.some(arg => doesContainRelativeReferences(arg)));\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { absolutizeDependencies, filterDependenciesOutOfScope } from './absolutizeDependencies';\r\nimport { ArraySize } from './ArraySize';\r\nimport { equalSimpleCellAddress, invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { ClipboardCellType } from './ClipboardOperations';\r\nimport { ContentChanges } from './ContentChanges';\r\nimport { ArrayVertex, EmptyCellVertex, FormulaCellVertex, ParsingErrorVertex, SparseStrategy, ValueCellVertex } from './DependencyGraph';\r\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\r\nimport { AddColumnsTransformer } from './dependencyTransformers/AddColumnsTransformer';\r\nimport { AddRowsTransformer } from './dependencyTransformers/AddRowsTransformer';\r\nimport { CleanOutOfScopeDependenciesTransformer } from './dependencyTransformers/CleanOutOfScopeDependenciesTransformer';\r\nimport { MoveCellsTransformer } from './dependencyTransformers/MoveCellsTransformer';\r\nimport { RemoveColumnsTransformer } from './dependencyTransformers/RemoveColumnsTransformer';\r\nimport { RemoveRowsTransformer } from './dependencyTransformers/RemoveRowsTransformer';\r\nimport { RemoveSheetTransformer } from './dependencyTransformers/RemoveSheetTransformer';\r\nimport { InvalidArgumentsError, NamedExpressionDoesNotExistError, NoRelativeAddressesAllowedError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError } from './errors';\r\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\r\nimport { doesContainRelativeReferences, NamedExpressions } from './NamedExpressions';\r\nimport { NamedExpressionDependency } from './parser';\r\nimport { findBoundaries } from './Sheet';\r\nimport { ColumnsSpan, RowsSpan } from './Span';\r\nimport { StatType } from './statistics';\r\nexport class RemoveRowsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeRemovedIndexes(this.indexes);\r\n    }\r\n    rowsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class AddRowsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeAddedIndexes(this.indexes);\r\n    }\r\n    rowsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class AddColumnsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeAddedIndexes(this.indexes);\r\n    }\r\n    columnsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class RemoveColumnsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeRemovedIndexes(this.indexes);\r\n    }\r\n    columnsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class Operations {\r\n    constructor(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.cellContentParser = cellContentParser;\r\n        this.parser = parser;\r\n        this.stats = stats;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.namedExpressions = namedExpressions;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.changes = ContentChanges.empty();\r\n        this.allocateNamedExpressionAddressSpace();\r\n        this.maxColumns = config.maxColumns;\r\n        this.maxRows = config.maxRows;\r\n    }\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    get addressMapping() {\r\n        return this.dependencyGraph.addressMapping;\r\n    }\r\n    removeRows(cmd) {\r\n        const rowsRemovals = [];\r\n        for (const rowsToRemove of cmd.rowsSpans()) {\r\n            const rowsRemoval = this.doRemoveRows(rowsToRemove);\r\n            if (rowsRemoval) {\r\n                rowsRemovals.push(rowsRemoval);\r\n            }\r\n        }\r\n        return rowsRemovals;\r\n    }\r\n    addRows(cmd) {\r\n        for (const addedRows of cmd.rowsSpans()) {\r\n            this.doAddRows(addedRows);\r\n        }\r\n    }\r\n    addColumns(cmd) {\r\n        for (const addedColumns of cmd.columnsSpans()) {\r\n            this.doAddColumns(addedColumns);\r\n        }\r\n    }\r\n    removeColumns(cmd) {\r\n        const columnsRemovals = [];\r\n        for (const columnsToRemove of cmd.columnsSpans()) {\r\n            const columnsRemoval = this.doRemoveColumns(columnsToRemove);\r\n            if (columnsRemoval) {\r\n                columnsRemovals.push(columnsRemoval);\r\n            }\r\n        }\r\n        return columnsRemovals;\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.dependencyGraph.removeSheet(sheetId);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveSheetTransformer(sheetId);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.sheetMapping.removeSheet(sheetId);\r\n        this.columnSearch.removeSheet(sheetId);\r\n        const scopedNamedExpressions = this.namedExpressions.getAllNamedExpressionsForScope(sheetId).map((namedexpression) => this.removeNamedExpression(namedexpression.normalizeExpressionName(), sheetId));\r\n        return { version: version, scopedNamedExpressions };\r\n    }\r\n    removeSheetByName(sheetName) {\r\n        const sheetId = this.sheetMapping.fetch(sheetName);\r\n        return this.removeSheet(sheetId);\r\n    }\r\n    clearSheet(sheetId) {\r\n        this.dependencyGraph.clearSheet(sheetId);\r\n        this.columnSearch.removeSheet(sheetId);\r\n    }\r\n    addSheet(name) {\r\n        const sheetId = this.sheetMapping.addSheet(name);\r\n        const sheet = [];\r\n        this.dependencyGraph.addressMapping.autoAddSheet(sheetId, sheet, findBoundaries(sheet));\r\n        return this.sheetMapping.fetchDisplayName(sheetId);\r\n    }\r\n    renameSheet(sheetId, newName) {\r\n        return this.sheetMapping.renameSheet(sheetId, newName);\r\n    }\r\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        const rowsToAdd = RowsSpan.fromNumberOfRows(sheet, targetRow, numberOfRows);\r\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\r\n        this.doAddRows(rowsToAdd);\r\n        if (targetRow < startRow) {\r\n            startRow += numberOfRows;\r\n        }\r\n        const startAddress = simpleCellAddress(sheet, 0, startRow);\r\n        const targetAddress = simpleCellAddress(sheet, 0, targetRow);\r\n        this.moveCells(startAddress, Number.POSITIVE_INFINITY, numberOfRows, targetAddress);\r\n        const rowsToRemove = RowsSpan.fromNumberOfRows(sheet, startRow, numberOfRows);\r\n        this.doRemoveRows(rowsToRemove);\r\n        return this.lazilyTransformingAstService.commitCombinedMode();\r\n    }\r\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        const columnsToAdd = ColumnsSpan.fromNumberOfColumns(sheet, targetColumn, numberOfColumns);\r\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\r\n        this.doAddColumns(columnsToAdd);\r\n        if (targetColumn < startColumn) {\r\n            startColumn += numberOfColumns;\r\n        }\r\n        const startAddress = simpleCellAddress(sheet, startColumn, 0);\r\n        const targetAddress = simpleCellAddress(sheet, targetColumn, 0);\r\n        this.moveCells(startAddress, numberOfColumns, Number.POSITIVE_INFINITY, targetAddress);\r\n        const columnsToRemove = ColumnsSpan.fromNumberOfColumns(sheet, startColumn, numberOfColumns);\r\n        this.doRemoveColumns(columnsToRemove);\r\n        return this.lazilyTransformingAstService.commitCombinedMode();\r\n    }\r\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        this.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        const toRight = destinationLeftCorner.col - sourceLeftCorner.col;\r\n        const toBottom = destinationLeftCorner.row - sourceLeftCorner.row;\r\n        const toSheet = destinationLeftCorner.sheet;\r\n        const currentDataAtTarget = this.getRangeClipboardCells(targetRange);\r\n        const valuesToRemove = this.dependencyGraph.rawValuesFromRange(targetRange);\r\n        this.columnSearch.removeValues(valuesToRemove);\r\n        const valuesToMove = this.dependencyGraph.rawValuesFromRange(sourceRange);\r\n        this.columnSearch.moveValues(valuesToMove, toRight, toBottom, toSheet);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.dependencyGraph.moveCells(sourceRange, toRight, toBottom, toSheet);\r\n        const addedGlobalNamedExpressions = this.updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        return {\r\n            version: version,\r\n            overwrittenCellsData: currentDataAtTarget,\r\n            addedGlobalNamedExpressions: addedGlobalNamedExpressions\r\n        };\r\n    }\r\n    setRowOrder(sheetId, rowMapping) {\r\n        const buffer = [];\r\n        let oldContent = [];\r\n        for (const [source, target] of rowMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\r\n                const row = this.getRangeClipboardCells(rowRange);\r\n                oldContent = oldContent.concat(row);\r\n                buffer.push(row.map(([{ sheet, col }, cell]) => [{ sheet, col, row: target }, cell]));\r\n            }\r\n        }\r\n        buffer.forEach(row => this.restoreClipboardCells(sheetId, row.values()));\r\n        return oldContent;\r\n    }\r\n    setColumnOrder(sheetId, columnMapping) {\r\n        const buffer = [];\r\n        let oldContent = [];\r\n        for (const [source, target] of columnMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\r\n                const column = this.getRangeClipboardCells(rowRange);\r\n                oldContent = oldContent.concat(column);\r\n                buffer.push(column.map(([{ sheet, col: _col, row }, cell]) => [{ sheet, col: target, row }, cell]));\r\n            }\r\n        }\r\n        buffer.forEach(column => this.restoreClipboardCells(sheetId, column.values()));\r\n        return oldContent;\r\n    }\r\n    addNamedExpression(expressionName, expression, sheetId, options) {\r\n        const namedExpression = this.namedExpressions.addNamedExpression(expressionName, sheetId, options);\r\n        this.storeNamedExpressionInCell(namedExpression.address, expression);\r\n        this.adjustNamedExpressionEdges(namedExpression, expressionName, sheetId);\r\n    }\r\n    restoreNamedExpression(namedExpression, content, sheetId) {\r\n        const expressionName = namedExpression.displayName;\r\n        this.restoreCell(namedExpression.address, content);\r\n        const restoredNamedExpression = this.namedExpressions.restoreNamedExpression(namedExpression, sheetId);\r\n        this.adjustNamedExpressionEdges(restoredNamedExpression, expressionName, sheetId);\r\n    }\r\n    changeNamedExpressionExpression(expressionName, newExpression, sheetId, options) {\r\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\r\n        if (!namedExpression) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        const oldNamedExpression = namedExpression.copy();\r\n        namedExpression.options = options;\r\n        const content = this.getClipboardCell(namedExpression.address);\r\n        this.storeNamedExpressionInCell(namedExpression.address, newExpression);\r\n        return [oldNamedExpression, content];\r\n    }\r\n    removeNamedExpression(expressionName, sheetId) {\r\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\r\n        if (!namedExpression) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        this.namedExpressions.remove(namedExpression.displayName, sheetId);\r\n        const content = this.getClipboardCell(namedExpression.address);\r\n        if (sheetId !== undefined) {\r\n            const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\r\n            this.dependencyGraph.exchangeNode(namedExpression.address, globalNamedExpression.address);\r\n        }\r\n        else {\r\n            this.dependencyGraph.setCellEmpty(namedExpression.address);\r\n        }\r\n        return [\r\n            namedExpression,\r\n            content\r\n        ];\r\n    }\r\n    ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        if (invalidSimpleCellAddress(sourceLeftCorner) ||\r\n            !((isPositiveInteger(width) && isPositiveInteger(height)) || isRowOrColumnRange(sourceLeftCorner, width, height)) ||\r\n            invalidSimpleCellAddress(destinationLeftCorner) ||\r\n            !this.sheetMapping.hasSheetWithId(sourceLeftCorner.sheet) ||\r\n            !this.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\r\n            throw new InvalidArgumentsError('a valid range of cells to move.');\r\n        }\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        if (targetRange.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(targetRange)) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    restoreClipboardCells(sourceSheetId, cells) {\r\n        const addedNamedExpressions = [];\r\n        for (const [address, clipboardCell] of cells) {\r\n            this.restoreCell(address, clipboardCell);\r\n            if (clipboardCell.type === ClipboardCellType.FORMULA) {\r\n                const { dependencies } = this.parser.fetchCachedResult(clipboardCell.hash);\r\n                addedNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceSheetId, address, dependencies));\r\n            }\r\n        }\r\n        return addedNamedExpressions;\r\n    }\r\n    restoreCell(address, clipboardCell) {\r\n        switch (clipboardCell.type) {\r\n            case ClipboardCellType.VALUE: {\r\n                this.setValueToCell(clipboardCell, address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.FORMULA: {\r\n                this.setFormulaToCellFromCache(clipboardCell.hash, address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.EMPTY: {\r\n                this.setCellEmpty(address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.PARSING_ERROR: {\r\n                this.setParsingErrorToCell(clipboardCell.rawInput, clipboardCell.errors, address);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    getOldContent(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex === undefined || vertex instanceof EmptyCellVertex) {\r\n            return [address, { type: ClipboardCellType.EMPTY }];\r\n        }\r\n        else if (vertex instanceof ValueCellVertex) {\r\n            return [address, Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues())];\r\n        }\r\n        else if (vertex instanceof FormulaVertex) {\r\n            return [vertex.getAddress(this.lazilyTransformingAstService), {\r\n                    type: ClipboardCellType.FORMULA,\r\n                    hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\r\n                }];\r\n        }\r\n        else if (vertex instanceof ParsingErrorVertex) {\r\n            return [address, { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors }];\r\n        }\r\n        throw Error('Trying to copy unsupported type');\r\n    }\r\n    getClipboardCell(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex === undefined || vertex instanceof EmptyCellVertex) {\r\n            return { type: ClipboardCellType.EMPTY };\r\n        }\r\n        else if (vertex instanceof ValueCellVertex) {\r\n            return Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues());\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            const val = vertex.getArrayCellValue(address);\r\n            if (val === EmptyValue) {\r\n                return { type: ClipboardCellType.EMPTY };\r\n            }\r\n            return { type: ClipboardCellType.VALUE, parsedValue: val, rawValue: vertex.getArrayCellRawValue(address) };\r\n        }\r\n        else if (vertex instanceof FormulaCellVertex) {\r\n            return {\r\n                type: ClipboardCellType.FORMULA,\r\n                hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\r\n            };\r\n        }\r\n        else if (vertex instanceof ParsingErrorVertex) {\r\n            return { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors };\r\n        }\r\n        throw Error('Trying to copy unsupported type');\r\n    }\r\n    getSheetClipboardCells(sheet) {\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const arr = new Array(sheetHeight);\r\n        for (let i = 0; i < sheetHeight; i++) {\r\n            arr[i] = new Array(sheetWidth);\r\n            for (let j = 0; j < sheetWidth; j++) {\r\n                const address = simpleCellAddress(sheet, j, i);\r\n                arr[i][j] = this.getClipboardCell(address);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    getRangeClipboardCells(range) {\r\n        const result = [];\r\n        for (const address of range.addresses(this.dependencyGraph)) {\r\n            result.push([address, this.getClipboardCell(address)]);\r\n        }\r\n        return result;\r\n    }\r\n    setCellContent(address, newCellContent) {\r\n        const parsedCellContent = this.cellContentParser.parse(newCellContent);\r\n        const oldContent = this.getOldContent(address);\r\n        if (parsedCellContent instanceof CellContent.Formula) {\r\n            const parserResult = this.parser.parse(parsedCellContent.formula, address);\r\n            const { ast, errors } = parserResult;\r\n            if (errors.length > 0) {\r\n                this.setParsingErrorToCell(parsedCellContent.formula, errors, address);\r\n            }\r\n            else {\r\n                const size = this.arraySizePredictor.checkArraySize(ast, address);\r\n                this.setFormulaToCell(address, size, parserResult);\r\n            }\r\n        }\r\n        else if (parsedCellContent instanceof CellContent.Empty) {\r\n            this.setCellEmpty(address);\r\n        }\r\n        else {\r\n            this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: newCellContent }, address);\r\n        }\r\n        return oldContent;\r\n    }\r\n    setSheetContent(sheetId, newSheetContent) {\r\n        this.clearSheet(sheetId);\r\n        for (let i = 0; i < newSheetContent.length; i++) {\r\n            for (let j = 0; j < newSheetContent[i].length; j++) {\r\n                const address = simpleCellAddress(sheetId, j, i);\r\n                this.setCellContent(address, newSheetContent[i][j]);\r\n            }\r\n        }\r\n    }\r\n    setParsingErrorToCell(rawInput, errors, address) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const vertex = new ParsingErrorVertex(errors, rawInput);\r\n        const arrayChanges = this.dependencyGraph.setParsingErrorToCell(address, vertex);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(vertex.getCellValue(), address);\r\n    }\r\n    setFormulaToCell(address, size, { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies }) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), size, hasVolatileFunction, hasStructuralChangeFunction);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n    }\r\n    setValueToCell(value, address) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setValueToCell(address, value);\r\n        this.columnSearch.change(getRawValue(oldValue), getRawValue(value.parsedValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges().filter(change => !equalSimpleCellAddress(change.address, address)));\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(value.parsedValue, address);\r\n    }\r\n    setCellEmpty(address) {\r\n        if (this.dependencyGraph.isArrayInternalCell(address)) {\r\n            return;\r\n        }\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setCellEmpty(address);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(EmptyValue, address);\r\n    }\r\n    setFormulaToCellFromCache(formulaHash, address) {\r\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.fetchCachedResult(formulaHash);\r\n        const absoluteDependencies = absolutizeDependencies(dependencies, address);\r\n        const [cleanedAst] = new CleanOutOfScopeDependenciesTransformer(address.sheet).transformSingleAst(ast, address);\r\n        this.parser.rememberNewAst(cleanedAst);\r\n        const cleanedDependencies = filterDependenciesOutOfScope(absoluteDependencies);\r\n        const size = this.arraySizePredictor.checkArraySize(ast, address);\r\n        this.dependencyGraph.setFormulaToCell(address, cleanedAst, cleanedDependencies, size, hasVolatileFunction, hasStructuralChangeFunction);\r\n    }\r\n    /**\r\n     * Returns true if row number is outside of given sheet.\r\n     *\r\n     * @param row - row number\r\n     * @param sheet - sheet id number\r\n     */\r\n    rowEffectivelyNotInSheet(row, sheet) {\r\n        const height = this.dependencyGraph.addressMapping.getHeight(sheet);\r\n        return row >= height;\r\n    }\r\n    getAndClearContentChanges() {\r\n        const changes = this.changes;\r\n        this.changes = ContentChanges.empty();\r\n        return changes;\r\n    }\r\n    forceApplyPostponedTransformations() {\r\n        this.dependencyGraph.forceApplyPostponedTransformations();\r\n    }\r\n    /**\r\n     * Removes multiple rows from sheet. </br>\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id from which rows will be removed\r\n     * @param rowStart - number of the first row to be deleted\r\n     * @param rowEnd - number of the last row to be deleted\r\n     */\r\n    doRemoveRows(rowsToRemove) {\r\n        if (this.rowEffectivelyNotInSheet(rowsToRemove.rowStart, rowsToRemove.sheet)) {\r\n            return;\r\n        }\r\n        const removedCells = [];\r\n        for (const [address] of this.dependencyGraph.entriesFromRowsSpan(rowsToRemove)) {\r\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.removeRows(rowsToRemove);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveRowsTransformer(rowsToRemove);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n        return { version: version, removedCells, rowFrom: rowsToRemove.rowStart, rowCount: rowsToRemove.numberOfRows };\r\n    }\r\n    /**\r\n     * Removes multiple columns from sheet. </br>\r\n     * Does nothing if columns are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id from which columns will be removed\r\n     * @param columnStart - number of the first column to be deleted\r\n     * @param columnEnd - number of the last row to be deleted\r\n     */\r\n    doRemoveColumns(columnsToRemove) {\r\n        if (this.columnEffectivelyNotInSheet(columnsToRemove.columnStart, columnsToRemove.sheet)) {\r\n            return;\r\n        }\r\n        const removedCells = [];\r\n        for (const [address] of this.dependencyGraph.entriesFromColumnsSpan(columnsToRemove)) {\r\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.removeColumns(columnsToRemove);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        this.columnSearch.removeColumns(columnsToRemove);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveColumnsTransformer(columnsToRemove);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n        return {\r\n            version: version,\r\n            removedCells,\r\n            columnFrom: columnsToRemove.columnStart,\r\n            columnCount: columnsToRemove.numberOfColumns\r\n        };\r\n    }\r\n    /**\r\n     * Add multiple rows to sheet. </br>\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id in which rows will be added\r\n     * @param row - row number above which the rows will be added\r\n     * @param numberOfRowsToAdd - number of rows to add\r\n     */\r\n    doAddRows(addedRows) {\r\n        if (this.rowEffectivelyNotInSheet(addedRows.rowStart, addedRows.sheet)) {\r\n            return;\r\n        }\r\n        const { affectedArrays } = this.dependencyGraph.addRows(addedRows);\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new AddRowsTransformer(addedRows);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n    }\r\n    rewriteAffectedArrays(affectedArrays) {\r\n        for (const arrayVertex of affectedArrays.values()) {\r\n            if (arrayVertex.array.size.isRef) {\r\n                continue;\r\n            }\r\n            const ast = arrayVertex.getFormula(this.lazilyTransformingAstService);\r\n            const address = arrayVertex.getAddress(this.lazilyTransformingAstService);\r\n            const hash = this.parser.computeHashFromAst(ast);\r\n            this.setFormulaToCellFromCache(hash, address);\r\n        }\r\n    }\r\n    /**\r\n     * Add multiple columns to sheet </br>\r\n     * Does nothing if columns are outside of effective sheet size\r\n     *\r\n     * @param sheet - sheet id in which columns will be added\r\n     * @param column - column number above which the columns will be added\r\n     * @param numberOfColumns - number of columns to add\r\n     */\r\n    doAddColumns(addedColumns) {\r\n        if (this.columnEffectivelyNotInSheet(addedColumns.columnStart, addedColumns.sheet)) {\r\n            return;\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.addColumns(addedColumns);\r\n        this.columnSearch.addColumns(addedColumns);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new AddColumnsTransformer(addedColumns);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n    }\r\n    /**\r\n     * Returns true if row number is outside of given sheet.\r\n     *\r\n     * @param column - row number\r\n     * @param sheet - sheet id number\r\n     */\r\n    columnEffectivelyNotInSheet(column, sheet) {\r\n        const width = this.dependencyGraph.addressMapping.getWidth(sheet);\r\n        return column >= width;\r\n    }\r\n    adjustNamedExpressionEdges(namedExpression, expressionName, sheetId) {\r\n        if (sheetId === undefined) {\r\n            return;\r\n        }\r\n        const localVertex = this.dependencyGraph.fetchCellOrCreateEmpty(namedExpression.address);\r\n        const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\r\n        const globalVertex = this.dependencyGraph.fetchCellOrCreateEmpty(globalNamedExpression.address);\r\n        for (const adjacentNode of this.dependencyGraph.graph.adjacentNodes(globalVertex)) {\r\n            if (adjacentNode instanceof FormulaCellVertex && adjacentNode.getAddress(this.lazilyTransformingAstService).sheet === sheetId) {\r\n                const ast = adjacentNode.getFormula(this.lazilyTransformingAstService);\r\n                const formulaAddress = adjacentNode.getAddress(this.lazilyTransformingAstService);\r\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\r\n                for (const dependency of absolutizeDependencies(dependencies, formulaAddress)) {\r\n                    if (dependency instanceof NamedExpressionDependency && dependency.name.toLowerCase() === namedExpression.displayName.toLowerCase()) {\r\n                        this.dependencyGraph.graph.removeEdge(globalVertex, adjacentNode);\r\n                        this.dependencyGraph.graph.addEdge(localVertex, adjacentNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    storeNamedExpressionInCell(address, expression) {\r\n        const parsedCellContent = this.cellContentParser.parse(expression);\r\n        if (parsedCellContent instanceof CellContent.Formula) {\r\n            const parsingResult = this.parser.parse(parsedCellContent.formula, simpleCellAddress(-1, 0, 0));\r\n            if (doesContainRelativeReferences(parsingResult.ast)) {\r\n                throw new NoRelativeAddressesAllowedError();\r\n            }\r\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\r\n            this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), ArraySize.scalar(), hasVolatileFunction, hasStructuralChangeFunction);\r\n        }\r\n        else if (parsedCellContent instanceof CellContent.Empty) {\r\n            this.setCellEmpty(address);\r\n        }\r\n        else {\r\n            this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: expression }, address);\r\n        }\r\n    }\r\n    updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        if (sourceLeftCorner.sheet === destinationLeftCorner.sheet) {\r\n            return [];\r\n        }\r\n        const addedGlobalNamedExpressions = [];\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        for (const formulaAddress of targetRange.addresses(this.dependencyGraph)) {\r\n            const vertex = this.addressMapping.fetchCell(formulaAddress);\r\n            if (vertex instanceof FormulaCellVertex && formulaAddress.sheet !== sourceLeftCorner.sheet) {\r\n                const ast = vertex.getFormula(this.lazilyTransformingAstService);\r\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\r\n                addedGlobalNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceLeftCorner.sheet, formulaAddress, dependencies));\r\n            }\r\n        }\r\n        return addedGlobalNamedExpressions;\r\n    }\r\n    updateNamedExpressionsForTargetAddress(sourceSheet, targetAddress, dependencies) {\r\n        if (sourceSheet === targetAddress.sheet) {\r\n            return [];\r\n        }\r\n        const addedGlobalNamedExpressions = [];\r\n        const vertex = this.addressMapping.fetchCell(targetAddress);\r\n        for (const namedExpressionDependency of absolutizeDependencies(dependencies, targetAddress)) {\r\n            if (!(namedExpressionDependency instanceof NamedExpressionDependency)) {\r\n                continue;\r\n            }\r\n            const expressionName = namedExpressionDependency.name;\r\n            const sourceVertex = this.dependencyGraph.fetchNamedExpressionVertex(expressionName, sourceSheet);\r\n            const namedExpressionInTargetScope = this.namedExpressions.isExpressionInScope(expressionName, targetAddress.sheet);\r\n            const targetScopeExpressionVertex = namedExpressionInTargetScope\r\n                ? this.dependencyGraph.fetchNamedExpressionVertex(expressionName, targetAddress.sheet)\r\n                : this.copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedGlobalNamedExpressions);\r\n            if (targetScopeExpressionVertex !== sourceVertex) {\r\n                this.dependencyGraph.graph.softRemoveEdge(sourceVertex, vertex);\r\n                this.dependencyGraph.graph.addEdge(targetScopeExpressionVertex, vertex);\r\n            }\r\n        }\r\n        return addedGlobalNamedExpressions;\r\n    }\r\n    allocateNamedExpressionAddressSpace() {\r\n        this.dependencyGraph.addressMapping.addSheet(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, new SparseStrategy(0, 0));\r\n    }\r\n    copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedNamedExpressions) {\r\n        let expression = this.namedExpressions.namedExpressionForScope(expressionName);\r\n        if (expression === undefined) {\r\n            expression = this.namedExpressions.addNamedExpression(expressionName);\r\n            addedNamedExpressions.push(expression.normalizeExpressionName());\r\n            if (sourceVertex instanceof FormulaCellVertex) {\r\n                const parsingResult = this.parser.fetchCachedResultForAst(sourceVertex.getFormula(this.lazilyTransformingAstService));\r\n                const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\r\n                this.dependencyGraph.setFormulaToCell(expression.address, ast, absolutizeDependencies(dependencies, expression.address), ArraySize.scalar(), hasVolatileFunction, hasStructuralChangeFunction);\r\n            }\r\n            else if (sourceVertex instanceof EmptyCellVertex) {\r\n                this.setCellEmpty(expression.address);\r\n            }\r\n            else if (sourceVertex instanceof ValueCellVertex) {\r\n                this.setValueToCell(sourceVertex.getValues(), expression.address);\r\n            }\r\n        }\r\n        return this.dependencyGraph.fetchCellOrCreateEmpty(expression.address);\r\n    }\r\n}\r\nexport function normalizeRemovedIndexes(indexes) {\r\n    if (indexes.length <= 1) {\r\n        return indexes;\r\n    }\r\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\r\n    /* merge overlapping and adjacent indexes */\r\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\r\n        const previous = acc[acc.length - 1];\r\n        const lastIndex = previous[0] + previous[1];\r\n        if (startIndex <= lastIndex) {\r\n            previous[1] += Math.max(0, amount - (lastIndex - startIndex));\r\n        }\r\n        else {\r\n            acc.push([startIndex, amount]);\r\n        }\r\n        return acc;\r\n    }, [sorted[0]]);\r\n    /* shift further indexes */\r\n    let shift = 0;\r\n    for (let i = 0; i < merged.length; ++i) {\r\n        merged[i][0] -= shift;\r\n        shift += merged[i][1];\r\n    }\r\n    return merged;\r\n}\r\nexport function normalizeAddedIndexes(indexes) {\r\n    if (indexes.length <= 1) {\r\n        return indexes;\r\n    }\r\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\r\n    /* merge indexes with same start */\r\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\r\n        const previous = acc[acc.length - 1];\r\n        if (startIndex === previous[0]) {\r\n            previous[1] = Math.max(previous[1], amount);\r\n        }\r\n        else {\r\n            acc.push([startIndex, amount]);\r\n        }\r\n        return acc;\r\n    }, [sorted[0]]);\r\n    /* shift further indexes */\r\n    let shift = 0;\r\n    for (let i = 0; i < merged.length; ++i) {\r\n        merged[i][0] += shift;\r\n        shift += merged[i][1];\r\n    }\r\n    return merged;\r\n}\r\nfunction isPositiveInteger(x) {\r\n    return Number.isInteger(x) && x > 0;\r\n}\r\nfunction isRowOrColumnRange(leftCorner, width, height) {\r\n    return (leftCorner.row === 0 && isPositiveInteger(width) && height === Number.POSITIVE_INFINITY)\r\n        || (leftCorner.col === 0 && isPositiveInteger(height) && width === Number.POSITIVE_INFINITY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class AddColumnsTransformer extends Transformer {\r\n    constructor(columnsSpan) {\r\n        super();\r\n        this.columnsSpan = columnsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.columnsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return false;\r\n    }\r\n    transformRowRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4 and 5\r\n        if ((absoluteDependencySheet !== this.columnsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\r\n            return false;\r\n        }\r\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n        // Case 3\r\n        if ((absoluteDependencySheet === this.columnsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\r\n            if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\r\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        // Case 2\r\n        if ((formulaAddress.sheet === this.columnsSpan.sheet)\r\n            && (absoluteDependencySheet !== this.columnsSpan.sheet)) {\r\n            if (dependencyAddress.isColumnAbsolute()) {\r\n                return false;\r\n            }\r\n            if (formulaAddress.col < this.columnsSpan.columnStart) {\r\n                return false;\r\n            }\r\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n        }\r\n        // Case 1\r\n        if (dependencyAddress.isColumnAbsolute()) {\r\n            if (dependencyAddress.col < this.columnsSpan.columnStart) { // Case Aa\r\n                return false;\r\n            }\r\n            else { // Case Ab\r\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n            }\r\n        }\r\n        else {\r\n            const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n            if (absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Raa\r\n                    return false;\r\n                }\r\n                else { // Case Rab\r\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n            else {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Rba\r\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                }\r\n                else { // Case Rbb\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\r\n            return Object.assign(Object.assign({}, address), { col: address.col + this.columnsSpan.numberOfColumns });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else if (newStart || newEnd) {\r\n            return [newStart || start, newEnd || end];\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../Cell';\r\nimport { AstNodeType, buildCellErrorAst, CellAddress, } from '../parser';\r\nexport class Transformer {\r\n    performEagerTransformations(graph, parser) {\r\n        for (const node of graph.arrayFormulaNodes()) {\r\n            const [newAst, newAddress] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\r\n            const cachedAst = parser.rememberNewAst(newAst);\r\n            node.setFormula(cachedAst);\r\n            node.setAddress(newAddress);\r\n        }\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        const newAst = this.transformAst(ast, address);\r\n        const newAddress = this.fixNodeAddress(address);\r\n        return [newAst, newAddress];\r\n    }\r\n    transformAst(ast, address) {\r\n        switch (ast.type) {\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                return this.transformCellReferenceAst(ast, address);\r\n            }\r\n            case AstNodeType.CELL_RANGE: {\r\n                return this.transformCellRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                return this.transformColumnRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                return this.transformRowRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.EMPTY:\r\n            case AstNodeType.ERROR:\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.NAMED_EXPRESSION:\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.STRING: {\r\n                return ast;\r\n            }\r\n            case AstNodeType.PERCENT_OP:\r\n            case AstNodeType.MINUS_UNARY_OP:\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                return Object.assign(Object.assign({}, ast), { value: this.transformAst(ast.value, address) });\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                return Object.assign(Object.assign({}, ast), { procedureName: ast.procedureName, args: ast.args.map((arg) => this.transformAst(arg, address)) });\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return Object.assign(Object.assign({}, ast), { expression: this.transformAst(ast.expression, address) });\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                return Object.assign(Object.assign({}, ast), { args: ast.args.map((row) => row.map(val => this.transformAst(val, address))) });\r\n            }\r\n            default: {\r\n                return Object.assign(Object.assign({}, ast), { left: this.transformAst(ast.left, address), right: this.transformAst(ast.right, address) });\r\n            }\r\n        }\r\n    }\r\n    transformCellReferenceAst(ast, formulaAddress) {\r\n        const newCellAddress = this.transformCellAddress(ast.reference, formulaAddress);\r\n        if (newCellAddress instanceof CellAddress) {\r\n            return Object.assign(Object.assign({}, ast), { reference: newCellAddress });\r\n        }\r\n        else if (newCellAddress === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformCellRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformCellRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformColumnRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformColumnRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformRowRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformRowRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class AddRowsTransformer extends Transformer {\r\n    constructor(rowsSpan) {\r\n        super();\r\n        this.rowsSpan = rowsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.rowsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return false;\r\n    }\r\n    transformColumnRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4 and 5\r\n        if ((absoluteDependencySheet !== this.rowsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\r\n            return false;\r\n        }\r\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n        // Case 3\r\n        if ((absoluteDependencySheet === this.rowsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\r\n            if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\r\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        // Case 2\r\n        if ((formulaAddress.sheet === this.rowsSpan.sheet)\r\n            && (absoluteDependencySheet !== this.rowsSpan.sheet)) {\r\n            if (dependencyAddress.isRowAbsolute()) {\r\n                return false;\r\n            }\r\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\r\n                return false;\r\n            }\r\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n        }\r\n        // Case 1\r\n        if (dependencyAddress.isRowAbsolute()) {\r\n            if (dependencyAddress.row < this.rowsSpan.rowStart) { // Case Aa\r\n                return false;\r\n            }\r\n            else { // Case Ab\r\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n            }\r\n        }\r\n        else {\r\n            if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Raa\r\n                    return false;\r\n                }\r\n                else { // Case Rab\r\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n            else {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Rba\r\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                }\r\n                else { // Case Rbb\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\r\n            return Object.assign(Object.assign({}, address), { row: address.row + this.rowsSpan.numberOfRows });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else if (newStart || newEnd) {\r\n            return [newStart || start, newEnd || end];\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class CleanOutOfScopeDependenciesTransformer extends Transformer {\r\n    constructor(sheet) {\r\n        super();\r\n        this.sheet = sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        return dependencyAddress.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../Cell';\r\nimport { CellAddress } from '../parser';\r\nimport { RowAddress } from '../parser/RowAddress';\r\nimport { Transformer } from './Transformer';\r\nexport class MoveCellsTransformer extends Transformer {\r\n    constructor(sourceRange, toRight, toBottom, toSheet) {\r\n        super();\r\n        this.sourceRange = sourceRange;\r\n        this.toRight = toRight;\r\n        this.toBottom = toBottom;\r\n        this.toSheet = toSheet;\r\n        this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\r\n    }\r\n    get sheet() {\r\n        return this.sourceRange.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        if (this.sourceRange.addressInRange(address)) {\r\n            const newAst = this.transformAst(ast, address);\r\n            return [newAst, this.fixNodeAddress(address)];\r\n        }\r\n        else {\r\n            return this.dependentFormulaTransformer.transformSingleAst(ast, address);\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        return this.transformAddress(dependencyAddress, formulaAddress);\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformAddress(dependencyAddress, formulaAddress) {\r\n        const sourceRange = this.sourceRange;\r\n        if (dependencyAddress instanceof CellAddress) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\r\n            if (sourceRange.addressInRange(absoluteDependencyAddress)) { // If dependency is internal, move only absolute dimensions\r\n                return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\r\n            }\r\n        }\r\n        return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const sourceRange = this.sourceRange;\r\n        if (start instanceof CellAddress && end instanceof CellAddress) {\r\n            const absoluteStart = start.toSimpleCellAddress(formulaAddress);\r\n            const absoluteEnd = end.toSimpleCellAddress(formulaAddress);\r\n            if (sourceRange.addressInRange(absoluteStart) && sourceRange.addressInRange(absoluteEnd)) {\r\n                return [\r\n                    start.shiftAbsoluteDimensions(this.toRight, this.toBottom),\r\n                    end.shiftAbsoluteDimensions(this.toRight, this.toBottom)\r\n                ];\r\n            }\r\n        }\r\n        return [\r\n            start.shiftRelativeDimensions(-this.toRight, -this.toBottom),\r\n            end.shiftRelativeDimensions(-this.toRight, -this.toBottom)\r\n        ];\r\n    }\r\n}\r\nexport class DependentFormulaTransformer extends Transformer {\r\n    constructor(sourceRange, toRight, toBottom, toSheet) {\r\n        super();\r\n        this.sourceRange = sourceRange;\r\n        this.toRight = toRight;\r\n        this.toBottom = toBottom;\r\n        this.toSheet = toSheet;\r\n    }\r\n    get sheet() {\r\n        return this.sourceRange.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        if (this.shouldMove(dependencyAddress, formulaAddress)) {\r\n            return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\r\n        }\r\n        return false;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    shouldMove(dependencyAddress, formulaAddress) {\r\n        if (dependencyAddress instanceof CellAddress) {\r\n            return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\r\n        }\r\n        else if (dependencyAddress instanceof RowAddress) {\r\n            return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\r\n        }\r\n        else {\r\n            return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart && newEnd) {\r\n            return [newStart, newEnd];\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveColumnsTransformer extends Transformer {\r\n    constructor(columnsSpan) {\r\n        super();\r\n        this.columnsSpan = columnsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.columnsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformRowRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4\r\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\r\n            return false;\r\n        }\r\n        // Case 3 -- removed column in same sheet where dependency is but formula in different\r\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n            if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) { // 3.ARa\r\n                return false;\r\n            }\r\n            else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) { // 3.ARb\r\n                return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n            }\r\n        }\r\n        // Case 2 -- removed column in same sheet where formula but dependency in different sheet\r\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\r\n            if (dependencyAddress.isColumnAbsolute()) { // 2.A\r\n                return false;\r\n            }\r\n            else {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // 2.Ra\r\n                    return false;\r\n                }\r\n                else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 2.Rb\r\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n        }\r\n        // Case 1 -- same sheet\r\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\r\n            if (dependencyAddress.isColumnAbsolute()) {\r\n                if (dependencyAddress.col < this.columnsSpan.columnStart) { // 1.Aa\r\n                    return false;\r\n                }\r\n                else if (dependencyAddress.col > this.columnsSpan.columnEnd) { // 1.Ab\r\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n            else {\r\n                const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n                if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) {\r\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Raa\r\n                        return false;\r\n                    }\r\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rab\r\n                        return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                    }\r\n                }\r\n                else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) {\r\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Rba\r\n                        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                    }\r\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rbb\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\r\n        return ErrorType.REF;\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\r\n            return Object.assign(Object.assign({}, address), { col: address.col - this.columnsSpan.numberOfColumns });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const startSheet = absoluteSheetReference(start, formulaAddress);\r\n        let actualStart = start;\r\n        let actualEnd = end;\r\n        if (this.columnsSpan.sheet === startSheet) {\r\n            const startSCA = start.toSimpleColumnAddress(formulaAddress);\r\n            const endSCA = end.toSimpleColumnAddress(formulaAddress);\r\n            if (this.columnsSpan.columnStart <= startSCA.col && this.columnsSpan.columnEnd >= endSCA.col) {\r\n                return ErrorType.REF;\r\n            }\r\n            if (startSCA.col >= this.columnsSpan.columnStart && startSCA.col <= this.columnsSpan.columnEnd) {\r\n                actualStart = start.shiftedByColumns(this.columnsSpan.columnEnd - startSCA.col + 1);\r\n            }\r\n            if (endSCA.col >= this.columnsSpan.columnStart && endSCA.col <= this.columnsSpan.columnEnd) {\r\n                actualEnd = end.shiftedByColumns(-(endSCA.col - this.columnsSpan.columnStart + 1));\r\n            }\r\n        }\r\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\r\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\r\n        if (newStart === false && newEnd === false) {\r\n            return [actualStart, actualEnd];\r\n        }\r\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            throw Error('Cannot happen');\r\n        }\r\n        else {\r\n            return [newStart || actualStart, newEnd || actualEnd];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveRowsTransformer extends Transformer {\r\n    constructor(rowsSpan) {\r\n        super();\r\n        this.rowsSpan = rowsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.rowsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformColumnRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4\r\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\r\n            return false;\r\n        }\r\n        // Case 3 -- removed row in same sheet where dependency is but formula in different\r\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n            if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) { // 3.ARa\r\n                return false;\r\n            }\r\n            else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) { // 3.ARb\r\n                return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n            }\r\n        }\r\n        // Case 2 -- removed row in same sheet where formula but dependency in different sheet\r\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\r\n            if (dependencyAddress.isRowAbsolute()) { // 2.A\r\n                return false;\r\n            }\r\n            else {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // 2.Ra\r\n                    return false;\r\n                }\r\n                else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 2.Rb\r\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n        }\r\n        // Case 1 -- same sheet\r\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\r\n            if (dependencyAddress.isRowAbsolute()) {\r\n                if (dependencyAddress.row < this.rowsSpan.rowStart) { // 1.Aa\r\n                    return false;\r\n                }\r\n                else if (dependencyAddress.row > this.rowsSpan.rowEnd) { // 1.Ab\r\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n            else {\r\n                const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n                if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\r\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Raa\r\n                        return false;\r\n                    }\r\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rab\r\n                        return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                    }\r\n                }\r\n                else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\r\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Rba\r\n                        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                    }\r\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rbb\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\r\n        return ErrorType.REF;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\r\n            return Object.assign(Object.assign({}, address), { row: address.row - this.rowsSpan.numberOfRows });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const startSheet = absoluteSheetReference(start, formulaAddress);\r\n        let actualStart = start;\r\n        let actualEnd = end;\r\n        if (this.rowsSpan.sheet === startSheet) {\r\n            const startSCA = start.toSimpleRowAddress(formulaAddress);\r\n            const endSCA = end.toSimpleRowAddress(formulaAddress);\r\n            if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\r\n                return ErrorType.REF;\r\n            }\r\n            if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\r\n                actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\r\n            }\r\n            if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\r\n                actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\r\n            }\r\n        }\r\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\r\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\r\n        if (newStart === false && newEnd === false) {\r\n            return [actualStart, actualEnd];\r\n        }\r\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else {\r\n            return [newStart || actualStart, newEnd || actualEnd];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveSheetTransformer extends Transformer {\r\n    constructor(sheet) {\r\n        super();\r\n        this.sheet = sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    performEagerTransformations(graph, _parser) {\r\n        for (const node of graph.arrayFormulaNodes()) {\r\n            const [newAst] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\r\n            node.setFormula(newAst);\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, _formulaAddress) {\r\n        return this.transformAddress(dependencyAddress);\r\n    }\r\n    transformCellRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformColumnRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformRowRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformAddress(address) {\r\n        if (address.sheet === this.sheet) {\r\n            return ErrorType.REF;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { InvalidArgumentsError } from './errors';\r\nexport function validateAsSheet(sheet) {\r\n    if (!Array.isArray(sheet)) {\r\n        throw new InvalidArgumentsError('an array of arrays.');\r\n    }\r\n    for (let i = 0; i < sheet.length; i++) {\r\n        if (!Array.isArray(sheet[i])) {\r\n            throw new InvalidArgumentsError('an array of arrays.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns actual width, height and fill ratio of a sheet\r\n *\r\n * @param sheet - two-dimmensional array sheet representation\r\n */\r\nexport function findBoundaries(sheet) {\r\n    let width = 0;\r\n    let height = 0;\r\n    let cellsCount = 0;\r\n    for (let currentRow = 0; currentRow < sheet.length; currentRow++) {\r\n        let currentRowWidth = 0;\r\n        for (let currentCol = 0; currentCol < sheet[currentRow].length; currentCol++) {\r\n            const currentValue = sheet[currentRow][currentCol];\r\n            if (currentValue === undefined || currentValue === null) {\r\n                continue;\r\n            }\r\n            currentRowWidth = currentCol + 1;\r\n            ++cellsCount;\r\n        }\r\n        width = Math.max(width, currentRowWidth);\r\n        if (currentRowWidth > 0) {\r\n            height = currentRow + 1;\r\n        }\r\n    }\r\n    const sheetSize = width * height;\r\n    return {\r\n        height: height,\r\n        width: width,\r\n        fill: sheetSize === 0 ? 0 : cellsCount / sheetSize,\r\n    };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { equalSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\r\nexport class BaseUndoEntry {\r\n}\r\nexport class RemoveRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(command, rowsRemovals) {\r\n        super();\r\n        this.command = command;\r\n        this.rowsRemovals = rowsRemovals;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveRows(this);\r\n    }\r\n}\r\nexport class MoveCellsUndoEntry extends BaseUndoEntry {\r\n    constructor(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\r\n        super();\r\n        this.sourceLeftCorner = sourceLeftCorner;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.destinationLeftCorner = destinationLeftCorner;\r\n        this.overwrittenCellsData = overwrittenCellsData;\r\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\r\n        this.version = version;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveCells(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveCells(this);\r\n    }\r\n}\r\nexport class AddRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(command) {\r\n        super();\r\n        this.command = command;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddRows(this);\r\n    }\r\n}\r\nexport class SetRowOrderUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, rowMapping, oldContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.rowMapping = rowMapping;\r\n        this.oldContent = oldContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetRowOrder(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetRowOrder(this);\r\n    }\r\n}\r\nexport class SetColumnOrderUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, columnMapping, oldContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.columnMapping = columnMapping;\r\n        this.oldContent = oldContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetColumnOrder(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetColumnOrder(this);\r\n    }\r\n}\r\nexport class SetSheetContentUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldSheetContent, newSheetContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n        this.newSheetContent = newSheetContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetSheetContent(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetSheetContent(this);\r\n    }\r\n}\r\nexport class MoveRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(sheet, startRow, numberOfRows, targetRow, version) {\r\n        super();\r\n        this.sheet = sheet;\r\n        this.startRow = startRow;\r\n        this.numberOfRows = numberOfRows;\r\n        this.targetRow = targetRow;\r\n        this.version = version;\r\n        this.undoStart = this.startRow < this.targetRow ? this.targetRow - this.numberOfRows : this.targetRow;\r\n        this.undoEnd = this.startRow > this.targetRow ? this.startRow + this.numberOfRows : this.startRow;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveRows(this);\r\n    }\r\n}\r\nexport class MoveColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(sheet, startColumn, numberOfColumns, targetColumn, version) {\r\n        super();\r\n        this.sheet = sheet;\r\n        this.startColumn = startColumn;\r\n        this.numberOfColumns = numberOfColumns;\r\n        this.targetColumn = targetColumn;\r\n        this.version = version;\r\n        this.undoStart = this.startColumn < this.targetColumn ? this.targetColumn - this.numberOfColumns : this.targetColumn;\r\n        this.undoEnd = this.startColumn > this.targetColumn ? this.startColumn + this.numberOfColumns : this.startColumn;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveColumns(this);\r\n    }\r\n}\r\nexport class AddColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(command) {\r\n        super();\r\n        this.command = command;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddColumns(this);\r\n    }\r\n}\r\nexport class RemoveColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(command, columnsRemovals) {\r\n        super();\r\n        this.command = command;\r\n        this.columnsRemovals = columnsRemovals;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveColumns(this);\r\n    }\r\n}\r\nexport class AddSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetName) {\r\n        super();\r\n        this.sheetName = sheetName;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddSheet(this);\r\n    }\r\n}\r\nexport class RemoveSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetName, sheetId, oldSheetContent, scopedNamedExpressions, version) {\r\n        super();\r\n        this.sheetName = sheetName;\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n        this.scopedNamedExpressions = scopedNamedExpressions;\r\n        this.version = version;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveSheet(this);\r\n    }\r\n}\r\nexport class RenameSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldName, newName) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldName = oldName;\r\n        this.newName = newName;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRenameSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRenameSheet(this);\r\n    }\r\n}\r\nexport class ClearSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldSheetContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoClearSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoClearSheet(this);\r\n    }\r\n}\r\nexport class SetCellContentsUndoEntry extends BaseUndoEntry {\r\n    constructor(cellContents) {\r\n        super();\r\n        this.cellContents = cellContents;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetCellContents(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetCellContents(this);\r\n    }\r\n}\r\nexport class PasteUndoEntry extends BaseUndoEntry {\r\n    constructor(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\r\n        super();\r\n        this.targetLeftCorner = targetLeftCorner;\r\n        this.oldContent = oldContent;\r\n        this.newContent = newContent;\r\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoPaste(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoPaste(this);\r\n    }\r\n}\r\nexport class AddNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(name, newContent, scope, options) {\r\n        super();\r\n        this.name = name;\r\n        this.newContent = newContent;\r\n        this.scope = scope;\r\n        this.options = options;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddNamedExpression(this);\r\n    }\r\n}\r\nexport class RemoveNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(namedExpression, content, scope) {\r\n        super();\r\n        this.namedExpression = namedExpression;\r\n        this.content = content;\r\n        this.scope = scope;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveNamedExpression(this);\r\n    }\r\n}\r\nexport class ChangeNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(namedExpression, newContent, oldContent, scope, options) {\r\n        super();\r\n        this.namedExpression = namedExpression;\r\n        this.newContent = newContent;\r\n        this.oldContent = oldContent;\r\n        this.scope = scope;\r\n        this.options = options;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoChangeNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoChangeNamedExpression(this);\r\n    }\r\n}\r\nexport class BatchUndoEntry extends BaseUndoEntry {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.operations = [];\r\n    }\r\n    add(operation) {\r\n        this.operations.push(operation);\r\n    }\r\n    *reversedOperations() {\r\n        for (let i = this.operations.length - 1; i >= 0; i--) {\r\n            yield this.operations[i];\r\n        }\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoBatch(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoBatch(this);\r\n    }\r\n}\r\nexport class UndoRedo {\r\n    constructor(config, operations) {\r\n        this.operations = operations;\r\n        this.oldData = new Map();\r\n        this.undoStack = [];\r\n        this.redoStack = [];\r\n        this.undoLimit = config.undoLimit;\r\n    }\r\n    saveOperation(operation) {\r\n        if (this.batchUndoEntry !== undefined) {\r\n            this.batchUndoEntry.add(operation);\r\n        }\r\n        else {\r\n            this.addUndoEntry(operation);\r\n        }\r\n    }\r\n    beginBatchMode() {\r\n        this.batchUndoEntry = new BatchUndoEntry();\r\n    }\r\n    commitBatchMode() {\r\n        if (this.batchUndoEntry === undefined) {\r\n            throw Error('Batch mode wasn\\'t started');\r\n        }\r\n        this.addUndoEntry(this.batchUndoEntry);\r\n        this.batchUndoEntry = undefined;\r\n    }\r\n    storeDataForVersion(version, address, astHash) {\r\n        if (!this.oldData.has(version)) {\r\n            this.oldData.set(version, []);\r\n        }\r\n        const currentOldData = this.oldData.get(version);\r\n        currentOldData.push([address, astHash]);\r\n    }\r\n    clearRedoStack() {\r\n        this.redoStack = [];\r\n    }\r\n    clearUndoStack() {\r\n        this.undoStack = [];\r\n    }\r\n    isUndoStackEmpty() {\r\n        return this.undoStack.length === 0;\r\n    }\r\n    isRedoStackEmpty() {\r\n        return this.redoStack.length === 0;\r\n    }\r\n    undo() {\r\n        const operation = this.undoStack.pop();\r\n        if (!operation) {\r\n            throw Error('Attempted to undo without operation on stack');\r\n        }\r\n        this.undoEntry(operation);\r\n        this.redoStack.push(operation);\r\n    }\r\n    undoBatch(batchOperation) {\r\n        for (const operation of batchOperation.reversedOperations()) {\r\n            this.undoEntry(operation);\r\n        }\r\n    }\r\n    undoRemoveRows(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { command: { sheet }, rowsRemovals } = operation;\r\n        for (let i = rowsRemovals.length - 1; i >= 0; --i) {\r\n            const rowsRemoval = rowsRemovals[i];\r\n            this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\r\n            for (const { address, cellType } of rowsRemoval.removedCells) {\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n            this.restoreOldDataFromVersion(rowsRemoval.version - 1);\r\n        }\r\n    }\r\n    undoRemoveColumns(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { command: { sheet }, columnsRemovals } = operation;\r\n        for (let i = columnsRemovals.length - 1; i >= 0; --i) {\r\n            const columnsRemoval = columnsRemovals[i];\r\n            this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\r\n            for (const { address, cellType } of columnsRemoval.removedCells) {\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n            this.restoreOldDataFromVersion(columnsRemoval.version - 1);\r\n        }\r\n    }\r\n    undoAddRows(operation) {\r\n        const addedRowsSpans = operation.command.rowsSpans();\r\n        for (let i = addedRowsSpans.length - 1; i >= 0; --i) {\r\n            const addedRows = addedRowsSpans[i];\r\n            this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\r\n        }\r\n    }\r\n    undoAddColumns(operation) {\r\n        const addedColumnsSpans = operation.command.columnsSpans();\r\n        for (let i = addedColumnsSpans.length - 1; i >= 0; --i) {\r\n            const addedColumns = addedColumnsSpans[i];\r\n            this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\r\n        }\r\n    }\r\n    undoSetCellContents(operation) {\r\n        for (const cellContentData of operation.cellContents) {\r\n            const address = cellContentData.address;\r\n            const [oldContentAddress, oldContent] = cellContentData.oldContent;\r\n            if (!equalSimpleCellAddress(address, oldContentAddress)) {\r\n                this.operations.setCellEmpty(address);\r\n            }\r\n            this.operations.restoreCell(oldContentAddress, oldContent);\r\n        }\r\n    }\r\n    undoPaste(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\r\n            this.operations.removeNamedExpression(namedExpression);\r\n        }\r\n    }\r\n    undoMoveRows(operation) {\r\n        const { sheet } = operation;\r\n        this.operations.moveRows(sheet, operation.undoStart, operation.numberOfRows, operation.undoEnd);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoMoveColumns(operation) {\r\n        const { sheet } = operation;\r\n        this.operations.moveColumns(sheet, operation.undoStart, operation.numberOfColumns, operation.undoEnd);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoMoveCells(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\r\n        this.restoreOperationOldContent(operation.overwrittenCellsData);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\r\n            this.operations.removeNamedExpression(namedExpression);\r\n        }\r\n    }\r\n    undoAddSheet(operation) {\r\n        const { sheetName } = operation;\r\n        this.operations.removeSheetByName(sheetName);\r\n    }\r\n    undoRemoveSheet(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { oldSheetContent, sheetId } = operation;\r\n        this.operations.addSheet(operation.sheetName);\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n        for (const [namedexpression, content] of operation.scopedNamedExpressions) {\r\n            this.operations.restoreNamedExpression(namedexpression, content, sheetId);\r\n        }\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoRenameSheet(operation) {\r\n        this.operations.renameSheet(operation.sheetId, operation.oldName);\r\n    }\r\n    undoClearSheet(operation) {\r\n        const { oldSheetContent, sheetId } = operation;\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n    }\r\n    undoSetSheetContent(operation) {\r\n        const { oldSheetContent, sheetId } = operation;\r\n        this.operations.clearSheet(sheetId);\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n    }\r\n    undoAddNamedExpression(operation) {\r\n        this.operations.removeNamedExpression(operation.name, operation.scope);\r\n    }\r\n    undoRemoveNamedExpression(operation) {\r\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\r\n    }\r\n    undoChangeNamedExpression(operation) {\r\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\r\n    }\r\n    undoSetRowOrder(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n    }\r\n    undoSetColumnOrder(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n    }\r\n    redo() {\r\n        const operation = this.redoStack.pop();\r\n        if (!operation) {\r\n            throw Error('Attempted to redo without operation on stack');\r\n        }\r\n        this.redoEntry(operation);\r\n        this.undoStack.push(operation);\r\n    }\r\n    redoBatch(batchOperation) {\r\n        for (const operation of batchOperation.operations) {\r\n            this.redoEntry(operation);\r\n        }\r\n    }\r\n    redoRemoveRows(operation) {\r\n        this.operations.removeRows(operation.command);\r\n    }\r\n    redoMoveCells(operation) {\r\n        this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\r\n    }\r\n    redoRemoveColumns(operation) {\r\n        this.operations.removeColumns(operation.command);\r\n    }\r\n    redoPaste(operation) {\r\n        const { targetLeftCorner, newContent } = operation;\r\n        const height = newContent.length;\r\n        const width = newContent[0].length;\r\n        for (let y = 0; y < height; ++y) {\r\n            for (let x = 0; x < width; ++x) {\r\n                const address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\r\n                this.operations.restoreCell(address, newContent[y][x]);\r\n            }\r\n        }\r\n    }\r\n    redoSetCellContents(operation) {\r\n        for (const cellContentData of operation.cellContents) {\r\n            this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\r\n        }\r\n    }\r\n    redoAddRows(operation) {\r\n        this.operations.addRows(operation.command);\r\n    }\r\n    redoAddColumns(operation) {\r\n        this.operations.addColumns(operation.command);\r\n    }\r\n    redoRemoveSheet(operation) {\r\n        this.operations.removeSheetByName(operation.sheetName);\r\n    }\r\n    redoAddSheet(operation) {\r\n        this.operations.addSheet(operation.sheetName);\r\n    }\r\n    redoRenameSheet(operation) {\r\n        this.operations.renameSheet(operation.sheetId, operation.newName);\r\n    }\r\n    redoMoveRows(operation) {\r\n        this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\r\n    }\r\n    redoMoveColumns(operation) {\r\n        this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\r\n    }\r\n    redoClearSheet(operation) {\r\n        this.operations.clearSheet(operation.sheetId);\r\n    }\r\n    redoSetSheetContent(operation) {\r\n        const { sheetId, newSheetContent } = operation;\r\n        this.operations.setSheetContent(sheetId, newSheetContent);\r\n    }\r\n    redoAddNamedExpression(operation) {\r\n        this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\r\n    }\r\n    redoRemoveNamedExpression(operation) {\r\n        this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\r\n    }\r\n    redoChangeNamedExpression(operation) {\r\n        this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\r\n    }\r\n    redoSetRowOrder(operation) {\r\n        this.operations.setRowOrder(operation.sheetId, operation.rowMapping);\r\n    }\r\n    redoSetColumnOrder(operation) {\r\n        this.operations.setColumnOrder(operation.sheetId, operation.columnMapping);\r\n    }\r\n    addUndoEntry(operation) {\r\n        this.undoStack.push(operation);\r\n        this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\r\n    }\r\n    undoEntry(operation) {\r\n        operation.doUndo(this);\r\n    }\r\n    restoreOperationOldContent(oldContent) {\r\n        for (const [address, clipboardCell] of oldContent) {\r\n            this.operations.restoreCell(address, clipboardCell);\r\n        }\r\n    }\r\n    redoEntry(operation) {\r\n        operation.doRedo(this);\r\n    }\r\n    restoreOldDataFromVersion(version) {\r\n        const oldDataToRestore = this.oldData.get(version) || [];\r\n        for (const entryToRestore of oldDataToRestore) {\r\n            const [address, hash] = entryToRestore;\r\n            this.operations.setFormulaToCellFromCache(hash, address);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { absolutizeDependencies } from './absolutizeDependencies';\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { ContentChanges } from './ContentChanges';\r\nimport { ArrayVertex, RangeVertex } from './DependencyGraph';\r\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\r\nimport { InterpreterState } from './interpreter/InterpreterState';\r\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nimport { StatType } from './statistics';\r\nexport class Evaluator {\r\n    constructor(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch) {\r\n        this.config = config;\r\n        this.stats = stats;\r\n        this.interpreter = interpreter;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n    }\r\n    run() {\r\n        this.stats.start(StatType.TOP_SORT);\r\n        const { sorted, cycled } = this.dependencyGraph.topSortWithScc();\r\n        this.stats.end(StatType.TOP_SORT);\r\n        this.stats.measure(StatType.EVALUATION, () => {\r\n            this.recomputeFormulas(cycled, sorted);\r\n        });\r\n    }\r\n    partialRun(vertices) {\r\n        const changes = ContentChanges.empty();\r\n        this.stats.measure(StatType.EVALUATION, () => {\r\n            this.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, (vertex) => {\r\n                if (vertex instanceof FormulaVertex) {\r\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : undefined;\r\n                    const newCellValue = this.recomputeFormulaVertexValue(vertex);\r\n                    if (newCellValue !== currentValue) {\r\n                        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                        changes.addChange(newCellValue, address);\r\n                        this.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n                else if (vertex instanceof RangeVertex) {\r\n                    vertex.clearCache();\r\n                    return true;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }, (vertex) => {\r\n                if (vertex instanceof RangeVertex) {\r\n                    vertex.clearCache();\r\n                }\r\n                else if (vertex instanceof FormulaVertex) {\r\n                    const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                    this.columnSearch.remove(getRawValue(vertex.valueOrUndef()), address);\r\n                    const error = new CellError(ErrorType.CYCLE, undefined, vertex);\r\n                    vertex.setCellValue(error);\r\n                    changes.addChange(error, address);\r\n                }\r\n            });\r\n        });\r\n        return changes;\r\n    }\r\n    runAndForget(ast, address, dependencies) {\r\n        const tmpRanges = [];\r\n        for (const dep of absolutizeDependencies(dependencies, address)) {\r\n            if (dep instanceof AbsoluteCellRange) {\r\n                const range = dep;\r\n                if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\r\n                    const rangeVertex = new RangeVertex(range);\r\n                    this.dependencyGraph.rangeMapping.setRange(rangeVertex);\r\n                    tmpRanges.push(rangeVertex);\r\n                }\r\n            }\r\n        }\r\n        const ret = this.evaluateAstToCellValue(ast, new InterpreterState(address, this.config.useArrayArithmetic));\r\n        tmpRanges.forEach((rangeVertex) => {\r\n            this.dependencyGraph.rangeMapping.removeRange(rangeVertex);\r\n        });\r\n        return ret;\r\n    }\r\n    /**\r\n     * Recalculates formulas in the topological sort order\r\n     */\r\n    recomputeFormulas(cycled, sorted) {\r\n        cycled.forEach((vertex) => {\r\n            if (vertex instanceof FormulaVertex) {\r\n                vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex));\r\n            }\r\n        });\r\n        sorted.forEach((vertex) => {\r\n            if (vertex instanceof FormulaVertex) {\r\n                const newCellValue = this.recomputeFormulaVertexValue(vertex);\r\n                const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                this.columnSearch.add(getRawValue(newCellValue), address);\r\n            }\r\n            else if (vertex instanceof RangeVertex) {\r\n                vertex.clearCache();\r\n            }\r\n        });\r\n    }\r\n    recomputeFormulaVertexValue(vertex) {\r\n        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n        if (vertex instanceof ArrayVertex && (vertex.array.size.isRef || !this.dependencyGraph.isThereSpaceForArray(vertex))) {\r\n            return vertex.setNoSpace();\r\n        }\r\n        else {\r\n            const formula = vertex.getFormula(this.lazilyTransformingAstService);\r\n            const newCellValue = this.evaluateAstToCellValue(formula, new InterpreterState(address, this.config.useArrayArithmetic, vertex));\r\n            return vertex.setCellValue(newCellValue);\r\n        }\r\n    }\r\n    evaluateAstToCellValue(ast, state) {\r\n        const interpreterValue = this.interpreter.evaluateAst(ast, state);\r\n        if (interpreterValue instanceof SimpleRangeValue) {\r\n            return interpreterValue;\r\n        }\r\n        else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return interpreterValue;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { DetailedCellError } from './CellValue';\r\nimport { ErrorMessage } from './error-message';\r\nimport { EmptyValue, getRawValue, isExtendedNumber } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nimport { NamedExpressions } from './NamedExpressions';\r\nimport { simpleCellAddressToString } from './parser/addressRepresentationConverters';\r\n/**\r\n * A list of cells which values changed after the operation, their absolute addresses and new values.\r\n */\r\nexport class ExportedCellChange {\r\n    constructor(address, newValue) {\r\n        this.address = address;\r\n        this.newValue = newValue;\r\n    }\r\n    get col() {\r\n        return this.address.col;\r\n    }\r\n    get row() {\r\n        return this.address.row;\r\n    }\r\n    get sheet() {\r\n        return this.address.sheet;\r\n    }\r\n    get value() {\r\n        return this.newValue;\r\n    }\r\n}\r\nexport class ExportedNamedExpressionChange {\r\n    constructor(name, newValue) {\r\n        this.name = name;\r\n        this.newValue = newValue;\r\n    }\r\n}\r\nexport class Exporter {\r\n    constructor(config, namedExpressions, sheetIndexMapping, lazilyTransformingService) {\r\n        this.config = config;\r\n        this.namedExpressions = namedExpressions;\r\n        this.sheetIndexMapping = sheetIndexMapping;\r\n        this.lazilyTransformingService = lazilyTransformingService;\r\n    }\r\n    exportChange(change) {\r\n        const value = change.value;\r\n        const address = change.address;\r\n        if (address.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\r\n            const namedExpression = this.namedExpressions.namedExpressionInAddress(address.row);\r\n            if (!namedExpression) {\r\n                throw new Error('Missing named expression');\r\n            }\r\n            return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportScalarOrRange(value));\r\n        }\r\n        else if (value instanceof SimpleRangeValue) {\r\n            const result = [];\r\n            for (const [cellValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                result.push(new ExportedCellChange(cellAddress, this.exportValue(cellValue)));\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return new ExportedCellChange(address, this.exportValue(value));\r\n        }\r\n    }\r\n    exportValue(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return this.detailedError(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\r\n        }\r\n        else if (this.config.smartRounding && isExtendedNumber(value)) {\r\n            return this.cellValueRounding(getRawValue(value));\r\n        }\r\n        else if (value instanceof CellError) {\r\n            return this.detailedError(value);\r\n        }\r\n        else if (value === EmptyValue) {\r\n            return null;\r\n        }\r\n        else {\r\n            return getRawValue(value);\r\n        }\r\n    }\r\n    exportScalarOrRange(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return value.rawData().map(row => row.map(v => this.exportValue(v)));\r\n        }\r\n        else {\r\n            return this.exportValue(value);\r\n        }\r\n    }\r\n    detailedError(error) {\r\n        var _a, _b;\r\n        let address = undefined;\r\n        const originAddress = (_a = error.root) === null || _a === void 0 ? void 0 : _a.getAddress(this.lazilyTransformingService);\r\n        if (originAddress !== undefined) {\r\n            if (originAddress.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\r\n                address = (_b = this.namedExpressions.namedExpressionInAddress(originAddress.row)) === null || _b === void 0 ? void 0 : _b.displayName;\r\n            }\r\n            else {\r\n                address = simpleCellAddressToString(this.sheetIndexMapping, originAddress, -1);\r\n            }\r\n        }\r\n        return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type), address);\r\n    }\r\n    cellValueRounding(value) {\r\n        if (value === 0) {\r\n            return value;\r\n        }\r\n        const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\r\n        const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\r\n        if (value < 0) {\r\n            return -Math.round(-value * placesMultiplier) / placesMultiplier;\r\n        }\r\n        else {\r\n            return Math.round(value * placesMultiplier) / placesMultiplier;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { absolutizeDependencies } from './absolutizeDependencies';\r\nimport { ArraySize } from './ArraySize';\r\nimport { simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\r\nimport { getRawValue } from './interpreter/InterpreterValue';\r\nimport { StatType } from './statistics';\r\n/**\r\n * Service building the graph and mappings.\r\n */\r\nexport class GraphBuilder {\r\n    /**\r\n     * Configures the building service.\r\n     */\r\n    constructor(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.parser = parser;\r\n        this.cellContentParser = cellContentParser;\r\n        this.stats = stats;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.buildStrategy = new SimpleStrategy(dependencyGraph, columnSearch, parser, stats, cellContentParser, arraySizePredictor);\r\n    }\r\n    /**\r\n     * Builds graph.\r\n     */\r\n    buildGraph(sheets, stats) {\r\n        const dependencies = stats.measure(StatType.COLLECT_DEPENDENCIES, () => this.buildStrategy.run(sheets));\r\n        this.dependencyGraph.getAndClearContentChanges();\r\n        stats.measure(StatType.PROCESS_DEPENDENCIES, () => this.processDependencies(dependencies));\r\n    }\r\n    processDependencies(dependencies) {\r\n        dependencies.forEach((cellDependencies, endVertex) => {\r\n            this.dependencyGraph.processCellDependencies(cellDependencies, endVertex);\r\n        });\r\n    }\r\n}\r\nexport class SimpleStrategy {\r\n    constructor(dependencyGraph, columnIndex, parser, stats, cellContentParser, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnIndex = columnIndex;\r\n        this.parser = parser;\r\n        this.stats = stats;\r\n        this.cellContentParser = cellContentParser;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n    }\r\n    run(sheets) {\r\n        const dependencies = new Map();\r\n        for (const sheetName in sheets) {\r\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\r\n            const sheet = sheets[sheetName];\r\n            for (let i = 0; i < sheet.length; ++i) {\r\n                const row = sheet[i];\r\n                for (let j = 0; j < row.length; ++j) {\r\n                    const cellContent = row[j];\r\n                    const address = simpleCellAddress(sheetId, j, i);\r\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\r\n                    if (parsedCellContent instanceof CellContent.Formula) {\r\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\r\n                        if (parseResult.errors.length > 0) {\r\n                            this.shrinkArrayIfNeeded(address);\r\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\r\n                            this.dependencyGraph.addVertex(address, vertex);\r\n                        }\r\n                        else {\r\n                            this.shrinkArrayIfNeeded(address);\r\n                            const size = this.arraySizePredictor.checkArraySize(parseResult.ast, address);\r\n                            if (size.isScalar()) {\r\n                                const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\r\n                                dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\r\n                                this.dependencyGraph.addVertex(address, vertex);\r\n                                if (parseResult.hasVolatileFunction) {\r\n                                    this.dependencyGraph.markAsVolatile(vertex);\r\n                                }\r\n                                if (parseResult.hasStructuralChangeFunction) {\r\n                                    this.dependencyGraph.markAsDependentOnStructureChange(vertex);\r\n                                }\r\n                            }\r\n                            else {\r\n                                const vertex = new ArrayVertex(parseResult.ast, address, new ArraySize(size.width, size.height));\r\n                                dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\r\n                                this.dependencyGraph.addArrayVertex(address, vertex);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (parsedCellContent instanceof CellContent.Empty) {\r\n                        /* we don't care about empty cells here */\r\n                    }\r\n                    else {\r\n                        this.shrinkArrayIfNeeded(address);\r\n                        const vertex = new ValueCellVertex(parsedCellContent.value, cellContent);\r\n                        this.columnIndex.add(getRawValue(parsedCellContent.value), address);\r\n                        this.dependencyGraph.addVertex(address, vertex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dependencies;\r\n    }\r\n    shrinkArrayIfNeeded(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.dependencyGraph.shrinkArrayToCorner(vertex);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AliasAlreadyExisting, FunctionPluginValidationError, ProtectedFunctionError } from '../errors';\r\nimport { HyperFormula } from '../HyperFormula';\r\nimport { VersionPlugin } from './plugin/VersionPlugin';\r\nfunction validateAndReturnMetadataFromName(functionId, plugin) {\r\n    var _a;\r\n    let entry = plugin.implementedFunctions[functionId];\r\n    const key = (_a = plugin.aliases) === null || _a === void 0 ? void 0 : _a[functionId];\r\n    if (key !== undefined) {\r\n        if (entry !== undefined) {\r\n            throw new AliasAlreadyExisting(functionId, plugin.name);\r\n        }\r\n        entry = plugin.implementedFunctions[key];\r\n    }\r\n    if (entry === undefined) {\r\n        throw FunctionPluginValidationError.functionNotDeclaredInPlugin(functionId, plugin.name);\r\n    }\r\n    return entry;\r\n}\r\nexport class FunctionRegistry {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.functions = new Map();\r\n        this.arraySizeFunctions = new Map();\r\n        this.volatileFunctions = new Set();\r\n        this.arrayFunctions = new Set();\r\n        this.structuralChangeFunctions = new Set();\r\n        this.functionsWhichDoesNotNeedArgumentsToBeComputed = new Set();\r\n        this.functionsMetadata = new Map();\r\n        this.doesFunctionNeedArgumentToBeComputed = (functionId) => this.functionsWhichDoesNotNeedArgumentsToBeComputed.has(functionId);\r\n        this.isFunctionVolatile = (functionId) => this.volatileFunctions.has(functionId);\r\n        this.isArrayFunction = (functionId) => this.arrayFunctions.has(functionId);\r\n        this.isFunctionDependentOnSheetStructureChange = (functionId) => this.structuralChangeFunctions.has(functionId);\r\n        if (config.functionPlugins.length > 0) {\r\n            this.instancePlugins = new Map();\r\n            for (const plugin of config.functionPlugins) {\r\n                FunctionRegistry.loadPluginFunctions(plugin, this.instancePlugins);\r\n            }\r\n        }\r\n        else {\r\n            this.instancePlugins = new Map(FunctionRegistry.plugins);\r\n        }\r\n        for (const [functionId, plugin] of FunctionRegistry.protectedFunctions()) {\r\n            FunctionRegistry.loadFunctionUnprotected(plugin, functionId, this.instancePlugins);\r\n        }\r\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\r\n            this.categorizeFunction(functionId, validateAndReturnMetadataFromName(functionId, plugin));\r\n        }\r\n    }\r\n    static registerFunctionPlugin(plugin, translations) {\r\n        this.loadPluginFunctions(plugin, this.plugins);\r\n        if (translations !== undefined) {\r\n            this.loadTranslations(translations);\r\n        }\r\n    }\r\n    static registerFunction(functionId, plugin, translations) {\r\n        this.loadPluginFunction(plugin, functionId, this.plugins);\r\n        if (translations !== undefined) {\r\n            this.loadTranslations(translations);\r\n        }\r\n    }\r\n    static unregisterFunction(functionId) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            throw ProtectedFunctionError.cannotUnregisterFunctionWithId(functionId);\r\n        }\r\n        this.plugins.delete(functionId);\r\n    }\r\n    static unregisterFunctionPlugin(plugin) {\r\n        for (const protectedPlugin of this.protectedPlugins()) {\r\n            if (protectedPlugin === plugin) {\r\n                throw ProtectedFunctionError.cannotUnregisterProtectedPlugin();\r\n            }\r\n        }\r\n        for (const [functionId, registeredPlugin] of this.plugins.entries()) {\r\n            if (registeredPlugin === plugin) {\r\n                this.plugins.delete(functionId);\r\n            }\r\n        }\r\n    }\r\n    static unregisterAll() {\r\n        this.plugins.clear();\r\n    }\r\n    static getRegisteredFunctionIds() {\r\n        return [\r\n            ...Array.from(this.plugins.keys()),\r\n            ...Array.from(this._protectedPlugins.keys())\r\n        ];\r\n    }\r\n    static getPlugins() {\r\n        return Array.from(new Set(this.plugins.values()).values());\r\n    }\r\n    static getFunctionPlugin(functionId) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.plugins.get(functionId);\r\n        }\r\n    }\r\n    static functionIsProtected(functionId) {\r\n        return this._protectedPlugins.has(functionId);\r\n    }\r\n    static loadTranslations(translations) {\r\n        const registeredLanguages = new Set(HyperFormula.getRegisteredLanguagesCodes());\r\n        Object.keys(translations).forEach(code => {\r\n            if (registeredLanguages.has(code)) {\r\n                HyperFormula.getLanguage(code).extendFunctions(translations[code]);\r\n            }\r\n        });\r\n    }\r\n    static loadPluginFunctions(plugin, registry) {\r\n        Object.keys(plugin.implementedFunctions).forEach((functionName) => {\r\n            this.loadPluginFunction(plugin, functionName, registry);\r\n        });\r\n        if (plugin.aliases !== undefined) {\r\n            Object.keys(plugin.aliases).forEach((functionName) => {\r\n                this.loadPluginFunction(plugin, functionName, registry);\r\n            });\r\n        }\r\n    }\r\n    static loadPluginFunction(plugin, functionId, registry) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            throw ProtectedFunctionError.cannotRegisterFunctionWithId(functionId);\r\n        }\r\n        else {\r\n            this.loadFunctionUnprotected(plugin, functionId, registry);\r\n        }\r\n    }\r\n    static loadFunctionUnprotected(plugin, functionId, registry) {\r\n        const methodName = validateAndReturnMetadataFromName(functionId, plugin).method;\r\n        if (Object.prototype.hasOwnProperty.call(plugin.prototype, methodName)) {\r\n            registry.set(functionId, plugin);\r\n        }\r\n        else {\r\n            throw FunctionPluginValidationError.functionMethodNotFound(methodName, plugin.name);\r\n        }\r\n    }\r\n    static *protectedFunctions() {\r\n        for (const [functionId, plugin] of this._protectedPlugins) {\r\n            if (plugin !== undefined) {\r\n                yield [functionId, plugin];\r\n            }\r\n        }\r\n    }\r\n    static *protectedPlugins() {\r\n        for (const [, plugin] of this._protectedPlugins) {\r\n            if (plugin !== undefined) {\r\n                yield plugin;\r\n            }\r\n        }\r\n    }\r\n    initializePlugins(interpreter) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const instances = [];\r\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\r\n            let foundPluginInstance = instances.find(pluginInstance => pluginInstance instanceof plugin);\r\n            if (foundPluginInstance === undefined) {\r\n                foundPluginInstance = new plugin(interpreter);\r\n                instances.push(foundPluginInstance);\r\n            }\r\n            const metadata = validateAndReturnMetadataFromName(functionId, plugin);\r\n            const methodName = metadata.method;\r\n            this.functions.set(functionId, [methodName, foundPluginInstance]);\r\n            const arraySizeMethodName = metadata.arraySizeMethod;\r\n            if (arraySizeMethodName !== undefined) {\r\n                this.arraySizeFunctions.set(functionId, [arraySizeMethodName, foundPluginInstance]);\r\n            }\r\n        }\r\n    }\r\n    getFunctionPlugin(functionId) {\r\n        if (FunctionRegistry.functionIsProtected(functionId)) {\r\n            return undefined;\r\n        }\r\n        return this.instancePlugins.get(functionId);\r\n    }\r\n    getFunction(functionId) {\r\n        const pluginEntry = this.functions.get(functionId);\r\n        if (pluginEntry !== undefined && this.config.translationPackage.isFunctionTranslated(functionId)) {\r\n            const [pluginFunction, pluginInstance] = pluginEntry;\r\n            return (ast, state) => pluginInstance[pluginFunction](ast, state);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    getArraySizeFunction(functionId) {\r\n        const pluginEntry = this.arraySizeFunctions.get(functionId);\r\n        if (pluginEntry !== undefined && this.config.translationPackage.isFunctionTranslated(functionId)) {\r\n            const [pluginArraySizeFunction, pluginInstance] = pluginEntry;\r\n            return (ast, state) => pluginInstance[pluginArraySizeFunction](ast, state);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    getMetadata(functionId) {\r\n        return this.functionsMetadata.get(functionId);\r\n    }\r\n    getPlugins() {\r\n        const plugins = new Set();\r\n        for (const [functionId, plugin] of this.instancePlugins) {\r\n            if (!FunctionRegistry.functionIsProtected(functionId)) {\r\n                plugins.add(plugin);\r\n            }\r\n        }\r\n        return Array.from(plugins);\r\n    }\r\n    getRegisteredFunctionIds() {\r\n        return Array.from(this.functions.keys());\r\n    }\r\n    categorizeFunction(functionId, functionMetadata) {\r\n        if (functionMetadata.isVolatile) {\r\n            this.volatileFunctions.add(functionId);\r\n        }\r\n        if (functionMetadata.arrayFunction) {\r\n            this.arrayFunctions.add(functionId);\r\n        }\r\n        if (functionMetadata.doesNotNeedArgumentsToBeComputed) {\r\n            this.functionsWhichDoesNotNeedArgumentsToBeComputed.add(functionId);\r\n        }\r\n        if (functionMetadata.isDependentOnSheetStructureChange) {\r\n            this.structuralChangeFunctions.add(functionId);\r\n        }\r\n        this.functionsMetadata.set(functionId, functionMetadata);\r\n    }\r\n}\r\nFunctionRegistry.plugins = new Map();\r\nFunctionRegistry._protectedPlugins = new Map([\r\n    ['VERSION', VersionPlugin],\r\n    ['OFFSET', undefined],\r\n]);\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { HyperFormula } from '../../HyperFormula';\r\nimport { FunctionPlugin } from './FunctionPlugin';\r\nconst LICENSE_STATUS_MAP = new Map([\r\n    ['gpl-v3', 1],\r\n    [\"missing\" /* MISSING */, 2],\r\n    [\"invalid\" /* INVALID */, 3],\r\n    [\"expired\" /* EXPIRED */, 4],\r\n]);\r\nexport class VersionPlugin extends FunctionPlugin {\r\n    version(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('VERSION'), () => {\r\n            const { licenseKeyValidityState: validityState, licenseKey, } = this.config;\r\n            let status;\r\n            if (LICENSE_STATUS_MAP.has(licenseKey)) {\r\n                status = LICENSE_STATUS_MAP.get(licenseKey);\r\n            }\r\n            else if (LICENSE_STATUS_MAP.has(validityState)) {\r\n                status = LICENSE_STATUS_MAP.get(validityState);\r\n            }\r\n            else if (validityState === \"valid\" /* VALID */) {\r\n                status = licenseKey.slice(-5);\r\n            }\r\n            return `HyperFormula v${HyperFormula.version}, ${status}`;\r\n        });\r\n    }\r\n}\r\nVersionPlugin.implementedFunctions = {\r\n    'VERSION': {\r\n        method: 'version',\r\n        parameters: [],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\r\nimport { ArrayValue, NotComputedArray } from '../ArrayValue';\r\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\n// noinspection TypeScriptPreferShortImport\r\nimport { AstNodeType } from '../parser/Ast';\r\nimport { coerceRangeToScalar, coerceScalarToString, coerceToRange, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\r\nimport { CriterionBuilder } from './Criterion';\r\nimport { FunctionRegistry } from './FunctionRegistry';\r\nimport { InterpreterState } from './InterpreterState';\r\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber, } from './InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nexport class Interpreter {\r\n    constructor(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper) {\r\n        this.config = config;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.stats = stats;\r\n        this.arithmeticHelper = arithmeticHelper;\r\n        this.functionRegistry = functionRegistry;\r\n        this.namedExpressions = namedExpressions;\r\n        this.serialization = serialization;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.dateTimeHelper = dateTimeHelper;\r\n        this.equalOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.eq, arg1, arg2);\r\n        this.notEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.neq, arg1, arg2);\r\n        this.greaterThanOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.gt, arg1, arg2);\r\n        this.lessThanOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.lt, arg1, arg2);\r\n        this.greaterThanOrEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.geq, arg1, arg2);\r\n        this.lessThanOrEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.leq, arg1, arg2);\r\n        this.concatOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.concat, coerceScalarToString(arg1), coerceScalarToString(arg2));\r\n        this.plusOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.addWithEpsilon, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.minusOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.subtract, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.timesOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.multiply, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.powerOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.pow, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.divOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.divide, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.unaryMinusOp = (arg) => unaryErrorWrapper(this.arithmeticHelper.unaryMinus, this.arithmeticHelper.coerceScalarToNumberOrError(arg));\r\n        this.percentOp = (arg) => unaryErrorWrapper(this.arithmeticHelper.unaryPercent, this.arithmeticHelper.coerceScalarToNumberOrError(arg));\r\n        this.unaryPlusOp = (arg) => this.arithmeticHelper.unaryPlus(arg);\r\n        this.functionRegistry.initializePlugins(this);\r\n        this.criterionBuilder = new CriterionBuilder(config);\r\n    }\r\n    evaluateAst(ast, state) {\r\n        let val = this.evaluateAstWithoutPostprocessing(ast, state);\r\n        if (isExtendedNumber(val)) {\r\n            if (isNumberOverflow(getRawValue(val))) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n            }\r\n            else {\r\n                val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\r\n            }\r\n        }\r\n        if (val instanceof SimpleRangeValue && val.height() === 1 && val.width() === 1) {\r\n            [[val]] = val.data;\r\n        }\r\n        return wrapperForRootVertex(val, state.formulaVertex);\r\n    }\r\n    /**\r\n     * Calculates cell value from formula abstract syntax tree\r\n     *\r\n     * @param formula - abstract syntax tree of formula\r\n     * @param formulaAddress - address of the cell in which formula is located\r\n     */\r\n    evaluateAstWithoutPostprocessing(ast, state) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return EmptyValue;\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                const address = ast.reference.toSimpleCellAddress(state.formulaAddress);\r\n                if (invalidSimpleCellAddress(address)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.BadRef);\r\n                }\r\n                return this.dependencyGraph.getCellValue(address);\r\n            }\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.STRING: {\r\n                return ast.value;\r\n            }\r\n            case AstNodeType.CONCATENATE_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.concatOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.EQUALS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.equalOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.NOT_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.notEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.GREATER_THAN_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.greaterThanOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.LESS_THAN_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.lessThanOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.greaterThanOrEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.lessThanOrEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.PLUS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.plusOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.MINUS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.minusOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.TIMES_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.timesOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.POWER_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.powerOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.DIV_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.divOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.unaryPlusOp, result, state);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.unaryMinusOp, result, state);\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.percentOp, result, state);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                if (this.config.licenseKeyValidityState !== \"valid\" /* VALID */ && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\r\n                    return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\r\n                }\r\n                const pluginFunction = this.functionRegistry.getFunction(ast.procedureName);\r\n                if (pluginFunction !== undefined) {\r\n                    return pluginFunction(ast, new InterpreterState(state.formulaAddress, state.arraysFlag || this.functionRegistry.isArrayFunction(ast.procedureName), state.formulaVertex));\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\r\n                }\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                const namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, state.formulaAddress.sheet);\r\n                if (namedExpression) {\r\n                    return this.dependencyGraph.getCellValue(namedExpression.address);\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\r\n                }\r\n            }\r\n            case AstNodeType.CELL_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteCellRange.fromCellRange(ast, state.formulaAddress);\r\n                const arrayVertex = this.dependencyGraph.getArray(range);\r\n                if (arrayVertex) {\r\n                    const array = arrayVertex.array;\r\n                    if (array instanceof NotComputedArray) {\r\n                        throw new Error('Array should be already computed');\r\n                    }\r\n                    else if (array instanceof CellError) {\r\n                        return array;\r\n                    }\r\n                    else if (array instanceof ArrayValue) {\r\n                        return SimpleRangeValue.fromRange(array.raw(), range, this.dependencyGraph);\r\n                    }\r\n                    else {\r\n                        throw new Error('Unknown array');\r\n                    }\r\n                }\r\n                else {\r\n                    return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n                }\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteColumnRange.fromColumnRange(ast, state.formulaAddress);\r\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteRowRange.fromRowRangeAst(ast, state.formulaAddress);\r\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return this.evaluateAst(ast.expression, state);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                let totalWidth = undefined;\r\n                const ret = [];\r\n                for (const astRow of ast.args) {\r\n                    let rowHeight = undefined;\r\n                    const rowRet = [];\r\n                    for (const astIt of astRow) {\r\n                        const arr = coerceToRange(this.evaluateAst(astIt, state));\r\n                        const height = arr.height();\r\n                        if (rowHeight === undefined) {\r\n                            rowHeight = height;\r\n                            rowRet.push(...arr.data);\r\n                        }\r\n                        else if (rowHeight === height) {\r\n                            for (let i = 0; i < height; i++) {\r\n                                rowRet[i].push(...arr.data[i]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\r\n                        }\r\n                    }\r\n                    const width = rowRet[0].length;\r\n                    if (totalWidth === undefined) {\r\n                        totalWidth = width;\r\n                        ret.push(...rowRet);\r\n                    }\r\n                    else if (totalWidth === width) {\r\n                        ret.push(...rowRet);\r\n                    }\r\n                    else {\r\n                        return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\r\n                    }\r\n                }\r\n                return SimpleRangeValue.onlyValues(ret);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.ERROR: {\r\n                return ast.error;\r\n            }\r\n        }\r\n    }\r\n    rangeSpansOneSheet(ast) {\r\n        return ast.start.sheet === ast.end.sheet;\r\n    }\r\n    unaryRangeWrapper(op, arg, state) {\r\n        var _a;\r\n        if (arg instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg = (_a = coerceRangeToScalar(arg, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        if (arg instanceof SimpleRangeValue) {\r\n            const newRaw = arg.data.map((row) => row.map(op));\r\n            return SimpleRangeValue.onlyValues(newRaw);\r\n        }\r\n        return op(arg);\r\n    }\r\n    binaryRangeWrapper(op, arg1, arg2, state) {\r\n        var _a, _b;\r\n        if (arg1 instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg1 = (_a = coerceRangeToScalar(arg1, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg1 instanceof CellError) {\r\n            return arg1;\r\n        }\r\n        if (arg2 instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg2 = (_b = coerceRangeToScalar(arg2, state)) !== null && _b !== void 0 ? _b : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg2 instanceof CellError) {\r\n            return arg2;\r\n        }\r\n        if (arg1 instanceof SimpleRangeValue || arg2 instanceof SimpleRangeValue) {\r\n            if (!(arg1 instanceof SimpleRangeValue)) {\r\n                if (arg2.isAdHoc()) {\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw2.length; i++) {\r\n                        for (let j = 0; j < raw2[0].length; j++) {\r\n                            raw2[i][j] = op(arg1, raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw2);\r\n                }\r\n                else {\r\n                    arg1 = SimpleRangeValue.fromScalar(arg1);\r\n                }\r\n            }\r\n            if (!(arg2 instanceof SimpleRangeValue)) {\r\n                if (arg1.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw1[i][j] = op(raw1[i][j], arg2);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw1);\r\n                }\r\n                else {\r\n                    arg2 = SimpleRangeValue.fromScalar(arg2);\r\n                }\r\n            }\r\n            if (arg1.width() === arg2.width() && arg1.height() === arg2.height()) {\r\n                if (arg1.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw1[i][j] = op(raw1[i][j], raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw1);\r\n                }\r\n                if (arg2.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw2[i][j] = op(raw1[i][j], raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw2);\r\n                }\r\n            }\r\n            const width = Math.max(arg1.width(), arg2.width());\r\n            const height = Math.max(arg1.height(), arg2.height());\r\n            const ret = Array(height);\r\n            for (let i = 0; i < height; i++) {\r\n                ret[i] = Array(width);\r\n            }\r\n            for (let i = 0; i < height; i++) {\r\n                const i1 = (arg1.height() !== 1) ? i : 0;\r\n                const i2 = (arg2.height() !== 1) ? i : 0;\r\n                for (let j = 0; j < width; j++) {\r\n                    const j1 = (arg1.width() !== 1) ? j : 0;\r\n                    const j2 = (arg2.width() !== 1) ? j : 0;\r\n                    if (i1 < arg1.height() && i2 < arg2.height() && j1 < arg1.width() && j2 < arg2.width()) {\r\n                        ret[i][j] = op(arg1.data[i1][j1], arg2.data[i2][j2]);\r\n                    }\r\n                    else {\r\n                        ret[i][j] = new CellError(ErrorType.NA);\r\n                    }\r\n                }\r\n            }\r\n            return SimpleRangeValue.onlyValues(ret);\r\n        }\r\n        return op(arg1, arg2);\r\n    }\r\n}\r\nfunction unaryErrorWrapper(op, arg) {\r\n    if (arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return op(arg);\r\n    }\r\n}\r\nfunction binaryErrorWrapper(op, arg1, arg2) {\r\n    if (arg1 instanceof CellError) {\r\n        return arg1;\r\n    }\r\n    else if (arg2 instanceof CellError) {\r\n        return arg2;\r\n    }\r\n    else {\r\n        return op(arg1, arg2);\r\n    }\r\n}\r\nfunction wrapperForRootVertex(val, vertex) {\r\n    if (val instanceof CellError && vertex !== undefined) {\r\n        return val.attachRootVertex(vertex);\r\n    }\r\n    return val;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue, getRawValue } from './InterpreterValue';\r\nexport var CriterionType;\r\n(function (CriterionType) {\r\n    CriterionType[\"GREATER_THAN\"] = \"GREATER_THAN\";\r\n    CriterionType[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\r\n    CriterionType[\"LESS_THAN\"] = \"LESS_THAN\";\r\n    CriterionType[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\r\n    CriterionType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\r\n    CriterionType[\"EQUAL\"] = \"EQUAL\";\r\n})(CriterionType || (CriterionType = {}));\r\nexport const buildCriterion = (operator, value) => ({ operator, value });\r\nexport class CriterionBuilder {\r\n    constructor(config) {\r\n        var _a, _b, _c, _d;\r\n        this.trueString = (_b = (_a = config.translationPackage.getMaybeFunctionTranslation('TRUE')) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : 'true';\r\n        this.falseString = (_d = (_c = config.translationPackage.getMaybeFunctionTranslation('FALSE')) === null || _c === void 0 ? void 0 : _c.toLowerCase()) !== null && _d !== void 0 ? _d : 'false';\r\n    }\r\n    fromCellValue(raw, arithmeticHelper) {\r\n        if (typeof raw !== 'string' && typeof raw !== 'boolean' && typeof raw !== 'number') {\r\n            return undefined;\r\n        }\r\n        const criterion = this.parseCriterion(raw, arithmeticHelper);\r\n        if (criterion === undefined) {\r\n            return undefined;\r\n        }\r\n        return { raw, lambda: buildCriterionLambda(criterion, arithmeticHelper) };\r\n    }\r\n    parseCriterion(criterion, arithmeticHelper) {\r\n        if (typeof criterion === 'number' || typeof criterion === 'boolean') {\r\n            return buildCriterion(CriterionType.EQUAL, criterion);\r\n        }\r\n        else if (typeof criterion === 'string') {\r\n            const regexResult = ANY_CRITERION_REGEX.exec(criterion);\r\n            let criterionValue;\r\n            let criterionType;\r\n            if (regexResult) {\r\n                criterionType = StrToCriterionType(regexResult[1]);\r\n                criterionValue = regexResult[2];\r\n            }\r\n            else {\r\n                criterionType = CriterionType.EQUAL;\r\n                criterionValue = criterion;\r\n            }\r\n            const value = arithmeticHelper.coerceToMaybeNumber(criterionValue);\r\n            const boolvalue = criterionValue.toLowerCase() === this.trueString ? true : criterionValue.toLowerCase() === this.falseString ? false : undefined;\r\n            if (criterionType === undefined) {\r\n                return undefined;\r\n            }\r\n            if (criterionValue === '') {\r\n                return buildCriterion(criterionType, null);\r\n            }\r\n            else if (value === undefined) {\r\n                if (criterionType === CriterionType.EQUAL || criterionType === CriterionType.NOT_EQUAL) {\r\n                    return buildCriterion(criterionType, boolvalue !== null && boolvalue !== void 0 ? boolvalue : criterionValue);\r\n                }\r\n            }\r\n            else {\r\n                return buildCriterion(criterionType, getRawValue(value));\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nconst ANY_CRITERION_REGEX = /([<>=]+)(.*)/;\r\nfunction StrToCriterionType(str) {\r\n    switch (str) {\r\n        case '>':\r\n            return CriterionType.GREATER_THAN;\r\n        case '>=':\r\n            return CriterionType.GREATER_THAN_OR_EQUAL;\r\n        case '<':\r\n            return CriterionType.LESS_THAN;\r\n        case '<=':\r\n            return CriterionType.LESS_THAN_OR_EQUAL;\r\n        case '<>':\r\n            return CriterionType.NOT_EQUAL;\r\n        case '=':\r\n            return CriterionType.EQUAL;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexport const buildCriterionLambda = (criterion, arithmeticHelper) => {\r\n    switch (criterion.operator) {\r\n        case CriterionType.GREATER_THAN: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) > 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.GREATER_THAN_OR_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) >= 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.LESS_THAN: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) < 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.LESS_THAN_OR_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) <= 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => {\r\n                    if (typeof cellValue === 'number') {\r\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) === 0;\r\n                    }\r\n                    else if (typeof cellValue === 'string') {\r\n                        if (cellValue === '') {\r\n                            return false;\r\n                        }\r\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\r\n                        if (val === undefined) {\r\n                            return false;\r\n                        }\r\n                        return arithmeticHelper.floatCmp(val, criterion.value) === 0;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                };\r\n            }\r\n            else if (typeof criterion.value === 'string') {\r\n                return arithmeticHelper.eqMatcherFunction(criterion.value);\r\n            }\r\n            else if (typeof criterion.value === 'boolean') {\r\n                return (cellValue) => (typeof cellValue === 'boolean' && cellValue === criterion.value);\r\n            }\r\n            else {\r\n                return (cellValue) => (cellValue === EmptyValue);\r\n            }\r\n        }\r\n        case CriterionType.NOT_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => {\r\n                    if (typeof cellValue === 'number') {\r\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) !== 0;\r\n                    }\r\n                    else if (typeof cellValue === 'string') {\r\n                        if (cellValue === '') {\r\n                            return true;\r\n                        }\r\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\r\n                        if (val === undefined) {\r\n                            return true;\r\n                        }\r\n                        return arithmeticHelper.floatCmp(val, criterion.value) !== 0;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                };\r\n            }\r\n            else if (typeof criterion.value === 'string') {\r\n                return arithmeticHelper.neqMatcherFunction(criterion.value);\r\n            }\r\n            else if (typeof criterion.value === 'boolean') {\r\n                return (cellValue) => (typeof cellValue !== 'boolean' || cellValue !== criterion.value);\r\n            }\r\n            else {\r\n                return (cellValue) => (cellValue !== EmptyValue);\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CombinedTransformer } from './dependencyTransformers/CombinedTransformer';\r\nimport { StatType } from './statistics';\r\nexport class LazilyTransformingAstService {\r\n    constructor(stats) {\r\n        this.stats = stats;\r\n        this.transformations = [];\r\n    }\r\n    version() {\r\n        return this.transformations.length;\r\n    }\r\n    addTransformation(transformation) {\r\n        if (this.combinedTransformer !== undefined) {\r\n            this.combinedTransformer.add(transformation);\r\n        }\r\n        else {\r\n            this.transformations.push(transformation);\r\n        }\r\n        return this.version();\r\n    }\r\n    beginCombinedMode(sheet) {\r\n        this.combinedTransformer = new CombinedTransformer(sheet);\r\n    }\r\n    commitCombinedMode() {\r\n        if (this.combinedTransformer === undefined) {\r\n            throw Error('Combined mode wasn\\'t started');\r\n        }\r\n        this.transformations.push(this.combinedTransformer);\r\n        this.combinedTransformer = undefined;\r\n        return this.version();\r\n    }\r\n    applyTransformations(ast, address, version) {\r\n        this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\r\n        for (let v = version; v < this.transformations.length; v++) {\r\n            const transformation = this.transformations[v];\r\n            if (transformation.isIrreversible()) {\r\n                this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\r\n                this.parser.rememberNewAst(ast);\r\n            }\r\n            const [newAst, newAddress] = transformation.transformSingleAst(ast, address);\r\n            ast = newAst;\r\n            address = newAddress;\r\n        }\r\n        const cachedAst = this.parser.rememberNewAst(ast);\r\n        this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\r\n        return [cachedAst, address, this.transformations.length];\r\n    }\r\n    *getTransformationsFrom(version, filter) {\r\n        for (let v = version; v < this.transformations.length; v++) {\r\n            const transformation = this.transformations[v];\r\n            if (!filter || filter(transformation)) {\r\n                yield transformation;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport class CombinedTransformer {\r\n    constructor(sheet) {\r\n        this.sheet = sheet;\r\n        this.transformations = [];\r\n    }\r\n    add(transformation) {\r\n        this.transformations.push(transformation);\r\n    }\r\n    performEagerTransformations(graph, parser) {\r\n        this.transformations.forEach(transformation => transformation.performEagerTransformations(graph, parser));\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        let [transformedAst, transformedAddress] = [ast, address];\r\n        this.transformations.forEach(transformation => {\r\n            [transformedAst, transformedAddress] = transformation.transformSingleAst(transformedAst, transformedAddress);\r\n        });\r\n        return [transformedAst, transformedAddress];\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\r\nimport { ColumnIndex } from './ColumnIndex';\r\nexport function buildColumnSearchStrategy(dependencyGraph, config, statistics) {\r\n    if (config.useColumnIndex) {\r\n        return new ColumnIndex(dependencyGraph, config, statistics);\r\n    }\r\n    else {\r\n        return new ColumnBinarySearch(dependencyGraph);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AdvancedFind } from './AdvancedFind';\r\nexport class ColumnBinarySearch extends AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        super(dependencyGraph);\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars \r\n    add(value, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    remove(value, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    change(oldValue, newValue, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    applyChanges(contentChanges) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    addColumns(columnsSpan) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeColumns(columnsSpan) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeSheet(sheetId) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeValues(range) {\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    find(searchKey, rangeValue, searchOptions) {\r\n        return this.basicFind(searchKey, rangeValue, 'row', searchOptions);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { getRawValue } from '../interpreter/InterpreterValue';\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { findLastOccurrenceInOrderedRange } from '../interpreter/binarySearch';\r\nexport class AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    advancedFind(keyMatcher, rangeValue) {\r\n        let values;\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            values = rangeValue.valuesFromTopLeftCorner();\r\n        }\r\n        else {\r\n            values = this.dependencyGraph.computeListOfValuesInRange(range);\r\n        }\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (keyMatcher(getRawValue(values[i]))) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    basicFind(searchKey, rangeValue, searchCoordinate, { ordering, matchExactly }) {\r\n        const normalizedSearchKey = typeof searchKey === 'string' ? forceNormalizeString(searchKey) : searchKey;\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return this.findNormalizedValue(normalizedSearchKey, rangeValue.valuesFromTopLeftCorner());\r\n        }\r\n        if (ordering === 'none') {\r\n            return this.findNormalizedValue(normalizedSearchKey, this.dependencyGraph.computeListOfValuesInRange(range));\r\n        }\r\n        return findLastOccurrenceInOrderedRange(normalizedSearchKey, range, { searchCoordinate, orderingDirection: ordering, matchExactly }, this.dependencyGraph);\r\n    }\r\n    findNormalizedValue(searchKey, searchArray) {\r\n        return searchArray\r\n            .map(getRawValue)\r\n            .map(val => typeof val === 'string' ? forceNormalizeString(val) : val)\r\n            .indexOf(searchKey);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, simpleCellAddress } from '../Cell';\r\nimport { EmptyValue, getRawValue } from './InterpreterValue';\r\nconst NOT_FOUND = -1;\r\n/*\r\n * Searches for the searchKey in a sorted 1-D range.\r\n *\r\n * Options:\r\n * - searchCoordinate - must be set to either 'row' or 'col' to indicate the dimension of the search,\r\n * - orderingDirection - must be set to either 'asc' or 'desc' to indicate the ordering direction for the search range,\r\n * - matchExactly - when set to false, searches for the lower/upper bound.\r\n *\r\n * Semantics:\r\n * - If orderingDirection === 'asc', searches for the lower bound for the searchKey value (unless marchExactly === true).\r\n * - If orderingDirection === 'desc', searches for the upper bound for the searchKey value (unless marchExactly === true).\r\n * - If the search range contains duplicates, returns the last matching value.\r\n * - If no value in the range satisfies the above, returns -1.\r\n *\r\n * Note: this function does not normalize input strings.\r\n */\r\nexport function findLastOccurrenceInOrderedRange(searchKey, range, { searchCoordinate, orderingDirection, matchExactly }, dependencyGraph) {\r\n    const start = range.start[searchCoordinate];\r\n    const end = searchCoordinate === 'col' ? range.effectiveEndColumn(dependencyGraph) : range.effectiveEndRow(dependencyGraph);\r\n    const getValueFromIndexFn = searchCoordinate === 'col'\r\n        ? (index) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, index, range.start.row)))\r\n        : (index) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, range.start.col, index)));\r\n    const compareFn = orderingDirection === 'asc'\r\n        ? (left, right) => compare(left, right)\r\n        : (left, right) => -compare(left, right);\r\n    const foundIndex = findLastMatchingIndex(index => compareFn(searchKey, getValueFromIndexFn(index)) >= 0, start, end);\r\n    const foundValue = getValueFromIndexFn(foundIndex);\r\n    if (foundIndex === NOT_FOUND || typeof foundValue !== typeof searchKey) {\r\n        return NOT_FOUND;\r\n    }\r\n    if (matchExactly && foundValue !== searchKey) {\r\n        return NOT_FOUND;\r\n    }\r\n    return foundIndex - start;\r\n}\r\n/*\r\n * Searches for the searchKey in a sorted array.\r\n * Param orderingDirection must be set to either 'asc' or 'desc' to indicate the ordering direction of the array.\r\n *\r\n * Semantics:\r\n * - If orderingDirection === 'asc', searches for the lower bound for the searchKey value.\r\n * - If orderingDirection === 'desc', searches for the upper bound for the searchKey value.\r\n * - If the array contains duplicates, returns the last matching value.\r\n * - If no value in the range satisfies the above, returns -1.\r\n */\r\nexport function findLastOccurrenceInOrderedArray(searchKey, array, orderingDirection = 'asc') {\r\n    const predicate = orderingDirection === 'asc'\r\n        ? (index) => compare(searchKey, array[index]) >= 0\r\n        : (index) => -compare(searchKey, array[index]) >= 0;\r\n    return findLastMatchingIndex(predicate, 0, array.length - 1);\r\n}\r\n/*\r\n * Returns:\r\n *   - the last element in the range for which predicate === true or,\r\n *   - value -1 if predicate === false for all elements.\r\n * Assumption: All elements for which predicate === true are before the elements for which predicate === false.\r\n */\r\nexport function findLastMatchingIndex(predicate, startRange, endRange) {\r\n    let start = startRange;\r\n    let end = endRange;\r\n    while (start < end) {\r\n        const pivot = Math.ceil((start + end) / 2);\r\n        if (predicate(pivot)) {\r\n            start = pivot;\r\n        }\r\n        else {\r\n            end = pivot - 1;\r\n        }\r\n    }\r\n    if (start === end && predicate(start)) {\r\n        return start;\r\n    }\r\n    return NOT_FOUND;\r\n}\r\n/*\r\n * numbers < strings < false < true\r\n */\r\nexport function compare(left, right) {\r\n    if (typeof left === typeof right) {\r\n        if (left === EmptyValue) {\r\n            return 0;\r\n        }\r\n        return (left < right ? -1 : (left > right ? 1 : 0));\r\n    }\r\n    if (left === EmptyValue) {\r\n        return -1;\r\n    }\r\n    if (right === EmptyValue) {\r\n        return 1;\r\n    }\r\n    if (right instanceof CellError) {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'number' && typeof right === 'string') {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'number' && typeof right === 'boolean') {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'string' && typeof right === 'number') {\r\n        return 1;\r\n    }\r\n    if (typeof left === 'string' && typeof right === 'boolean') {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, movedSimpleCellAddress } from '../Cell';\r\nimport { AddRowsTransformer } from '../dependencyTransformers/AddRowsTransformer';\r\nimport { RemoveRowsTransformer } from '../dependencyTransformers/RemoveRowsTransformer';\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { StatType } from '../statistics';\r\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\r\nexport class ColumnIndex {\r\n    constructor(dependencyGraph, config, stats) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.config = config;\r\n        this.stats = stats;\r\n        this.index = new Map();\r\n        this.transformingService = this.dependencyGraph.lazilyTransformingAstService;\r\n        this.binarySearchStrategy = new ColumnBinarySearch(dependencyGraph);\r\n    }\r\n    add(value, address) {\r\n        if (value === EmptyValue || value instanceof CellError) {\r\n            return;\r\n        }\r\n        else if (value instanceof SimpleRangeValue) {\r\n            for (const [arrayValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                this.addSingleCellValue(getRawValue(arrayValue), cellAddress);\r\n            }\r\n        }\r\n        else {\r\n            this.addSingleCellValue(value, address);\r\n        }\r\n    }\r\n    remove(value, address) {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            for (const [arrayValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                this.removeSingleValue(getRawValue(arrayValue), cellAddress);\r\n            }\r\n        }\r\n        else {\r\n            this.removeSingleValue(value, address);\r\n        }\r\n    }\r\n    change(oldValue, newValue, address) {\r\n        if (oldValue === newValue) {\r\n            return;\r\n        }\r\n        this.remove(oldValue, address);\r\n        this.add(newValue, address);\r\n    }\r\n    applyChanges(contentChanges) {\r\n        for (const change of contentChanges) {\r\n            if (change.oldValue !== undefined) {\r\n                this.change(getRawValue(change.oldValue), getRawValue(change.value), change.address);\r\n            }\r\n        }\r\n    }\r\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\r\n        for (const [value, address] of sourceRange) {\r\n            const targetAddress = movedSimpleCellAddress(address, toSheet, toRight, toBottom);\r\n            this.remove(value, address);\r\n            this.add(value, targetAddress);\r\n        }\r\n    }\r\n    removeValues(range) {\r\n        for (const [value, address] of range) {\r\n            this.remove(value, address);\r\n        }\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    find(searchKey, rangeValue, { ordering, matchExactly }) {\r\n        const handlingDuplicates = matchExactly === true ? 'findFirst' : 'findLast';\r\n        const resultUsingColumnIndex = this.findUsingColumnIndex(searchKey, rangeValue, handlingDuplicates);\r\n        return resultUsingColumnIndex !== undefined ? resultUsingColumnIndex : this.binarySearchStrategy.find(searchKey, rangeValue, { ordering, matchExactly });\r\n    }\r\n    findUsingColumnIndex(key, rangeValue, handlingDuplicates) {\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return undefined;\r\n        }\r\n        this.ensureRecentData(range.sheet, range.start.col, key);\r\n        const columnMap = this.getColumnMap(range.sheet, range.start.col);\r\n        if (!columnMap) {\r\n            return -1;\r\n        }\r\n        const normalizedKey = typeof key === 'string' ? forceNormalizeString(key) : key;\r\n        const valueIndexForTheKey = columnMap.get(normalizedKey);\r\n        if (!valueIndexForTheKey || !valueIndexForTheKey.index || valueIndexForTheKey.index.length === 0) {\r\n            return undefined;\r\n        }\r\n        const rowNumber = ColumnIndex.findRowBelongingToRange(valueIndexForTheKey, range, handlingDuplicates);\r\n        return rowNumber !== undefined ? rowNumber - range.start.row : undefined;\r\n    }\r\n    static findRowBelongingToRange(valueIndex, range, handlingDuplicates) {\r\n        const start = range.start.row;\r\n        const end = range.end.row;\r\n        const positionInIndex = handlingDuplicates === 'findFirst'\r\n            ? findInOrderedArray(start, valueIndex.index, 'upperBound')\r\n            : findInOrderedArray(end, valueIndex.index, 'lowerBound');\r\n        if (positionInIndex === -1) {\r\n            return undefined;\r\n        }\r\n        const rowNumber = valueIndex.index[positionInIndex];\r\n        const isRowNumberBelongingToRange = rowNumber >= start && rowNumber <= end;\r\n        return isRowNumberBelongingToRange ? rowNumber : undefined;\r\n    }\r\n    advancedFind(keyMatcher, range) {\r\n        return this.binarySearchStrategy.advancedFind(keyMatcher, range);\r\n    }\r\n    addColumns(columnsSpan) {\r\n        const sheetIndex = this.index.get(columnsSpan.sheet);\r\n        if (!sheetIndex) {\r\n            return;\r\n        }\r\n        sheetIndex.splice(columnsSpan.columnStart, 0, ...Array(columnsSpan.numberOfColumns));\r\n    }\r\n    removeColumns(columnsSpan) {\r\n        const sheetIndex = this.index.get(columnsSpan.sheet);\r\n        if (!sheetIndex) {\r\n            return;\r\n        }\r\n        sheetIndex.splice(columnsSpan.columnStart, columnsSpan.numberOfColumns);\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.index.delete(sheetId);\r\n    }\r\n    getColumnMap(sheet, col) {\r\n        if (!this.index.has(sheet)) {\r\n            this.index.set(sheet, []);\r\n        }\r\n        const sheetMap = this.index.get(sheet); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n        let columnMap = sheetMap[col];\r\n        if (!columnMap) {\r\n            columnMap = new Map();\r\n            sheetMap[col] = columnMap;\r\n        }\r\n        return columnMap;\r\n    }\r\n    getValueIndex(sheet, col, value) {\r\n        const columnMap = this.getColumnMap(sheet, col);\r\n        let index = this.getColumnMap(sheet, col).get(value);\r\n        if (!index) {\r\n            index = {\r\n                version: this.transformingService.version(),\r\n                index: [],\r\n            };\r\n            columnMap.set(value, index);\r\n        }\r\n        return index;\r\n    }\r\n    ensureRecentData(sheet, col, value) {\r\n        const valueIndex = this.getValueIndex(sheet, col, value);\r\n        const actualVersion = this.transformingService.version();\r\n        if (valueIndex.version === actualVersion) {\r\n            return;\r\n        }\r\n        const relevantTransformations = this.transformingService.getTransformationsFrom(valueIndex.version, (transformation) => {\r\n            return transformation.sheet === sheet && (transformation instanceof AddRowsTransformer || transformation instanceof RemoveRowsTransformer);\r\n        });\r\n        for (const transformation of relevantTransformations) {\r\n            if (transformation instanceof AddRowsTransformer) {\r\n                this.addRows(col, transformation.rowsSpan, value);\r\n            }\r\n            else if (transformation instanceof RemoveRowsTransformer) {\r\n                this.removeRows(col, transformation.rowsSpan, value);\r\n            }\r\n        }\r\n        valueIndex.version = actualVersion;\r\n    }\r\n    addSingleCellValue(value, address) {\r\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\r\n            this.ensureRecentData(address.sheet, address.col, value);\r\n            if (typeof value === 'string') {\r\n                value = forceNormalizeString(value);\r\n            }\r\n            const valueIndex = this.getValueIndex(address.sheet, address.col, value);\r\n            ColumnIndex.addValue(valueIndex, address.row);\r\n        });\r\n    }\r\n    removeSingleValue(value, address) {\r\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\r\n            this.ensureRecentData(address.sheet, address.col, value);\r\n            const columnMap = this.getColumnMap(address.sheet, address.col);\r\n            if (typeof value === 'string') {\r\n                value = forceNormalizeString(value);\r\n            }\r\n            const valueIndex = columnMap.get(value);\r\n            if (!valueIndex) {\r\n                return;\r\n            }\r\n            const positionInIndex = findInOrderedArray(address.row, valueIndex.index);\r\n            if (positionInIndex > -1) {\r\n                valueIndex.index.splice(positionInIndex, 1);\r\n            }\r\n            if (valueIndex.index.length === 0) {\r\n                columnMap.delete(value);\r\n            }\r\n            if (columnMap.size === 0) {\r\n                delete this.index.get(address.sheet)[address.col]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n            }\r\n        });\r\n    }\r\n    addRows(col, rowsSpan, value) {\r\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\r\n        ColumnIndex.shiftRows(valueIndex, rowsSpan.rowStart, rowsSpan.numberOfRows);\r\n    }\r\n    removeRows(col, rowsSpan, value) {\r\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\r\n        ColumnIndex.removeRowsFromValues(valueIndex, rowsSpan);\r\n        ColumnIndex.shiftRows(valueIndex, rowsSpan.rowEnd + 1, -rowsSpan.numberOfRows);\r\n    }\r\n    static addValue(valueIndex, rowNumber) {\r\n        const rowIndex = findInOrderedArray(rowNumber, valueIndex.index, 'lowerBound');\r\n        const isRowNumberAlreadyInIndex = valueIndex.index[rowIndex] === rowNumber;\r\n        if (!isRowNumberAlreadyInIndex) {\r\n            valueIndex.index.splice(rowIndex + 1, 0, rowNumber);\r\n        }\r\n    }\r\n    static removeRowsFromValues(valueIndex, rowsSpan) {\r\n        const start = findInOrderedArray(rowsSpan.rowStart, valueIndex.index, 'upperBound');\r\n        const end = findInOrderedArray(rowsSpan.rowEnd, valueIndex.index, 'lowerBound');\r\n        const isFoundSpanValid = start > -1 && end > -1 && start <= end && valueIndex.index[start] <= rowsSpan.rowEnd;\r\n        if (isFoundSpanValid) {\r\n            valueIndex.index.splice(start, end - start + 1);\r\n        }\r\n    }\r\n    static shiftRows(valueIndex, afterRow, numberOfRows) {\r\n        const positionInIndex = findInOrderedArray(afterRow, valueIndex.index, 'upperBound');\r\n        if (positionInIndex === -1) {\r\n            return;\r\n        }\r\n        for (let i = positionInIndex; i < valueIndex.index.length; ++i) {\r\n            valueIndex.index[i] += numberOfRows;\r\n        }\r\n    }\r\n}\r\n/*\r\n * Returns:\r\n * - index of the key, if the key exists in the array,\r\n * - index of the lower/upper bound (depending on handlingMisses parameter) otherwise.\r\n * Assumption: The array is ordered ascending and contains no repetitions.\r\n */\r\nexport function findInOrderedArray(key, values, handlingMisses = 'upperBound') {\r\n    let start = 0;\r\n    let end = values.length - 1;\r\n    while (start <= end) {\r\n        const center = Math.floor((start + end) / 2);\r\n        if (key > values[center]) {\r\n            start = center + 1;\r\n        }\r\n        else if (key < values[center]) {\r\n            end = center - 1;\r\n        }\r\n        else {\r\n            return center;\r\n        }\r\n    }\r\n    const foundIndex = handlingMisses === 'lowerBound' ? end : start;\r\n    const isIndexInRange = foundIndex >= 0 && foundIndex <= values.length;\r\n    return isIndexInRange ? foundIndex : -1;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport class NumberLiteralHelper {\r\n    constructor(config) {\r\n        this.config = config;\r\n        const thousandSeparator = this.config.thousandSeparator === '.' ? `\\\\${this.config.thousandSeparator}` : this.config.thousandSeparator;\r\n        const decimalSeparator = this.config.decimalSeparator === '.' ? `\\\\${this.config.decimalSeparator}` : this.config.decimalSeparator;\r\n        this.numberPattern = new RegExp(`^([+-]?((${decimalSeparator}\\\\d+)|(\\\\d+(${thousandSeparator}\\\\d{3,})*(${decimalSeparator}\\\\d*)?)))(e[+-]?\\\\d+)?$`);\r\n        this.allThousandSeparatorsRegex = new RegExp(`${thousandSeparator}`, 'g');\r\n    }\r\n    numericStringToMaybeNumber(input) {\r\n        if (this.numberPattern.test(input)) {\r\n            const num = this.numericStringToNumber(input);\r\n            if (isNaN(num)) {\r\n                return undefined;\r\n            }\r\n            return num;\r\n        }\r\n        return undefined;\r\n    }\r\n    numericStringToNumber(input) {\r\n        const normalized = input\r\n            .replace(this.allThousandSeparatorsRegex, '')\r\n            .replace(this.config.decimalSeparator, '.');\r\n        return Number(normalized);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from './Cell';\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex } from './DependencyGraph';\r\nimport { buildLexerConfig, Unparser } from './parser';\r\nexport class Serialization {\r\n    constructor(dependencyGraph, unparser, exporter) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.unparser = unparser;\r\n        this.exporter = exporter;\r\n    }\r\n    getCellHyperlink(address) {\r\n        const formulaVertex = this.dependencyGraph.getCell(address);\r\n        if (formulaVertex instanceof FormulaCellVertex) {\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            if ('HYPERLINK' === formula.procedureName) {\r\n                return formula.hyperlink;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getCellFormula(address, targetAddress) {\r\n        const formulaVertex = this.dependencyGraph.getCell(address);\r\n        if (formulaVertex instanceof FormulaCellVertex) {\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            targetAddress = targetAddress !== null && targetAddress !== void 0 ? targetAddress : address;\r\n            return this.unparser.unparse(formula, targetAddress);\r\n        }\r\n        else if (formulaVertex instanceof ArrayVertex) {\r\n            const arrayVertexAddress = formulaVertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\r\n            if (arrayVertexAddress.row !== address.row || arrayVertexAddress.col !== address.col || arrayVertexAddress.sheet !== address.sheet) {\r\n                return undefined;\r\n            }\r\n            targetAddress = targetAddress !== null && targetAddress !== void 0 ? targetAddress : address;\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            if (formula !== undefined) {\r\n                return this.unparser.unparse(formula, targetAddress);\r\n            }\r\n        }\r\n        else if (formulaVertex instanceof ParsingErrorVertex) {\r\n            return formulaVertex.getFormula();\r\n        }\r\n        return undefined;\r\n    }\r\n    getCellSerialized(address, targetAddress) {\r\n        var _a;\r\n        return (_a = this.getCellFormula(address, targetAddress)) !== null && _a !== void 0 ? _a : this.getRawValue(address);\r\n    }\r\n    getCellValue(address) {\r\n        return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\r\n    }\r\n    getRawValue(address) {\r\n        return this.dependencyGraph.getRawValue(address);\r\n    }\r\n    getSheetValues(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellValue(arg));\r\n    }\r\n    getSheetFormulas(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellFormula(arg));\r\n    }\r\n    genericSheetGetter(sheet, getter) {\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const arr = new Array(sheetHeight);\r\n        for (let i = 0; i < sheetHeight; i++) {\r\n            arr[i] = new Array(sheetWidth);\r\n            for (let j = 0; j < sheetWidth; j++) {\r\n                const address = simpleCellAddress(sheet, j, i);\r\n                arr[i][j] = getter(address);\r\n            }\r\n            for (let j = sheetWidth - 1; j >= 0; j--) {\r\n                if (arr[i][j] === null || arr[i][j] === undefined) {\r\n                    arr[i].pop();\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = sheetHeight - 1; i >= 0; i--) {\r\n            if (arr[i].length === 0) {\r\n                arr.pop();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    genericAllSheetsGetter(sheetGetter) {\r\n        const result = {};\r\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\r\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\r\n            result[sheetName] = sheetGetter(sheetId);\r\n        }\r\n        return result;\r\n    }\r\n    getSheetSerialized(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellSerialized(arg));\r\n    }\r\n    getAllSheetsValues() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetValues(arg));\r\n    }\r\n    getAllSheetsFormulas() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetFormulas(arg));\r\n    }\r\n    getAllSheetsSerialized() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetSerialized(arg));\r\n    }\r\n    getAllNamedExpressionsSerialized() {\r\n        const idMap = [];\r\n        let id = 0;\r\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\r\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\r\n            idMap[sheetId] = id;\r\n            id++;\r\n        }\r\n        return this.dependencyGraph.namedExpressions.getAllNamedExpressions().map((entry) => {\r\n            return {\r\n                name: entry.expression.displayName,\r\n                expression: this.getCellSerialized(entry.expression.address),\r\n                scope: entry.scope !== undefined ? idMap[entry.scope] : undefined,\r\n                options: entry.expression.options\r\n            };\r\n        });\r\n    }\r\n    withNewConfig(newConfig, namedExpressions) {\r\n        const newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\r\n        return new Serialization(this.dependencyGraph, newUnparser, this.exporter);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport function objectDestroy(object) {\r\n    for (const [key, value] of Object.entries(object)) {\r\n        if (value instanceof Function) {\r\n            object[key] = postMortem(value);\r\n        }\r\n        else {\r\n            delete object[key];\r\n        }\r\n    }\r\n}\r\nfunction postMortem(method) {\r\n    return () => {\r\n        throw new Error(`The \"${method}\" method cannot be called because this HyperFormula instance has been destroyed`);\r\n    };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { TinyEmitter } from 'tiny-emitter';\r\nexport var Events;\r\n(function (Events) {\r\n    Events[\"SheetAdded\"] = \"sheetAdded\";\r\n    Events[\"SheetRemoved\"] = \"sheetRemoved\";\r\n    Events[\"SheetRenamed\"] = \"sheetRenamed\";\r\n    Events[\"NamedExpressionAdded\"] = \"namedExpressionAdded\";\r\n    Events[\"NamedExpressionRemoved\"] = \"namedExpressionRemoved\";\r\n    Events[\"ValuesUpdated\"] = \"valuesUpdated\";\r\n    Events[\"EvaluationSuspended\"] = \"evaluationSuspended\";\r\n    Events[\"EvaluationResumed\"] = \"evaluationResumed\";\r\n})(Events || (Events = {}));\r\nexport class Emitter extends TinyEmitter {\r\n    emit(event, ...args) {\r\n        super.emit(event, ...args);\r\n        return this;\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__172__;","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nconst dictionary = {\r\n    errors: {\r\n        CYCLE: '#CYCLE!',\r\n        DIV_BY_ZERO: '#DIV/0!',\r\n        ERROR: '#ERROR!',\r\n        NA: '#N/A',\r\n        NAME: '#NAME?',\r\n        NUM: '#NUM!',\r\n        REF: '#REF!',\r\n        SPILL: '#SPILL!',\r\n        VALUE: '#VALUE!',\r\n    },\r\n    functions: {\r\n        FILTER: 'FILTER',\r\n        ADDRESS: 'ADDRESS',\r\n        'ARRAY_CONSTRAIN': 'ARRAY_CONSTRAIN',\r\n        ARRAYFORMULA: 'ARRAYFORMULA',\r\n        ABS: 'ABS',\r\n        ACOS: 'ACOS',\r\n        ACOSH: 'ACOSH',\r\n        ACOT: 'ACOT',\r\n        ACOTH: 'ACOTH',\r\n        AND: 'AND',\r\n        ARABIC: 'ARABIC',\r\n        ASIN: 'ASIN',\r\n        ASINH: 'ASINH',\r\n        ATAN2: 'ATAN2',\r\n        ATAN: 'ATAN',\r\n        ATANH: 'ATANH',\r\n        AVERAGE: 'AVERAGE',\r\n        AVERAGEA: 'AVERAGEA',\r\n        AVERAGEIF: 'AVERAGEIF',\r\n        BASE: 'BASE',\r\n        BIN2DEC: 'BIN2DEC',\r\n        BIN2HEX: 'BIN2HEX',\r\n        BIN2OCT: 'BIN2OCT',\r\n        BITAND: 'BITAND',\r\n        BITLSHIFT: 'BITLSHIFT',\r\n        BITOR: 'BITOR',\r\n        BITRSHIFT: 'BITRSHIFT',\r\n        BITXOR: 'BITXOR',\r\n        CEILING: 'CEILING',\r\n        CHAR: 'CHAR',\r\n        CHOOSE: 'CHOOSE',\r\n        CLEAN: 'CLEAN',\r\n        CODE: 'CODE',\r\n        COLUMN: 'COLUMN',\r\n        COLUMNS: 'COLUMNS',\r\n        CONCATENATE: 'CONCATENATE',\r\n        CORREL: 'CORREL',\r\n        COS: 'COS',\r\n        COSH: 'COSH',\r\n        COT: 'COT',\r\n        COTH: 'COTH',\r\n        COUNT: 'COUNT',\r\n        COUNTA: 'COUNTA',\r\n        COUNTBLANK: 'COUNTBLANK',\r\n        COUNTIF: 'COUNTIF',\r\n        COUNTIFS: 'COUNTIFS',\r\n        COUNTUNIQUE: 'COUNTUNIQUE',\r\n        CSC: 'CSC',\r\n        CSCH: 'CSCH',\r\n        CUMIPMT: 'CUMIPMT',\r\n        CUMPRINC: 'CUMPRINC',\r\n        DATE: 'DATE',\r\n        DATEDIF: 'DATEDIF',\r\n        DATEVALUE: 'DATEVALUE',\r\n        DAY: 'DAY',\r\n        DAYS360: 'DAYS360',\r\n        DAYS: 'DAYS',\r\n        DB: 'DB',\r\n        DDB: 'DDB',\r\n        DEC2BIN: 'DEC2BIN',\r\n        DEC2HEX: 'DEC2HEX',\r\n        DEC2OCT: 'DEC2OCT',\r\n        DECIMAL: 'DECIMAL',\r\n        DEGREES: 'DEGREES',\r\n        DELTA: 'DELTA',\r\n        DOLLARDE: 'DOLLARDE',\r\n        DOLLARFR: 'DOLLARFR',\r\n        EDATE: 'EDATE',\r\n        EFFECT: 'EFFECT',\r\n        EOMONTH: 'EOMONTH',\r\n        ERF: 'ERF',\r\n        ERFC: 'ERFC',\r\n        EVEN: 'EVEN',\r\n        EXACT: 'EXACT',\r\n        EXP: 'EXP',\r\n        FALSE: 'FALSE',\r\n        FIND: 'FIND',\r\n        FORMULATEXT: 'FORMULATEXT',\r\n        FV: 'FV',\r\n        FVSCHEDULE: 'FVSCHEDULE',\r\n        HEX2BIN: 'HEX2BIN',\r\n        HEX2DEC: 'HEX2DEC',\r\n        HEX2OCT: 'HEX2OCT',\r\n        HLOOKUP: 'HLOOKUP',\r\n        HOUR: 'HOUR',\r\n        HYPERLINK: 'HYPERLINK',\r\n        IF: 'IF',\r\n        IFERROR: 'IFERROR',\r\n        IFNA: 'IFNA',\r\n        IFS: 'IFS',\r\n        INDEX: 'INDEX',\r\n        INT: 'INT',\r\n        INTERVAL: 'INTERVAL',\r\n        IPMT: 'IPMT',\r\n        ISBINARY: 'ISBINARY',\r\n        ISBLANK: 'ISBLANK',\r\n        ISERR: 'ISERR',\r\n        ISERROR: 'ISERROR',\r\n        ISEVEN: 'ISEVEN',\r\n        ISFORMULA: 'ISFORMULA',\r\n        ISLOGICAL: 'ISLOGICAL',\r\n        ISNA: 'ISNA',\r\n        ISNONTEXT: 'ISNONTEXT',\r\n        ISNUMBER: 'ISNUMBER',\r\n        ISODD: 'ISODD',\r\n        ISOWEEKNUM: 'ISOWEEKNUM',\r\n        ISPMT: 'ISPMT',\r\n        ISREF: 'ISREF',\r\n        ISTEXT: 'ISTEXT',\r\n        LEFT: 'LEFT',\r\n        LEN: 'LEN',\r\n        LN: 'LN',\r\n        LOG10: 'LOG10',\r\n        LOG: 'LOG',\r\n        LOWER: 'LOWER',\r\n        MATCH: 'MATCH',\r\n        MAX: 'MAX',\r\n        MAXA: 'MAXA',\r\n        MAXIFS: 'MAXIFS',\r\n        MAXPOOL: 'MAXPOOL',\r\n        MEDIAN: 'MEDIAN',\r\n        MEDIANPOOL: 'MEDIANPOOL',\r\n        MID: 'MID',\r\n        MIN: 'MIN',\r\n        MINA: 'MINA',\r\n        MINIFS: 'MINIFS',\r\n        MINUTE: 'MINUTE',\r\n        MIRR: 'MIRR',\r\n        MMULT: 'MMULT',\r\n        MOD: 'MOD',\r\n        MONTH: 'MONTH',\r\n        NA: 'NA',\r\n        NETWORKDAYS: 'NETWORKDAYS',\r\n        'NETWORKDAYS.INTL': 'NETWORKDAYS.INTL',\r\n        NOMINAL: 'NOMINAL',\r\n        NOT: 'NOT',\r\n        NOW: 'NOW',\r\n        NPER: 'NPER',\r\n        NPV: 'NPV',\r\n        OCT2BIN: 'OCT2BIN',\r\n        OCT2DEC: 'OCT2DEC',\r\n        OCT2HEX: 'OCT2HEX',\r\n        ODD: 'ODD',\r\n        OFFSET: 'OFFSET',\r\n        OR: 'OR',\r\n        PI: 'PI',\r\n        PMT: 'PMT',\r\n        PDURATION: 'PDURATION',\r\n        PRODUCT: 'PRODUCT',\r\n        POWER: 'POWER',\r\n        PPMT: 'PPMT',\r\n        PROPER: 'PROPER',\r\n        PV: 'PV',\r\n        RADIANS: 'RADIANS',\r\n        RAND: 'RAND',\r\n        RATE: 'RATE',\r\n        REPLACE: 'REPLACE',\r\n        REPT: 'REPT',\r\n        RIGHT: 'RIGHT',\r\n        ROMAN: 'ROMAN',\r\n        ROUND: 'ROUND',\r\n        ROUNDDOWN: 'ROUNDDOWN',\r\n        ROUNDUP: 'ROUNDUP',\r\n        ROW: 'ROW',\r\n        ROWS: 'ROWS',\r\n        RRI: 'RRI',\r\n        SEARCH: 'SEARCH',\r\n        SEC: 'SEC',\r\n        SECH: 'SECH',\r\n        SECOND: 'SECOND',\r\n        SHEET: 'SHEET',\r\n        SHEETS: 'SHEETS',\r\n        SIN: 'SIN',\r\n        SINH: 'SINH',\r\n        SLN: 'SLN',\r\n        SPLIT: 'SPLIT',\r\n        SQRT: 'SQRT',\r\n        STDEVA: 'STDEVA',\r\n        'STDEV.P': 'STDEV.P',\r\n        STDEVPA: 'STDEVPA',\r\n        'STDEV.S': 'STDEV.S',\r\n        SUBSTITUTE: 'SUBSTITUTE',\r\n        SUBTOTAL: 'SUBTOTAL',\r\n        SUM: 'SUM',\r\n        SUMIF: 'SUMIF',\r\n        SUMIFS: 'SUMIFS',\r\n        SUMPRODUCT: 'SUMPRODUCT',\r\n        SUMSQ: 'SUMSQ',\r\n        SWITCH: 'SWITCH',\r\n        SYD: 'SYD',\r\n        T: 'T',\r\n        TAN: 'TAN',\r\n        TANH: 'TANH',\r\n        TBILLEQ: 'TBILLEQ',\r\n        TBILLPRICE: 'TBILLPRICE',\r\n        TBILLYIELD: 'TBILLYIELD',\r\n        TEXT: 'TEXT',\r\n        TIME: 'TIME',\r\n        TIMEVALUE: 'TIMEVALUE',\r\n        TODAY: 'TODAY',\r\n        TRANSPOSE: 'TRANSPOSE',\r\n        TRIM: 'TRIM',\r\n        TRUE: 'TRUE',\r\n        TRUNC: 'TRUNC',\r\n        UNICHAR: 'UNICHAR',\r\n        UNICODE: 'UNICODE',\r\n        UPPER: 'UPPER',\r\n        VARA: 'VARA',\r\n        'VAR.P': 'VAR.P',\r\n        VARPA: 'VARPA',\r\n        'VAR.S': 'VAR.S',\r\n        VLOOKUP: 'VLOOKUP',\r\n        WEEKDAY: 'WEEKDAY',\r\n        WEEKNUM: 'WEEKNUM',\r\n        WORKDAY: 'WORKDAY',\r\n        'WORKDAY.INTL': 'WORKDAY.INTL',\r\n        XNPV: 'XNPV',\r\n        XOR: 'XOR',\r\n        YEAR: 'YEAR',\r\n        YEARFRAC: 'YEARFRAC',\r\n        'HF.ADD': 'HF.ADD',\r\n        'HF.CONCAT': 'HF.CONCAT',\r\n        'HF.DIVIDE': 'HF.DIVIDE',\r\n        'HF.EQ': 'HF.EQ',\r\n        'HF.GT': 'HF.GT',\r\n        'HF.GTE': 'HF.GTE',\r\n        'HF.LT': 'HF.LT',\r\n        'HF.LTE': 'HF.LTE',\r\n        'HF.MINUS': 'HF.MINUS',\r\n        'HF.MULTIPLY': 'HF.MULTIPLY',\r\n        'HF.NE': 'HF.NE',\r\n        'HF.POW': 'HF.POW',\r\n        'HF.UMINUS': 'HF.UMINUS',\r\n        'HF.UNARY_PERCENT': 'HF.UNARY_PERCENT',\r\n        'HF.UPLUS': 'HF.UPLUS',\r\n        VARP: 'VARP',\r\n        VAR: 'VAR',\r\n        STDEVP: 'STDEVP',\r\n        STDEV: 'STDEV',\r\n        'EXPON.DIST': 'EXPON.DIST',\r\n        FISHER: 'FISHER',\r\n        FISHERINV: 'FISHERINV',\r\n        GAMMA: 'GAMMA',\r\n        'GAMMA.DIST': 'GAMMA.DIST',\r\n        GAMMALN: 'GAMMALN',\r\n        'GAMMALN.PRECISE': 'GAMMALN.PRECISE',\r\n        'GAMMA.INV': 'GAMMA.INV',\r\n        GAUSS: 'GAUSS',\r\n        FACT: 'FACT',\r\n        FACTDOUBLE: 'FACTDOUBLE',\r\n        COMBIN: 'COMBIN',\r\n        COMBINA: 'COMBINA',\r\n        GCD: 'GCD',\r\n        LCM: 'LCM',\r\n        MROUND: 'MROUND',\r\n        MULTINOMIAL: 'MULTINOMIAL',\r\n        QUOTIENT: 'QUOTIENT',\r\n        RANDBETWEEN: 'RANDBETWEEN',\r\n        SERIESSUM: 'SERIESSUM',\r\n        SIGN: 'SIGN',\r\n        SQRTPI: 'SQRTPI',\r\n        SUMX2MY2: 'SUMX2MY2',\r\n        SUMX2PY2: 'SUMX2PY2',\r\n        SUMXMY2: 'SUMXMY2',\r\n        'EXPONDIST': 'EXPONDIST',\r\n        GAMMADIST: 'GAMMADIST',\r\n        GAMMAINV: 'GAMMAINV',\r\n        'BETA.DIST': 'BETA.DIST',\r\n        BETADIST: 'BETADIST',\r\n        'BETA.INV': 'BETA.INV',\r\n        BETAINV: 'BETAINV',\r\n        'BINOM.DIST': 'BINOM.DIST',\r\n        BINOMDIST: 'BINOMDIST',\r\n        'BINOM.INV': 'BINOM.INV',\r\n        BESSELI: 'BESSELI',\r\n        BESSELJ: 'BESSELJ',\r\n        BESSELK: 'BESSELK',\r\n        BESSELY: 'BESSELY',\r\n        'CHISQ.DIST': 'CHISQ.DIST',\r\n        'CHISQ.DIST.RT': 'CHISQ.DIST.RT',\r\n        'CHISQ.INV': 'CHISQ.INV',\r\n        'CHISQ.INV.RT': 'CHISQ.INV.RT',\r\n        CHIDIST: 'CHIDIST',\r\n        CHIINV: 'CHIINV',\r\n        'F.DIST': 'F.DIST',\r\n        'F.DIST.RT': 'F.DIST.RT',\r\n        'F.INV': 'F.INV',\r\n        'F.INV.RT': 'F.INV.RT',\r\n        FDIST: 'FDIST',\r\n        FINV: 'FINV',\r\n        WEIBULL: 'WEIBULL',\r\n        'WEIBULL.DIST': 'WEIBULL.DIST',\r\n        POISSON: 'POISSON',\r\n        'POISSON.DIST': 'POISSON.DIST',\r\n        'HYPGEOM.DIST': 'HYPGEOM.DIST',\r\n        HYPGEOMDIST: 'HYPGEOMDIST',\r\n        'T.DIST': 'T.DIST',\r\n        'T.DIST.2T': 'T.DIST.2T',\r\n        'T.DIST.RT': 'T.DIST.RT',\r\n        'T.INV': 'T.INV',\r\n        'T.INV.2T': 'T.INV.2T',\r\n        TDIST: 'TDIST',\r\n        TINV: 'TINV',\r\n        LOGINV: 'LOGINV',\r\n        'LOGNORM.DIST': 'LOGNORM.DIST',\r\n        'LOGNORM.INV': 'LOGNORM.INV',\r\n        LOGNORMDIST: 'LOGNORMDIST',\r\n        'NORM.DIST': 'NORM.DIST',\r\n        'NORM.INV': 'NORM.INV',\r\n        'NORM.S.DIST': 'NORM.S.DIST',\r\n        'NORM.S.INV': 'NORM.S.INV',\r\n        NORMDIST: 'NORMDIST',\r\n        NORMINV: 'NORMINV',\r\n        NORMSDIST: 'NORMSDIST',\r\n        NORMSINV: 'NORMSINV',\r\n        PHI: 'PHI',\r\n        'NEGBINOM.DIST': 'NEGBINOM.DIST',\r\n        'NEGBINOMDIST': 'NEGBINOMDIST',\r\n        COMPLEX: 'COMPLEX',\r\n        IMABS: 'IMABS',\r\n        IMAGINARY: 'IMAGINARY',\r\n        IMARGUMENT: 'IMARGUMENT',\r\n        IMCONJUGATE: 'IMCONJUGATE',\r\n        IMCOS: 'IMCOS',\r\n        IMCOSH: 'IMCOSH',\r\n        IMCOT: 'IMCOT',\r\n        IMCSC: 'IMCSC',\r\n        IMCSCH: 'IMCSCH',\r\n        IMDIV: 'IMDIV',\r\n        IMEXP: 'IMEXP',\r\n        IMLN: 'IMLN',\r\n        IMLOG10: 'IMLOG10',\r\n        IMLOG2: 'IMLOG2',\r\n        IMPOWER: 'IMPOWER',\r\n        IMPRODUCT: 'IMPRODUCT',\r\n        IMREAL: 'IMREAL',\r\n        IMSEC: 'IMSEC',\r\n        IMSECH: 'IMSECH',\r\n        IMSIN: 'IMSIN',\r\n        IMSINH: 'IMSINH',\r\n        IMSQRT: 'IMSQRT',\r\n        IMSUB: 'IMSUB',\r\n        IMSUM: 'IMSUM',\r\n        IMTAN: 'IMTAN',\r\n        LARGE: 'LARGE',\r\n        SMALL: 'SMALL',\r\n        AVEDEV: 'AVEDEV',\r\n        CONFIDENCE: 'CONFIDENCE',\r\n        'CONFIDENCE.NORM': 'CONFIDENCE.NORM',\r\n        'CONFIDENCE.T': 'CONFIDENCE.T',\r\n        DEVSQ: 'DEVSQ',\r\n        GEOMEAN: 'GEOMEAN',\r\n        HARMEAN: 'HARMEAN',\r\n        CRITBINOM: 'CRITBINOM',\r\n        'COVARIANCE.P': 'COVARIANCE.P',\r\n        'COVARIANCE.S': 'COVARIANCE.S',\r\n        'COVAR': 'COVAR',\r\n        PEARSON: 'PEARSON',\r\n        RSQ: 'RSQ',\r\n        STANDARDIZE: 'STANDARDIZE',\r\n        'Z.TEST': 'Z.TEST',\r\n        ZTEST: 'ZTEST',\r\n        'F.TEST': 'F.TEST',\r\n        FTEST: 'FTEST',\r\n        STEYX: 'STEYX',\r\n        SLOPE: 'SLOPE',\r\n        'CHISQ.TEST': 'CHISQ.TEST',\r\n        CHITEST: 'CHITEST',\r\n        'T.TEST': 'T.TEST',\r\n        TTEST: 'TTEST',\r\n        SKEW: 'SKEW',\r\n        'SKEW.P': 'SKEW.P',\r\n        WEIBULLDIST: 'WEIBULLDIST',\r\n        VARS: 'VARS',\r\n        TINV2T: 'TINV2T',\r\n        TDISTRT: 'TDISTRT',\r\n        TDIST2T: 'TDIST2T',\r\n        STDEVS: 'STDEVS',\r\n        FINVRT: 'FINVRT',\r\n        FDISTRT: 'FDISTRT',\r\n        CHIDISTRT: 'CHIDISTRT',\r\n        CHIINVRT: 'CHIINVRT',\r\n        COVARIANCEP: 'COVARIANCEP',\r\n        COVARIANCES: 'COVARIANCES',\r\n        LOGNORMINV: 'LOGNORMINV',\r\n        POISSONDIST: 'POISSONDIST',\r\n        SKEWP: 'SKEWP',\r\n        'CEILING.MATH': 'CEILING.MATH',\r\n        FLOOR: 'FLOOR',\r\n        'FLOOR.MATH': 'FLOOR.MATH',\r\n        'CEILING.PRECISE': 'CEILING.PRECISE',\r\n        'FLOOR.PRECISE': 'FLOOR.PRECISE',\r\n        'ISO.CEILING': 'ISO.CEILING',\r\n    },\r\n    langCode: 'enGB',\r\n    ui: {\r\n        NEW_SHEET_PREFIX: 'Sheet',\r\n    },\r\n};\r\nexport default dictionary;\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionPlugin, FunctionArgumentType, } from './plugin/FunctionPlugin';\r\nexport { FunctionPlugin, FunctionArgumentType, };\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport { AddressPlugin } from './AddressPlugin';\r\nexport { ArrayPlugin } from './ArrayPlugin';\r\nexport { AbsPlugin } from './AbsPlugin';\r\nexport { BitShiftPlugin } from './BitShiftPlugin';\r\nexport { BitwiseLogicOperationsPlugin } from './BitwiseLogicOperationsPlugin';\r\nexport { BooleanPlugin } from './BooleanPlugin';\r\nexport { CharPlugin } from './CharPlugin';\r\nexport { CodePlugin } from './CodePlugin';\r\nexport { CountBlankPlugin } from './CountBlankPlugin';\r\nexport { CountUniquePlugin } from './CountUniquePlugin';\r\nexport { DateTimePlugin } from './DateTimePlugin';\r\nexport { DegreesPlugin } from './DegreesPlugin';\r\nexport { DeltaPlugin } from './DeltaPlugin';\r\nexport { ExpPlugin } from './ExpPlugin';\r\nexport { FinancialPlugin } from './FinancialPlugin';\r\nexport { FormulaTextPlugin } from './FormulaTextPlugin';\r\nexport { HyperlinkPlugin } from './HyperlinkPlugin';\r\nexport { InformationPlugin } from './InformationPlugin';\r\nexport { IsEvenPlugin } from './IsEvenPlugin';\r\nexport { IsOddPlugin } from './IsOddPlugin';\r\nexport { LogarithmPlugin } from './LogarithmPlugin';\r\nexport { MathConstantsPlugin } from './MathConstantsPlugin';\r\nexport { MatrixPlugin } from './MatrixPlugin';\r\nexport { MedianPlugin } from './MedianPlugin';\r\nexport { ModuloPlugin } from './ModuloPlugin';\r\nexport { NumericAggregationPlugin } from './NumericAggregationPlugin';\r\nexport { PowerPlugin } from './PowerPlugin';\r\nexport { RadiansPlugin } from './RadiansPlugin';\r\nexport { RadixConversionPlugin } from './RadixConversionPlugin';\r\nexport { RandomPlugin } from './RandomPlugin';\r\nexport { RoundingPlugin } from './RoundingPlugin';\r\nexport { SqrtPlugin } from './SqrtPlugin';\r\nexport { ConditionalAggregationPlugin } from './ConditionalAggregationPlugin';\r\nexport { SumprodPlugin } from './SumprodPlugin';\r\nexport { TextPlugin } from './TextPlugin';\r\nexport { TrigonometryPlugin } from './TrigonometryPlugin';\r\nexport { LookupPlugin } from './LookupPlugin';\r\nexport { RomanPlugin } from './RomanPlugin';\r\nexport { SimpleArithmerticPlugin } from './SimpleArithmertic';\r\nexport { StatisticalPlugin } from './StatisticalPlugin';\r\nexport { MathPlugin } from './MathPlugin';\r\nexport { ComplexPlugin } from './ComplexPlugin';\r\nexport { StatisticalAggregationPlugin } from './StatisticalAggregationPlugin';\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { columnIndexToLabel } from '../../parser/addressRepresentationConverters';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nvar AbsStyle;\r\n(function (AbsStyle) {\r\n    AbsStyle[AbsStyle[\"FullyAbsolute\"] = 1] = \"FullyAbsolute\";\r\n    AbsStyle[AbsStyle[\"RowAbsoluteColRelative\"] = 2] = \"RowAbsoluteColRelative\";\r\n    AbsStyle[AbsStyle[\"RowRelativeColAbsolute\"] = 3] = \"RowRelativeColAbsolute\";\r\n    AbsStyle[AbsStyle[\"FullyRelative\"] = 4] = \"FullyRelative\";\r\n})(AbsStyle || (AbsStyle = {}));\r\nexport class AddressPlugin extends FunctionPlugin {\r\n    verifyAddressArguments(row, col, abs, useA1Style) {\r\n        if (useA1Style) {\r\n            if (row < 1 || col < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n        }\r\n        else {\r\n            if (AbsStyle.FullyAbsolute == abs) {\r\n                if (row < 1 || col < 1) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n                }\r\n            }\r\n            else if (AbsStyle.RowAbsoluteColRelative == abs) {\r\n                if (row < 1) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n                }\r\n            }\r\n            else if (AbsStyle.RowRelativeColAbsolute == abs) {\r\n                if (col < 1) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    address(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ADDRESS'), (row, col, abs, useA1Style, sheetName) => {\r\n            const argumentError = this.verifyAddressArguments(row, col, abs, useA1Style);\r\n            if (argumentError !== undefined) {\r\n                return argumentError;\r\n            }\r\n            const colLetter = columnIndexToLabel(col - 1);\r\n            let sheetPrefix = '';\r\n            if (sheetName !== undefined && sheetName !== null) {\r\n                sheetPrefix = `${sheetName}!`;\r\n            }\r\n            const r1c1ColSegment = (col == 0) ? 'C' : `C[${col}]`;\r\n            const r1c1RowSegment = (row == 0) ? 'R' : `R[${row}]`;\r\n            if (AbsStyle.FullyRelative == abs) {\r\n                return useA1Style ? `${sheetPrefix}${colLetter}${row}` : `${sheetPrefix}${r1c1RowSegment}${r1c1ColSegment}`;\r\n            }\r\n            else if (AbsStyle.RowRelativeColAbsolute == abs) {\r\n                return useA1Style ? `${sheetPrefix}$${colLetter}${row}` : `${sheetPrefix}${r1c1RowSegment}C${col}`;\r\n            }\r\n            else if (AbsStyle.RowAbsoluteColRelative == abs) {\r\n                return useA1Style ? `${sheetPrefix}${colLetter}$${row}` : `${sheetPrefix}R${row}${r1c1ColSegment}`;\r\n            }\r\n            return useA1Style ? `${sheetPrefix}$${colLetter}$${row}` : `${sheetPrefix}R${row}C${col}`;\r\n        });\r\n    }\r\n}\r\nAddressPlugin.implementedFunctions = {\r\n    'ADDRESS': {\r\n        method: 'address',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, defaultValue: 1, minValue: 1, maxValue: 4 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN, optionalArg: true, defaultValue: true },\r\n            { argumentType: FunctionArgumentType.STRING, optionalArg: true },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../../ArraySize';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceScalarToBoolean } from '../ArithmeticHelper';\r\nimport { InterpreterState } from '../InterpreterState';\r\nimport { SimpleRangeValue } from '../../SimpleRangeValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class ArrayPlugin extends FunctionPlugin {\r\n    arrayformula(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARRAYFORMULA'), (value) => value);\r\n    }\r\n    arrayformulaArraySize(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('ARRAYFORMULA');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        return subChecks[0];\r\n    }\r\n    arrayconstrain(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARRAY_CONSTRAIN'), (range, numRows, numCols) => {\r\n            numRows = Math.min(numRows, range.height());\r\n            numCols = Math.min(numCols, range.width());\r\n            const data = range.data;\r\n            const ret = [];\r\n            for (let i = 0; i < numRows; i++) {\r\n                ret.push(data[i].slice(0, numCols));\r\n            }\r\n            return SimpleRangeValue.onlyValues(ret);\r\n        });\r\n    }\r\n    arrayconstrainArraySize(ast, state) {\r\n        if (ast.args.length !== 3) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('ARRAY_CONSTRAIN');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        let { height, width } = subChecks[0];\r\n        if (ast.args[1].type === AstNodeType.NUMBER) {\r\n            height = Math.min(height, ast.args[1].value);\r\n        }\r\n        if (ast.args[2].type === AstNodeType.NUMBER) {\r\n            width = Math.min(width, ast.args[2].value);\r\n        }\r\n        if (height < 1 || width < 1 || !Number.isInteger(height) || !Number.isInteger(width)) {\r\n            return ArraySize.error();\r\n        }\r\n        return new ArraySize(width, height);\r\n    }\r\n    filter(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FILTER'), (rangeVals, ...rangeFilters) => {\r\n            for (const filter of rangeFilters) {\r\n                if (rangeVals.width() !== filter.width() || rangeVals.height() !== filter.height()) {\r\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n                }\r\n            }\r\n            if (rangeVals.width() > 1 && rangeVals.height() > 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongDimension);\r\n            }\r\n            const vals = rangeVals.data;\r\n            const ret = [];\r\n            for (let i = 0; i < rangeVals.height(); i++) {\r\n                const row = [];\r\n                for (let j = 0; j < rangeVals.width(); j++) {\r\n                    let ok = true;\r\n                    for (const filter of rangeFilters) {\r\n                        const val = coerceScalarToBoolean(filter.data[i][j]);\r\n                        if (val !== true) {\r\n                            ok = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (ok) {\r\n                        row.push(vals[i][j]);\r\n                    }\r\n                }\r\n                if (row.length > 0) {\r\n                    ret.push(row);\r\n                }\r\n            }\r\n            if (ret.length > 0) {\r\n                return SimpleRangeValue.onlyValues(ret);\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EmptyRange);\r\n            }\r\n        });\r\n    }\r\n    filterArraySize(ast, state) {\r\n        if (ast.args.length <= 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('FILTER');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const width = Math.max(...(subChecks).map(val => val.width));\r\n        const height = Math.max(...(subChecks).map(val => val.height));\r\n        return new ArraySize(width, height);\r\n    }\r\n}\r\nArrayPlugin.implementedFunctions = {\r\n    'ARRAYFORMULA': {\r\n        method: 'arrayformula',\r\n        arraySizeMethod: 'arrayformulaArraySize',\r\n        arrayFunction: true,\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n    },\r\n    'ARRAY_CONSTRAIN': {\r\n        method: 'arrayconstrain',\r\n        arraySizeMethod: 'arrayconstrainArraySize',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'FILTER': {\r\n        method: 'filter',\r\n        arraySizeMethod: 'filterArraySize',\r\n        arrayFunction: true,\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class AbsPlugin extends FunctionPlugin {\r\n    abs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ABS'), Math.abs);\r\n    }\r\n}\r\nAbsPlugin.implementedFunctions = {\r\n    'ABS': {\r\n        method: 'abs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nconst MAX_48BIT_INTEGER = 281474976710655;\r\nconst SHIFT_MIN_POSITIONS = -53;\r\nconst SHIFT_MAX_POSITIONS = 53;\r\nexport class BitShiftPlugin extends FunctionPlugin {\r\n    bitlshift(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITLSHIFT'), shiftLeft);\r\n    }\r\n    bitrshift(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITRSHIFT'), shiftRight);\r\n    }\r\n}\r\nBitShiftPlugin.implementedFunctions = {\r\n    'BITLSHIFT': {\r\n        method: 'bitlshift',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\r\n        ]\r\n    },\r\n    'BITRSHIFT': {\r\n        method: 'bitrshift',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\r\n        ]\r\n    },\r\n};\r\nfunction shiftLeft(value, positions) {\r\n    if (positions < 0) {\r\n        return shiftRight(value, -positions);\r\n    }\r\n    else {\r\n        return validate(value * Math.pow(2, positions));\r\n    }\r\n}\r\nfunction shiftRight(value, positions) {\r\n    if (positions < 0) {\r\n        return shiftLeft(value, -positions);\r\n    }\r\n    else {\r\n        return validate(Math.floor(value / Math.pow(2, positions)));\r\n    }\r\n}\r\nfunction validate(result) {\r\n    if (result > MAX_48BIT_INTEGER) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.BitshiftLong);\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\r\n    bitand(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITAND'), (left, right) => left & right);\r\n    }\r\n    bitor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITOR'), (left, right) => left | right);\r\n    }\r\n    bitxor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITXOR'), (left, right) => left ^ right);\r\n    }\r\n}\r\nBitwiseLogicOperationsPlugin.implementedFunctions = {\r\n    'BITAND': {\r\n        method: 'bitand',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BITOR': {\r\n        method: 'bitor',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BITXOR': {\r\n        method: 'bitxor',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing boolean functions\r\n */\r\nexport class BooleanPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to TRUE()\r\n     *\r\n     * Returns the logical true\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    literalTrue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRUE'), () => true);\r\n    }\r\n    /**\r\n     * Corresponds to FALSE()\r\n     *\r\n     * Returns the logical false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    literalFalse(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FALSE'), () => false);\r\n    }\r\n    /**\r\n     * Corresponds to IF(expression, value_if_true, value_if_false)\r\n     *\r\n     * Returns value specified as second argument if expression is true and third argument if expression is false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    conditionalIf(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IF'), (condition, arg2, arg3) => {\r\n            return condition ? arg2 : arg3;\r\n        });\r\n    }\r\n    /**\r\n     * Implementation for the IFS function. Returns the value that corresponds to the first true condition.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    ifs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFS'), (...args) => {\r\n            for (let idx = 0; idx < args.length; idx += 2) {\r\n                if (args[idx]) {\r\n                    return args[idx + 1];\r\n                }\r\n            }\r\n            return new CellError(ErrorType.NA, ErrorMessage.NoConditionMet);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to AND(expression1, [expression2, ...])\r\n     *\r\n     * Returns true if all of the provided arguments are logically true, and false if any of it is logically false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    and(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('AND'), (...args) => args.filter(arg => arg !== undefined).every(arg => !!arg));\r\n    }\r\n    /**\r\n     * Corresponds to OR(expression1, [expression2, ...])\r\n     *\r\n     * Returns true if any of the provided arguments are logically true, and false otherwise\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    or(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OR'), (...args) => args.filter(arg => arg !== undefined).some(arg => arg));\r\n    }\r\n    not(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOT'), (arg) => !arg);\r\n    }\r\n    xor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('XOR'), (...args) => {\r\n            let cnt = 0;\r\n            args.filter(arg => arg !== undefined).forEach(arg => {\r\n                if (arg) {\r\n                    cnt++;\r\n                }\r\n            });\r\n            return (cnt % 2) === 1;\r\n        });\r\n    }\r\n    switch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SWITCH'), (selector, ...args) => {\r\n            const n = args.length;\r\n            let i = 0;\r\n            for (; i + 1 < n; i += 2) {\r\n                if (args[i] instanceof CellError) {\r\n                    continue;\r\n                }\r\n                if (this.arithmeticHelper.eq(selector, args[i])) {\r\n                    return args[i + 1];\r\n                }\r\n            }\r\n            if (i < n) {\r\n                return args[i];\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.NoDefault);\r\n            }\r\n        });\r\n    }\r\n    iferror(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFERROR'), (arg1, arg2) => {\r\n            if (arg1 instanceof CellError) {\r\n                return arg2;\r\n            }\r\n            else {\r\n                return arg1;\r\n            }\r\n        });\r\n    }\r\n    ifna(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFNA'), (arg1, arg2) => {\r\n            if (arg1 instanceof CellError && arg1.type === ErrorType.NA) {\r\n                return arg2;\r\n            }\r\n            else {\r\n                return arg1;\r\n            }\r\n        });\r\n    }\r\n    choose(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHOOSE'), (selector, ...args) => {\r\n            if (selector > args.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.Selector);\r\n            }\r\n            return args[selector - 1];\r\n        });\r\n    }\r\n}\r\nBooleanPlugin.implementedFunctions = {\r\n    'TRUE': {\r\n        method: 'literalTrue',\r\n        parameters: [],\r\n    },\r\n    'FALSE': {\r\n        method: 'literalFalse',\r\n        parameters: [],\r\n    },\r\n    'IF': {\r\n        method: 'conditionalIf',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.SCALAR, defaultValue: false, passSubtype: true },\r\n        ],\r\n    },\r\n    'IFS': {\r\n        method: 'ifs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    'AND': {\r\n        method: 'and',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'OR': {\r\n        method: 'or',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'XOR': {\r\n        method: 'xor',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'NOT': {\r\n        method: 'not',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'SWITCH': {\r\n        method: 'switch',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IFERROR': {\r\n        method: 'iferror',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n        ]\r\n    },\r\n    'IFNA': {\r\n        method: 'ifna',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n        ]\r\n    },\r\n    'CHOOSE': {\r\n        method: 'choose',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class CharPlugin extends FunctionPlugin {\r\n    char(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHAR'), (value) => {\r\n            if (value < 1 || value >= 256) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\r\n            }\r\n            return String.fromCharCode(Math.trunc(value));\r\n        });\r\n    }\r\n    unichar(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHAR'), (value) => {\r\n            if (value < 1 || value >= 1114112) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\r\n            }\r\n            return String.fromCodePoint(Math.trunc(value));\r\n        });\r\n    }\r\n}\r\nCharPlugin.implementedFunctions = {\r\n    'CHAR': {\r\n        method: 'char',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n    'UNICHAR': {\r\n        method: 'unichar',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class CodePlugin extends FunctionPlugin {\r\n    code(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CODE'), (value) => {\r\n            if (value.length === 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\r\n            }\r\n            return value.charCodeAt(0);\r\n        });\r\n    }\r\n    unicode(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('UNICODE'), (value) => {\r\n            var _a;\r\n            return (_a = value.codePointAt(0)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\r\n        });\r\n    }\r\n}\r\nCodePlugin.implementedFunctions = {\r\n    'CODE': {\r\n        method: 'code',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'UNICODE': {\r\n        method: 'unicode',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue } from '../InterpreterValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\r\nexport class CountBlankPlugin extends FunctionPlugin {\r\n    countblank(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COUNTBLANK'), (...args) => {\r\n            let counter = 0;\r\n            args.forEach((arg) => {\r\n                if (arg === EmptyValue) {\r\n                    counter++;\r\n                }\r\n            });\r\n            return counter;\r\n        });\r\n    }\r\n}\r\nCountBlankPlugin.implementedFunctions = {\r\n    'COUNTBLANK': {\r\n        method: 'countblank',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../../Cell';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing COUNTUNIQUE function\r\n */\r\nexport class CountUniquePlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to COUNTUNIQUE(Number1, Number2, ...).\r\n     *\r\n     * Returns number of unique numbers from arguments\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    countunique(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COUNTUNIQUE'), (...args) => {\r\n            const valuesSet = new Set();\r\n            const errorsSet = new Set();\r\n            for (const scalarValue of args) {\r\n                if (scalarValue instanceof CellError) {\r\n                    errorsSet.add(scalarValue.type);\r\n                }\r\n                else if (scalarValue !== '') {\r\n                    valuesSet.add(scalarValue);\r\n                }\r\n            }\r\n            return valuesSet.size + errorsSet.size;\r\n        });\r\n    }\r\n}\r\nCountUniquePlugin.implementedFunctions = {\r\n    'COUNTUNIQUE': {\r\n        method: 'countunique',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { instanceOfSimpleDate, instanceOfSimpleTime, numberToSimpleTime, offsetMonth, roundToNearestSecond, timeToNumber, toBasisEU, truncateDayInMonth } from '../../DateTimeHelper';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { format } from '../../format/format';\r\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType, } from '../InterpreterValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing date-specific functions\r\n */\r\nexport class DateTimePlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isoweeknumCore = (day) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            const date = this.dateTimeHelper.numberToSimpleDate(day);\r\n            const yearStart = this.dateTimeHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\r\n            const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\r\n            const firstThursdayAbs = yearStartAbsolute + ((4 - yearStartAbsolute) % 7 + 7) % 7;\r\n            const ret = Math.floor((absoluteDay - 1) / 7) - Math.floor((firstThursdayAbs - 1) / 7) + 1;\r\n            if (ret === 0) {\r\n                return this.isoweeknumCore(day - 7) + 1;\r\n            }\r\n            return ret;\r\n        };\r\n        this.days360Core = (startDate, endDate, mode) => {\r\n            const start = this.dateTimeHelper.numberToSimpleDate(startDate);\r\n            const end = this.dateTimeHelper.numberToSimpleDate(endDate);\r\n            let nStart, nEnd;\r\n            if (mode) {\r\n                nStart = toBasisEU(start);\r\n                nEnd = toBasisEU(end);\r\n            }\r\n            else {\r\n                [nStart, nEnd] = this.dateTimeHelper.toBasisUS(start, end);\r\n            }\r\n            return 360 * (nEnd.year - nStart.year) + 30 * (nEnd.month - nStart.month) + nEnd.day - nStart.day;\r\n        };\r\n    }\r\n    /**\r\n     * Corresponds to DATE(year, month, day)\r\n     *\r\n     * Converts a provided year, month and day into date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    date(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATE'), (year, month, day) => {\r\n            const d = Math.trunc(day);\r\n            let m = Math.trunc(month);\r\n            let y = Math.trunc(year);\r\n            if (y < this.dateTimeHelper.getEpochYearZero()) {\r\n                y += this.dateTimeHelper.getEpochYearZero();\r\n            }\r\n            const delta = Math.floor((m - 1) / 12);\r\n            y += delta;\r\n            m -= delta * 12;\r\n            const date = { year: y, month: m, day: 1 };\r\n            if (this.dateTimeHelper.isValidDate(date)) {\r\n                let ret = this.dateTimeHelper.dateToNumber(date) + (d - 1);\r\n                ret = this.dateTimeHelper.getWithinBounds(ret);\r\n                if (ret === undefined) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n                }\r\n                return ret;\r\n            }\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.InvalidDate);\r\n        });\r\n    }\r\n    time(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TIME'), (h, m, s) => {\r\n            const ret = timeToNumber({ hours: Math.trunc(h), minutes: Math.trunc(m), seconds: Math.trunc(s) });\r\n            if (ret < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NegativeTime);\r\n            }\r\n            return ret % 1;\r\n        });\r\n    }\r\n    /**\r\n     * Implementation for the EOMONTH function\r\n     */\r\n    eomonth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EOMONTH'), (dateNumber, numberOfMonthsToShift) => {\r\n            const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\r\n            let ret = this.dateTimeHelper.dateToNumber(this.dateTimeHelper.endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\r\n            ret = this.dateTimeHelper.getWithinBounds(ret);\r\n            if (ret === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    day(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAY'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).day);\r\n    }\r\n    days(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAYS'), (endDate, startDate) => Math.trunc(endDate) - Math.trunc(startDate));\r\n    }\r\n    /**\r\n     * Corresponds to MONTH(date)\r\n     *\r\n     * Returns the month of the year specified by a given date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    month(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MONTH'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).month);\r\n    }\r\n    /**\r\n     * Corresponds to YEAR(date)\r\n     *\r\n     * Returns the year specified by a given date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    year(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('YEAR'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).year);\r\n    }\r\n    hour(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HOUR'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).hours);\r\n    }\r\n    minute(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MINUTE'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).minutes);\r\n    }\r\n    second(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SECOND'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).seconds);\r\n    }\r\n    /**\r\n     * Corresponds to TEXT(number, format)\r\n     *\r\n     * Tries to convert number to specified date format.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    text(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TEXT'), (numberRepresentation, formatArg) => format(numberRepresentation, formatArg, this.config, this.dateTimeHelper));\r\n    }\r\n    weekday(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEEKDAY'), (day, type) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            if (type === 3) {\r\n                return (absoluteDay - 1) % 7;\r\n            }\r\n            const offset = weekdayOffsets.get(type);\r\n            if (offset === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n            return (absoluteDay - offset) % 7 + 1;\r\n        });\r\n    }\r\n    weeknum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEEKNUM'), (day, type) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            const date = this.dateTimeHelper.numberToSimpleDate(day);\r\n            const yearStart = this.dateTimeHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\r\n            const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\r\n            if (type === 21) {\r\n                return this.isoweeknumCore(day);\r\n            }\r\n            const offset = weekdayOffsets.get(type);\r\n            if (offset === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n            return Math.floor((absoluteDay - offset) / 7) - Math.floor((yearStartAbsolute - offset) / 7) + 1;\r\n        });\r\n    }\r\n    isoweeknum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISOWEEKNUM'), this.isoweeknumCore);\r\n    }\r\n    datevalue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATEVALUE'), (date) => {\r\n            const { dateTime } = this.dateTimeHelper.parseDateTimeFromConfigFormats(date);\r\n            if (dateTime === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\r\n            }\r\n            if (!instanceOfSimpleDate(dateTime)) {\r\n                return 0;\r\n            }\r\n            return (instanceOfSimpleTime(dateTime) ? Math.trunc(timeToNumber(dateTime)) : 0) +\r\n                this.dateTimeHelper.dateToNumber(dateTime);\r\n        });\r\n    }\r\n    timevalue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TIMEVALUE'), (date) => {\r\n            const dateNumber = this.dateTimeHelper.dateStringToDateNumber(date);\r\n            if (dateNumber === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\r\n            }\r\n            return getRawValue(dateNumber) % 1;\r\n        });\r\n    }\r\n    now(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOW'), () => {\r\n            const now = new Date(Date.now());\r\n            return timeToNumber({ hours: now.getHours(), minutes: now.getMinutes(), seconds: now.getSeconds() }) +\r\n                this.dateTimeHelper.dateToNumber({ year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() });\r\n        });\r\n    }\r\n    today(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TODAY'), () => {\r\n            const now = new Date(Date.now());\r\n            return this.dateTimeHelper.dateToNumber({\r\n                year: now.getFullYear(),\r\n                month: now.getMonth() + 1,\r\n                day: now.getDate()\r\n            });\r\n        });\r\n    }\r\n    edate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EDATE'), (dateNumber, delta) => {\r\n            const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\r\n            const newDate = truncateDayInMonth(offsetMonth(date, delta));\r\n            let ret = this.dateTimeHelper.dateToNumber(newDate);\r\n            ret = this.dateTimeHelper.getWithinBounds(ret);\r\n            if (ret === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    datedif(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATEDIF'), (startDate, endDate, unit) => {\r\n            if (startDate > endDate) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.StartEndDate);\r\n            }\r\n            if (unit === 'D') {\r\n                return Math.floor(endDate) - Math.floor(startDate);\r\n            }\r\n            const start = this.dateTimeHelper.numberToSimpleDate(startDate);\r\n            const end = this.dateTimeHelper.numberToSimpleDate(endDate);\r\n            switch (unit) {\r\n                case 'M':\r\n                    return (end.year - start.year) * 12 + (end.month - start.month) - (end.day < start.day ? 1 : 0);\r\n                case 'YM':\r\n                    return (12 + (end.month - start.month) - (end.day < start.day ? 1 : 0)) % 12;\r\n                case 'Y':\r\n                    if ((end.month > start.month) || (end.month === start.month && end.day >= start.day)) {\r\n                        return end.year - start.year;\r\n                    }\r\n                    else {\r\n                        return end.year - start.year - 1;\r\n                    }\r\n                case 'MD':\r\n                    if (end.day >= start.day) {\r\n                        return end.day - start.day;\r\n                    }\r\n                    else {\r\n                        const m = end.month === 1 ? 12 : end.month - 1;\r\n                        const y = end.month === 1 ? end.year - 1 : end.year;\r\n                        return this.dateTimeHelper.daysInMonth(y, m) + end.day - start.day;\r\n                    }\r\n                case 'YD':\r\n                    if (end.month > start.month || (end.month === start.month && end.day >= start.day)) {\r\n                        return Math.floor(endDate) - this.dateTimeHelper.dateToNumber({\r\n                            year: end.year,\r\n                            month: start.month,\r\n                            day: start.day\r\n                        });\r\n                    }\r\n                    else {\r\n                        return Math.floor(endDate)\r\n                            - Math.floor(startDate)\r\n                            - 365 * (end.year - start.year - 1)\r\n                            - this.dateTimeHelper.leapYearsCount(end.year - 1)\r\n                            + this.dateTimeHelper.leapYearsCount(start.year);\r\n                    }\r\n                default:\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n        });\r\n    }\r\n    days360(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAYS360'), this.days360Core);\r\n    }\r\n    yearfrac(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('YEARFRAC'), (startDate, endDate, mode) => {\r\n            startDate = Math.trunc(startDate);\r\n            endDate = Math.trunc(endDate);\r\n            if (startDate > endDate) {\r\n                [startDate, endDate] = [endDate, startDate];\r\n            }\r\n            switch (mode) {\r\n                case 0:\r\n                    return this.days360Core(startDate, endDate, false) / 360;\r\n                case 1:\r\n                    return (endDate - startDate) / this.dateTimeHelper.yearLengthForBasis(this.dateTimeHelper.numberToSimpleDate(startDate), this.dateTimeHelper.numberToSimpleDate(endDate));\r\n                case 2:\r\n                    return (endDate - startDate) / 360;\r\n                case 3:\r\n                    return (endDate - startDate) / 365;\r\n                case 4:\r\n                    return this.days360Core(startDate, endDate, true) / 360;\r\n            }\r\n            throw new Error('Should not be reachable.');\r\n        });\r\n    }\r\n    interval(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INTERVAL'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            const second = arg % 60;\r\n            arg = Math.trunc(arg / 60);\r\n            const minute = arg % 60;\r\n            arg = Math.trunc(arg / 60);\r\n            const hour = arg % 24;\r\n            arg = Math.trunc(arg / 24);\r\n            const day = arg % 30;\r\n            arg = Math.trunc(arg / 30);\r\n            const month = arg % 12;\r\n            const year = Math.trunc(arg / 12);\r\n            return 'P' + ((year > 0) ? `${year}Y` : '')\r\n                + ((month > 0) ? `${month}M` : '')\r\n                + ((day > 0) ? `${day}D` : '')\r\n                + 'T'\r\n                + ((hour > 0) ? `${hour}H` : '')\r\n                + ((minute > 0) ? `${minute}M` : '')\r\n                + ((second > 0) ? `${second}S` : '');\r\n        });\r\n    }\r\n    networkdays(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS'), (start, end, holidays) => this.networkdayscore(start, end, 1, holidays));\r\n    }\r\n    networkdaysintl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS.INTL'), (start, end, weekend, holidays) => this.networkdayscore(start, end, weekend, holidays));\r\n    }\r\n    workday(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WORKDAY'), (start, end, holidays) => this.workdaycore(start, end, 1, holidays));\r\n    }\r\n    workdayintl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WORKDAY.INTL'), (start, end, weekend, holidays) => this.workdaycore(start, end, weekend, holidays));\r\n    }\r\n    networkdayscore(start, end, weekend, holidays) {\r\n        start = Math.trunc(start);\r\n        end = Math.trunc(end);\r\n        let multiplier = 1;\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n            multiplier = -1;\r\n        }\r\n        const weekendPattern = computeWeekendPattern(weekend);\r\n        if (weekendPattern instanceof CellError) {\r\n            return weekendPattern;\r\n        }\r\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\r\n        if (filteredHolidays instanceof CellError) {\r\n            return filteredHolidays;\r\n        }\r\n        return multiplier * this.countWorkdays(start, end, weekendPattern, filteredHolidays);\r\n    }\r\n    workdaycore(start, delta, weekend, holidays) {\r\n        start = Math.trunc(start);\r\n        delta = Math.trunc(delta);\r\n        const weekendPattern = computeWeekendPattern(weekend);\r\n        if (weekendPattern instanceof CellError) {\r\n            return weekendPattern;\r\n        }\r\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\r\n        if (filteredHolidays instanceof CellError) {\r\n            return filteredHolidays;\r\n        }\r\n        if (delta > 0) {\r\n            let upper = 1;\r\n            while (this.countWorkdays(start + 1, start + upper, weekendPattern, filteredHolidays) < delta) {\r\n                upper *= 2;\r\n            }\r\n            let lower = 1;\r\n            while (lower + 1 < upper) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (this.countWorkdays(start + 1, start + mid, weekendPattern, filteredHolidays) < delta) {\r\n                    lower = mid;\r\n                }\r\n                else {\r\n                    upper = mid;\r\n                }\r\n            }\r\n            return start + upper;\r\n        }\r\n        else if (delta < 0) {\r\n            delta *= -1;\r\n            let upper = 1;\r\n            while (this.countWorkdays(start - upper, start - 1, weekendPattern, filteredHolidays) < delta) {\r\n                upper *= 2;\r\n            }\r\n            let lower = 1;\r\n            while (lower + 1 < upper) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (this.countWorkdays(start - mid, start - 1, weekendPattern, filteredHolidays) < delta) {\r\n                    lower = mid;\r\n                }\r\n                else {\r\n                    upper = mid;\r\n                }\r\n            }\r\n            return start - upper;\r\n        }\r\n        else {\r\n            return start;\r\n        }\r\n    }\r\n    countWorkdays(start, end, weekendPattern, sortedHolidays) {\r\n        const absoluteEnd = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(end));\r\n        const absoluteStart = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(start));\r\n        let ans = 0;\r\n        for (let i = 0; i < 7; i++) {\r\n            if (weekendPattern.charAt(i) === '0') {\r\n                ans += Math.floor((absoluteEnd + 6 - i) / 7);\r\n                ans -= Math.floor((absoluteStart - 1 + 6 - i) / 7);\r\n            }\r\n        }\r\n        ans -= lowerBound(end + 1, sortedHolidays) - lowerBound(start, sortedHolidays);\r\n        return ans;\r\n    }\r\n    simpleRangeToFilteredHolidays(weekendPattern, holidays) {\r\n        var _a;\r\n        const holidaysArr = (_a = holidays === null || holidays === void 0 ? void 0 : holidays.valuesFromTopLeftCorner()) !== null && _a !== void 0 ? _a : [];\r\n        for (const val of holidaysArr) {\r\n            if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n        }\r\n        const processedHolidays = [];\r\n        for (const val of holidaysArr) {\r\n            if (val === EmptyValue) {\r\n                continue;\r\n            }\r\n            if (isExtendedNumber(val)) {\r\n                processedHolidays.push(Math.trunc(getRawValue(val)));\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n        }\r\n        return [...new Set(processedHolidays)].sort((a, b) => a - b)\r\n            .filter((arg) => {\r\n            const val = this.dateTimeHelper.relativeNumberToAbsoluteNumber(arg);\r\n            const i = (val - 1) % 7;\r\n            return (weekendPattern.charAt(i) === '0');\r\n        });\r\n    }\r\n}\r\nDateTimePlugin.implementedFunctions = {\r\n    'DATE': {\r\n        method: 'date',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'TIME': {\r\n        method: 'time',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_TIME\r\n    },\r\n    'MONTH': {\r\n        method: 'month',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'YEAR': {\r\n        method: 'year',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'HOUR': {\r\n        method: 'hour',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'MINUTE': {\r\n        method: 'minute',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'SECOND': {\r\n        method: 'second',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'TEXT': {\r\n        method: 'text',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.STRING },\r\n        ]\r\n    },\r\n    'EOMONTH': {\r\n        method: 'eomonth',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'DAY': {\r\n        method: 'day',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'DAYS': {\r\n        method: 'days',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'WEEKDAY': {\r\n        method: 'weekday',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'WEEKNUM': {\r\n        method: 'weeknum',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'ISOWEEKNUM': {\r\n        method: 'isoweeknum',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'DATEVALUE': {\r\n        method: 'datevalue',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'TIMEVALUE': {\r\n        method: 'timevalue',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_TIME\r\n    },\r\n    'NOW': {\r\n        method: 'now',\r\n        parameters: [],\r\n        isVolatile: true,\r\n        returnNumberType: NumberType.NUMBER_DATETIME\r\n    },\r\n    'TODAY': {\r\n        method: 'today',\r\n        parameters: [],\r\n        isVolatile: true,\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'EDATE': {\r\n        method: 'edate',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'DAYS360': {\r\n        method: 'days360',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN, defaultValue: false },\r\n        ],\r\n    },\r\n    'DATEDIF': {\r\n        method: 'datedif',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.STRING },\r\n        ],\r\n    },\r\n    'YEARFRAC': {\r\n        method: 'yearfrac',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, defaultValue: 0, minValue: 0, maxValue: 4 },\r\n        ],\r\n    },\r\n    'INTERVAL': {\r\n        method: 'interval',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'NETWORKDAYS': {\r\n        method: 'networkdays',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'NETWORKDAYS.INTL': {\r\n        method: 'networkdaysintl',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NOERROR, defaultValue: 1 },\r\n            { argumentType: FunctionArgumentType.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'WORKDAY': {\r\n        method: 'workday',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'WORKDAY.INTL': {\r\n        method: 'workdayintl',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NOERROR, defaultValue: 1 },\r\n            { argumentType: FunctionArgumentType.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n};\r\n/**\r\n * Returns i such that:\r\n * sortedArray[i-1] < val <= sortedArray[i]\r\n *\r\n */\r\nfunction lowerBound(val, sortedArray) {\r\n    if (sortedArray.length === 0) {\r\n        return 0;\r\n    }\r\n    if (val <= sortedArray[0]) {\r\n        return 0;\r\n    }\r\n    if (sortedArray[sortedArray.length - 1] < val) {\r\n        return sortedArray.length;\r\n    }\r\n    let lower = 0; //sortedArray[lower] < val\r\n    let upper = sortedArray.length - 1; //sortedArray[upper] >= val\r\n    while (lower + 1 < upper) {\r\n        const mid = Math.floor((upper + lower) / 2);\r\n        if (sortedArray[mid] >= val) {\r\n            upper = mid;\r\n        }\r\n        else {\r\n            lower = mid;\r\n        }\r\n    }\r\n    return upper;\r\n}\r\nfunction computeWeekendPattern(weekend) {\r\n    var _a;\r\n    if (typeof weekend !== 'number' && typeof weekend !== 'string') {\r\n        return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n    }\r\n    if (typeof weekend === 'string') {\r\n        if (weekend.length !== 7 || !/^(0|1)*$/.test(weekend) || weekend === '1111111') {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.WeekendString);\r\n        }\r\n        else {\r\n            return weekend;\r\n        }\r\n    }\r\n    else {\r\n        return (_a = workdayPatterns.get(weekend)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n    }\r\n}\r\nconst weekdayOffsets = new Map([[1, 0], [2, 1], [11, 1], [12, 2], [13, 3], [14, 4], [15, 5], [16, 6], [17, 0]]);\r\nconst workdayPatterns = new Map([\r\n    [1, '0000011'],\r\n    [2, '1000001'],\r\n    [3, '1100000'],\r\n    [4, '0110000'],\r\n    [5, '0011000'],\r\n    [6, '0001100'],\r\n    [7, '0000110'],\r\n    [11, '0000001'],\r\n    [12, '1000000'],\r\n    [13, '0100000'],\r\n    [14, '0010000'],\r\n    [15, '0001000'],\r\n    [16, '0000100'],\r\n    [17, '0000010'],\r\n]);\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class DegreesPlugin extends FunctionPlugin {\r\n    degrees(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEGREES'), (arg) => arg * (180 / Math.PI));\r\n    }\r\n}\r\nDegreesPlugin.implementedFunctions = {\r\n    'DEGREES': {\r\n        method: 'degrees',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class DeltaPlugin extends FunctionPlugin {\r\n    delta(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DELTA'), (left, right) => (left === right ? 1 : 0));\r\n    }\r\n}\r\nDeltaPlugin.implementedFunctions = {\r\n    'DELTA': {\r\n        method: 'delta',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class ExpPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to EXP(value)\r\n     *\r\n     * Calculates the exponent for basis e\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    exp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXP'), Math.exp);\r\n    }\r\n}\r\nExpPlugin.implementedFunctions = {\r\n    'EXP': {\r\n        method: 'exp',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType } from '../InterpreterValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class FinancialPlugin extends FunctionPlugin {\r\n    pmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PMT'), pmtCore);\r\n    }\r\n    ipmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IPMT'), ipmtCore);\r\n    }\r\n    ppmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PPMT'), ppmtCore);\r\n    }\r\n    fv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FV'), fvCore);\r\n    }\r\n    cumipmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CUMIPMT'), (rate, periods, value, start, end, type) => {\r\n            if (start > end) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\r\n            }\r\n            let acc = 0;\r\n            for (let i = start; i <= end; i++) {\r\n                acc += ipmtCore(rate, i, periods, value, 0, type);\r\n            }\r\n            return acc;\r\n        });\r\n    }\r\n    cumprinc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CUMPRINC'), (rate, periods, value, start, end, type) => {\r\n            if (start > end) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\r\n            }\r\n            let acc = 0;\r\n            for (let i = start; i <= end; i++) {\r\n                acc += ppmtCore(rate, i, periods, value, 0, type);\r\n            }\r\n            return acc;\r\n        });\r\n    }\r\n    db(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DB'), (cost, salvage, life, period, month) => {\r\n            if ((month === 12 && period > life) || (period > life + 1)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.PeriodLong);\r\n            }\r\n            if (salvage >= cost) {\r\n                return 0;\r\n            }\r\n            const rate = Math.round((1 - Math.pow(salvage / cost, 1 / life)) * 1000) / 1000;\r\n            const initial = cost * rate * month / 12;\r\n            if (period === 1) {\r\n                return initial;\r\n            }\r\n            let total = initial;\r\n            for (let i = 0; i < period - 2; i++) {\r\n                total += (cost - total) * rate;\r\n            }\r\n            if (period === life + 1) {\r\n                return (cost - total) * rate * (12 - month) / 12;\r\n            }\r\n            return (cost - total) * rate;\r\n        });\r\n    }\r\n    ddb(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DDB'), (cost, salvage, life, period, factor) => {\r\n            if (period > life) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            let rate = factor / life;\r\n            let oldValue;\r\n            if (rate >= 1) {\r\n                rate = 1;\r\n                if (period === 1) {\r\n                    oldValue = cost;\r\n                }\r\n                else {\r\n                    oldValue = 0;\r\n                }\r\n            }\r\n            else {\r\n                oldValue = cost * Math.pow(1 - rate, period - 1);\r\n            }\r\n            const newValue = cost * Math.pow(1 - rate, period);\r\n            return Math.max(oldValue - Math.max(salvage, newValue), 0);\r\n        });\r\n    }\r\n    dollarde(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DOLLARDE'), (dollar, fraction) => {\r\n            if (fraction < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            fraction = Math.trunc(fraction);\r\n            while (fraction > 10) {\r\n                fraction /= 10;\r\n            }\r\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * 10 / fraction;\r\n        });\r\n    }\r\n    dollarfr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DOLLARFR'), (dollar, fraction) => {\r\n            if (fraction < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            fraction = Math.trunc(fraction);\r\n            while (fraction > 10) {\r\n                fraction /= 10;\r\n            }\r\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * fraction / 10;\r\n        });\r\n    }\r\n    effect(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EFFECT'), (rate, periods) => {\r\n            periods = Math.trunc(periods);\r\n            return Math.pow(1 + rate / periods, periods) - 1;\r\n        });\r\n    }\r\n    ispmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISPMT'), (rate, period, periods, value) => {\r\n            if (periods === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return value * rate * (period / periods - 1);\r\n        });\r\n    }\r\n    nominal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOMINAL'), (rate, periods) => {\r\n            periods = Math.trunc(periods);\r\n            return (Math.pow(rate + 1, 1 / periods) - 1) * periods;\r\n        });\r\n    }\r\n    nper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NPER'), (rate, payment, present, future, type) => {\r\n            if (rate === 0) {\r\n                if (payment === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                return (-present - future) / payment;\r\n            }\r\n            if (type) {\r\n                payment *= 1 + rate;\r\n            }\r\n            return Math.log((payment - future * rate) / (present * rate + payment)) / Math.log(1 + rate);\r\n        });\r\n    }\r\n    rate(ast, state) {\r\n        // Newton's method: https://en.wikipedia.org/wiki/Newton%27s_method\r\n        return this.runFunction(ast.args, state, this.metadata('RATE'), (periods, payment, present, future, type, guess) => {\r\n            if (guess <= -1) {\r\n                return new CellError(ErrorType.VALUE);\r\n            }\r\n            const epsMax = 1e-7;\r\n            const iterMax = 50;\r\n            let rate = guess;\r\n            type = type ? 1 : 0;\r\n            for (let i = 0; i < iterMax; i++) {\r\n                if (rate <= -1) {\r\n                    return new CellError(ErrorType.NUM);\r\n                }\r\n                let y;\r\n                if (Math.abs(rate) < epsMax) {\r\n                    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;\r\n                }\r\n                else {\r\n                    const f = Math.pow(1 + rate, periods);\r\n                    y = present * f + payment * (1 / rate + type) * (f - 1) + future;\r\n                }\r\n                if (Math.abs(y) < epsMax) {\r\n                    return rate;\r\n                }\r\n                let dy;\r\n                if (Math.abs(rate) < epsMax) {\r\n                    dy = present * periods + payment * type * periods;\r\n                }\r\n                else {\r\n                    const f = Math.pow(1 + rate, periods);\r\n                    const df = periods * Math.pow(1 + rate, periods - 1);\r\n                    dy = present * df + payment * (1 / rate + type) * df + payment * (-1 / (rate * rate)) * (f - 1);\r\n                }\r\n                rate -= y / dy;\r\n            }\r\n            return new CellError(ErrorType.NUM);\r\n        });\r\n    }\r\n    pv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PV'), (rate, periods, payment, future, type) => {\r\n            type = type ? 1 : 0;\r\n            if (rate === -1) {\r\n                if (periods === 0) {\r\n                    return new CellError(ErrorType.NUM);\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n            }\r\n            if (rate === 0) {\r\n                return -payment * periods - future;\r\n            }\r\n            else {\r\n                return ((1 - Math.pow(1 + rate, periods)) * payment * (1 + rate * type) / rate - future) / Math.pow(1 + rate, periods);\r\n            }\r\n        });\r\n    }\r\n    rri(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RRI'), (periods, present, future) => {\r\n            if (present === 0 || (future < 0 && present > 0) || (future > 0 && present < 0)) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return Math.pow(future / present, 1 / periods) - 1;\r\n        });\r\n    }\r\n    sln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SLN'), (cost, salvage, life) => {\r\n            if (life === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return (cost - salvage) / life;\r\n        });\r\n    }\r\n    syd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SYD'), (cost, salvage, life, period) => {\r\n            if (period > life) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));\r\n        });\r\n    }\r\n    tbilleq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLEQ'), (settlement, maturity, discount) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const denom = 360 - discount * (maturity - settlement);\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if (denom < 0) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return 365 * discount / denom;\r\n        });\r\n    }\r\n    tbillprice(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLPRICE'), (settlement, maturity, discount) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const denom = 360 - discount * (maturity - settlement);\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if (denom < 0) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return 100 * (1 - discount * (maturity - settlement) / 360);\r\n        });\r\n    }\r\n    tbillyield(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLYIELD'), (settlement, maturity, price) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return (100 - price) * 360 / (price * (maturity - settlement));\r\n        });\r\n    }\r\n    fvschedule(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FVSCHEDULE'), (value, ratios) => {\r\n            const vals = ratios.valuesFromTopLeftCorner();\r\n            for (const val of vals) {\r\n                if (val instanceof CellError) {\r\n                    return val;\r\n                }\r\n            }\r\n            for (const val of vals) {\r\n                if (isExtendedNumber(val)) {\r\n                    value *= 1 + getRawValue(val);\r\n                }\r\n                else if (val !== EmptyValue) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n    npv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NPV'), (rate, ...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            return npvCore(rate, coerced);\r\n        });\r\n    }\r\n    mirr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MIRR'), (range, frate, rrate) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            let posFlag = false;\r\n            let negFlag = false;\r\n            const posValues = [];\r\n            const negValues = [];\r\n            for (const val of vals) {\r\n                if (val > 0) {\r\n                    posFlag = true;\r\n                    posValues.push(val);\r\n                    negValues.push(0);\r\n                }\r\n                else if (val < 0) {\r\n                    negFlag = true;\r\n                    negValues.push(val);\r\n                    posValues.push(0);\r\n                }\r\n                else {\r\n                    negValues.push(0);\r\n                    posValues.push(0);\r\n                }\r\n            }\r\n            if (!posFlag || !negFlag) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const n = vals.length;\r\n            const nom = npvCore(rrate, posValues);\r\n            if (nom instanceof CellError) {\r\n                return nom;\r\n            }\r\n            const denom = npvCore(frate, negValues);\r\n            if (denom instanceof CellError) {\r\n                return denom;\r\n            }\r\n            return Math.pow((-nom * Math.pow(1 + rrate, n) / denom / (1 + frate)), 1 / (n - 1)) - 1;\r\n        });\r\n    }\r\n    pduration(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PDURATION'), (rate, pv, fv) => (Math.log(fv) - Math.log(pv)) / Math.log(1 + rate));\r\n    }\r\n    xnpv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('XNPV'), (rate, values, dates) => {\r\n            const valArr = values.valuesFromTopLeftCorner();\r\n            for (const val of valArr) {\r\n                if (typeof val !== 'number') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            const valArrNum = valArr;\r\n            const dateArr = dates.valuesFromTopLeftCorner();\r\n            for (const date of dateArr) {\r\n                if (typeof date !== 'number') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            const dateArrNum = dateArr;\r\n            if (dateArrNum.length !== valArrNum.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EqualLength);\r\n            }\r\n            const n = dateArrNum.length;\r\n            let ret = 0;\r\n            if (dateArrNum[0] < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n            }\r\n            for (let i = 0; i < n; i++) {\r\n                dateArrNum[i] = Math.floor(dateArrNum[i]);\r\n                if (dateArrNum[i] < dateArrNum[0]) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret += valArrNum[i] / Math.pow(1 + rate, (dateArrNum[i] - dateArrNum[0]) / 365);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nFinancialPlugin.implementedFunctions = {\r\n    'PMT': {\r\n        method: 'pmt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'IPMT': {\r\n        method: 'ipmt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'PPMT': {\r\n        method: 'ppmt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'FV': {\r\n        method: 'fv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'CUMIPMT': {\r\n        method: 'cumipmt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0, maxValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'CUMPRINC': {\r\n        method: 'cumprinc',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0, maxValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DB': {\r\n        method: 'db',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1, maxValue: 12, defaultValue: 12 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DDB': {\r\n        method: 'ddb',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, defaultValue: 2 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DOLLARDE': {\r\n        method: 'dollarde',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'DOLLARFR': {\r\n        method: 'dollarfr',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'EFFECT': {\r\n        method: 'effect',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'ISPMT': {\r\n        method: 'ispmt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'NOMINAL': {\r\n        method: 'nominal',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'NPER': {\r\n        method: 'nper',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'PV': {\r\n        method: 'pv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'RATE': {\r\n        method: 'rate',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0.1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'RRI': {\r\n        method: 'rri',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'SLN': {\r\n        method: 'sln',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'SYD': {\r\n        method: 'syd',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'TBILLEQ': {\r\n        method: 'tbilleq',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'TBILLPRICE': {\r\n        method: 'tbillprice',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'TBILLYIELD': {\r\n        method: 'tbillyield',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'FVSCHEDULE': {\r\n        method: 'fvschedule',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'NPV': {\r\n        method: 'npv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'MIRR': {\r\n        method: 'mirr',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'PDURATION': {\r\n        method: 'pduration',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ],\r\n    },\r\n    'XNPV': {\r\n        method: 'xnpv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: -1 },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n};\r\nfunction pmtCore(rate, periods, present, future, type) {\r\n    if (rate === 0) {\r\n        return (-present - future) / periods;\r\n    }\r\n    else {\r\n        const term = Math.pow(1 + rate, periods);\r\n        return (future * rate + present * rate * term) * (type ? 1 / (1 + rate) : 1) / (1 - term);\r\n    }\r\n}\r\nfunction ipmtCore(rate, period, periods, present, future, type) {\r\n    const payment = pmtCore(rate, periods, present, future, type);\r\n    if (period === 1) {\r\n        return rate * (type ? 0 : -present);\r\n    }\r\n    else {\r\n        return rate * (type ? fvCore(rate, period - 2, payment, present, type) - payment : fvCore(rate, period - 1, payment, present, type));\r\n    }\r\n}\r\nfunction fvCore(rate, periods, payment, value, type) {\r\n    if (rate === 0) {\r\n        return -value - payment * periods;\r\n    }\r\n    else {\r\n        const term = Math.pow(1 + rate, periods);\r\n        return payment * (type ? (1 + rate) : 1) * (1 - term) / rate - value * term;\r\n    }\r\n}\r\nfunction ppmtCore(rate, period, periods, present, future, type) {\r\n    return pmtCore(rate, periods, present, future, type) - ipmtCore(rate, period, periods, present, future, type);\r\n}\r\nfunction npvCore(rate, args) {\r\n    let acc = 0;\r\n    for (let i = args.length - 1; i >= 0; i--) {\r\n        acc += args[i];\r\n        if (rate === -1) {\r\n            if (acc === 0) {\r\n                continue;\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n        }\r\n        acc /= 1 + rate;\r\n    }\r\n    return acc;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionPlugin } from '../index';\r\nimport { FunctionArgumentType } from './FunctionPlugin';\r\nexport class FormulaTextPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to FORMULATEXT(value)\r\n     *\r\n     * Returns a formula in a given cell as a string.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    formulatext(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (cellReference) => { var _a; return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula); });\r\n    }\r\n}\r\nFormulaTextPlugin.implementedFunctions = {\r\n    'FORMULATEXT': {\r\n        method: 'formulatext',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        isDependentOnSheetStructureChange: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class HyperlinkPlugin extends FunctionPlugin {\r\n    hyperlink(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HYPERLINK'), (url, linkLabel) => {\r\n            ast.hyperlink = url;\r\n            return linkLabel !== null && linkLabel !== void 0 ? linkLabel : url;\r\n        });\r\n    }\r\n}\r\nHyperlinkPlugin.implementedFunctions = {\r\n    'HYPERLINK': {\r\n        method: 'hyperlink',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.STRING, optionalArg: true },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { FormulaVertex } from '../../DependencyGraph/FormulaCellVertex';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { EmptyValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../../SimpleRangeValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing information functions\r\n */\r\nexport class InformationPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to ISBINARY(value)\r\n     *\r\n     * Returns true if provided value is a valid binary number\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isbinary(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISBINARY'), (arg) => /^[01]{1,10}$/.test(arg));\r\n    }\r\n    /**\r\n     * Corresponds to ISERR(value)\r\n     *\r\n     * Returns true if provided value is an error except #N/A!\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    iserr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISERR'), (arg) => (arg instanceof CellError && arg.type !== ErrorType.NA));\r\n    }\r\n    /**\r\n     * Corresponds to ISERROR(value)\r\n     *\r\n     * Checks whether provided value is an error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    iserror(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISERROR'), (arg) => (arg instanceof CellError));\r\n    }\r\n    /**\r\n     * Corresponds to ISFORMULA(value)\r\n     *\r\n     * Checks whether referenced cell is a formula\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isformula(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('ISFORMULA'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (reference) => {\r\n            const vertex = this.dependencyGraph.addressMapping.getCell(reference);\r\n            return vertex instanceof FormulaVertex;\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to ISBLANK(value)\r\n     *\r\n     * Checks whether provided cell reference is empty\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isblank(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISBLANK'), (arg) => (arg === EmptyValue));\r\n    }\r\n    /**\r\n     * Corresponds to ISNA(value)\r\n     *\r\n     * Returns true if provided value is #N/A! error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isna(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNA'), (arg) => (arg instanceof CellError && arg.type == ErrorType.NA));\r\n    }\r\n    /**\r\n     * Corresponds to ISNUMBER(value)\r\n     *\r\n     * Checks whether provided cell reference is a number\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isnumber(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNUMBER'), isExtendedNumber);\r\n    }\r\n    /**\r\n     * Corresponds to ISLOGICAL(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    islogical(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISLOGICAL'), (arg) => (typeof arg === 'boolean'));\r\n    }\r\n    /**\r\n     * Corresponds to ISREF(value)\r\n     *\r\n     * Returns true if provided value is #REF! error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isref(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISREF'), (arg) => (arg instanceof CellError && (arg.type == ErrorType.REF || arg.type == ErrorType.CYCLE)));\r\n    }\r\n    /**\r\n     * Corresponds to ISTEXT(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    istext(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISTEXT'), (arg) => (typeof arg === 'string'));\r\n    }\r\n    /**\r\n     * Corresponds to ISNONTEXT(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isnontext(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNONTEXT'), (arg) => !(typeof arg === 'string'));\r\n    }\r\n    /**\r\n     * Corresponds to COLUMN(reference)\r\n     *\r\n     * Returns column number of a reference or a formula cell if reference not provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    column(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('COLUMN'), () => state.formulaAddress.col + 1, (reference) => reference.col + 1);\r\n    }\r\n    /**\r\n     * Corresponds to COLUMNS(range)\r\n     *\r\n     * Returns number of columns in provided range of cells\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    columns(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\r\n        }\r\n        let argAst = ast.args[0];\r\n        while (argAst.type === AstNodeType.PARENTHESIS) {\r\n            argAst = argAst.expression;\r\n        }\r\n        if (argAst.type === AstNodeType.CELL_RANGE || argAst.type === AstNodeType.COLUMN_RANGE) {\r\n            return argAst.end.col - argAst.start.col + 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.CELL_REFERENCE) {\r\n            return 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.ROW_RANGE) {\r\n            return this.config.maxColumns;\r\n        }\r\n        else {\r\n            const val = this.evaluateAst(argAst, state);\r\n            if (val instanceof SimpleRangeValue) {\r\n                return val.width();\r\n            }\r\n            else if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Corresponds to ROW(reference)\r\n     *\r\n     * Returns row number of a reference or a formula cell if reference not provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    row(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('ROW'), () => state.formulaAddress.row + 1, (reference) => reference.row + 1);\r\n    }\r\n    /**\r\n     * Corresponds to ROWS(range)\r\n     *\r\n     * Returns number of rows in provided range of cells\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    rows(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\r\n        }\r\n        let argAst = ast.args[0];\r\n        while (argAst.type === AstNodeType.PARENTHESIS) {\r\n            argAst = argAst.expression;\r\n        }\r\n        if (argAst.type === AstNodeType.CELL_RANGE || argAst.type === AstNodeType.ROW_RANGE) {\r\n            return argAst.end.row - argAst.start.row + 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.CELL_REFERENCE) {\r\n            return 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.COLUMN_RANGE) {\r\n            return this.config.maxRows;\r\n        }\r\n        else {\r\n            const val = this.evaluateAst(argAst, state);\r\n            if (val instanceof SimpleRangeValue) {\r\n                return val.height();\r\n            }\r\n            else if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Corresponds to INDEX\r\n     *\r\n     * Returns specific position in 2d array.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    index(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INDEX'), (rangeValue, row, col) => {\r\n            var _a, _b, _c, _d, _e, _f;\r\n            if (col < 1 || row < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (col > rangeValue.width() || row > rangeValue.height()) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return (_f = (_c = (_b = (_a = rangeValue === null || rangeValue === void 0 ? void 0 : rangeValue.data) === null || _a === void 0 ? void 0 : _a[row - 1]) === null || _b === void 0 ? void 0 : _b[col - 1]) !== null && _c !== void 0 ? _c : (_e = (_d = rangeValue === null || rangeValue === void 0 ? void 0 : rangeValue.data) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e[0]) !== null && _f !== void 0 ? _f : new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to NA()\r\n     *\r\n     * Returns #N/A!\r\n     *\r\n     * @param _ast\r\n     * @param _state\r\n     */\r\n    na(_ast, _state) {\r\n        return new CellError(ErrorType.NA);\r\n    }\r\n    /**\r\n     * Corresponds to SHEET(value)\r\n     *\r\n     * Returns sheet number of a given value or a formula sheet number if no argument is provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sheet(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('SHEET'), () => state.formulaAddress.sheet + 1, (reference) => reference.sheet + 1, (value) => {\r\n            const sheetNumber = this.dependencyGraph.sheetMapping.get(value);\r\n            if (sheetNumber !== undefined) {\r\n                return sheetNumber + 1;\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.SheetRef);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to SHEETS(value)\r\n     *\r\n     * Returns number of sheet of a given reference or number of all sheets in workbook when no argument is provided.\r\n     * It returns always 1 for a valid reference as 3D references are not supported.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sheets(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('SHEETS'), () => this.dependencyGraph.sheetMapping.numberOfSheets(), // return number of sheets if no argument\r\n        () => 1, // return 1 for valid reference\r\n        () => new CellError(ErrorType.VALUE, ErrorMessage.CellRefExpected) // error otherwise\r\n        );\r\n    }\r\n}\r\nInformationPlugin.implementedFunctions = {\r\n    'COLUMN': {\r\n        method: 'column',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, optionalArg: true }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'COLUMNS': {\r\n        method: 'columns',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISBINARY': {\r\n        method: 'isbinary',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'ISERR': {\r\n        method: 'iserr',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISFORMULA': {\r\n        method: 'isformula',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISNA': {\r\n        method: 'isna',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISREF': {\r\n        method: 'isref',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISERROR': {\r\n        method: 'iserror',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISBLANK': {\r\n        method: 'isblank',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISNUMBER': {\r\n        method: 'isnumber',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISLOGICAL': {\r\n        method: 'islogical',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISTEXT': {\r\n        method: 'istext',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'ISNONTEXT': {\r\n        method: 'isnontext',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'INDEX': {\r\n        method: 'index',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'NA': {\r\n        method: 'na',\r\n        parameters: [],\r\n    },\r\n    'ROW': {\r\n        method: 'row',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, optionalArg: true }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ROWS': {\r\n        method: 'rows',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'SHEET': {\r\n        method: 'sheet',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'SHEETS': {\r\n        method: 'sheets',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class IsEvenPlugin extends FunctionPlugin {\r\n    iseven(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISEVEN'), (val) => (val % 2 === 0));\r\n    }\r\n}\r\nIsEvenPlugin.implementedFunctions = {\r\n    'ISEVEN': {\r\n        method: 'iseven',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class IsOddPlugin extends FunctionPlugin {\r\n    isodd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISODD'), (val) => (val % 2 === 1));\r\n    }\r\n}\r\nIsOddPlugin.implementedFunctions = {\r\n    'ISODD': {\r\n        method: 'isodd',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class LogarithmPlugin extends FunctionPlugin {\r\n    log10(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOG10'), Math.log10);\r\n    }\r\n    log(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\r\n    }\r\n    ln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LN'), Math.log);\r\n    }\r\n}\r\nLogarithmPlugin.implementedFunctions = {\r\n    'LOG10': {\r\n        method: 'log10',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'LOG': {\r\n        method: 'log',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 10, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'LN': {\r\n        method: 'ln',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport const PI = parseFloat(Math.PI.toFixed(14));\r\nexport class MathConstantsPlugin extends FunctionPlugin {\r\n    pi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PI'), () => PI);\r\n    }\r\n    sqrtpi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SQRTPI'), (arg) => Math.sqrt(PI * arg));\r\n    }\r\n}\r\nMathConstantsPlugin.implementedFunctions = {\r\n    'PI': {\r\n        method: 'pi',\r\n        parameters: [],\r\n    },\r\n    'SQRTPI': {\r\n        method: 'sqrtpi',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../../ArraySize';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { InterpreterState } from '../InterpreterState';\r\nimport { SimpleRangeValue } from '../../SimpleRangeValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nfunction arraySizeForMultiplication(leftArraySize, rightArraySize) {\r\n    return new ArraySize(rightArraySize.width, leftArraySize.height);\r\n}\r\nfunction arraySizeForPoolFunction(inputArray, windowSize, stride) {\r\n    return new ArraySize(1 + (inputArray.width - windowSize) / stride, 1 + (inputArray.height - windowSize) / stride);\r\n}\r\nexport class MatrixPlugin extends FunctionPlugin {\r\n    mmult(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MMULT'), (leftMatrix, rightMatrix) => {\r\n            if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            if (rightMatrix.height() !== leftMatrix.width()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ArrayDimensions);\r\n            }\r\n            const outputSize = arraySizeForMultiplication(leftMatrix.size, rightMatrix.size);\r\n            const result = this.createKernel(function (a, b, width) {\r\n                let sum = 0;\r\n                for (let i = 0; i < width; ++i) {\r\n                    sum += a[this.thread.y][i] * b[i][this.thread.x];\r\n                }\r\n                return sum;\r\n            }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    mmultArraySize(ast, state) {\r\n        if (ast.args.length !== 2) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MMULT');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const [left, right] = subChecks;\r\n        return arraySizeForMultiplication(left, right);\r\n    }\r\n    maxpool(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MAXPOOL'), (matrix, windowSize, stride = windowSize) => {\r\n            if (!matrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            const outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\r\n            const result = this.createKernel(function (a, windowSize, stride) {\r\n                const leftCornerX = this.thread.x * stride;\r\n                const leftCornerY = this.thread.y * stride;\r\n                let currentMax = a[leftCornerY][leftCornerX];\r\n                for (let i = 0; i < windowSize; i++) {\r\n                    for (let j = 0; j < windowSize; j++) {\r\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\r\n                    }\r\n                }\r\n                return currentMax;\r\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    medianpool(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MEDIANPOOL'), (matrix, windowSize, stride = windowSize) => {\r\n            if (!matrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            const outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\r\n            const result = this.createKernel(function (a, windowSize, stride) {\r\n                const leftCornerX = this.thread.x * stride;\r\n                const leftCornerY = this.thread.y * stride;\r\n                let currentMax = a[leftCornerY][leftCornerX];\r\n                for (let i = 0; i < windowSize; i++) {\r\n                    for (let j = 0; j < windowSize; j++) {\r\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\r\n                    }\r\n                }\r\n                let currentMin = a[leftCornerY][leftCornerX];\r\n                for (let i2 = 0; i2 < windowSize; i2++) {\r\n                    for (let j2 = 0; j2 < windowSize; j2++) {\r\n                        currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\r\n                    }\r\n                }\r\n                const numberOfElements = windowSize * windowSize;\r\n                let leftEnd = currentMin;\r\n                let rightEnd = currentMax;\r\n                let result = 42;\r\n                for (let iter = 0; iter < 32; iter++) {\r\n                    const medianGuess = (leftEnd + rightEnd) / 2;\r\n                    let medianGuessCount = 0;\r\n                    for (let i3 = 0; i3 < windowSize; i3++) {\r\n                        for (let j3 = 0; j3 < windowSize; j3++) {\r\n                            if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\r\n                                medianGuessCount++;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (windowSize % 2 === 0) {\r\n                        if (medianGuessCount === numberOfElements / 2) {\r\n                            result = medianGuess;\r\n                            break;\r\n                        }\r\n                        else if (medianGuessCount > numberOfElements / 2) {\r\n                            leftEnd = medianGuess;\r\n                        }\r\n                        else {\r\n                            rightEnd = medianGuess;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (medianGuessCount === (numberOfElements - 1) / 2) {\r\n                            result = medianGuess;\r\n                            break;\r\n                        }\r\n                        else if (medianGuessCount > (numberOfElements - 1) / 2) {\r\n                            leftEnd = medianGuess;\r\n                        }\r\n                        else {\r\n                            rightEnd = medianGuess;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    maxpoolArraySize(ast, state) {\r\n        if (ast.args.length < 2 || ast.args.length > 3) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MAXPOOL');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const array = subChecks[0];\r\n        const windowArg = ast.args[1];\r\n        let window;\r\n        if (windowArg.type === AstNodeType.NUMBER) {\r\n            window = windowArg.value;\r\n        }\r\n        else {\r\n            window = 1;\r\n        }\r\n        let stride = window;\r\n        if (ast.args.length === 3) {\r\n            const strideArg = ast.args[2];\r\n            if (strideArg.type === AstNodeType.NUMBER) {\r\n                stride = strideArg.value;\r\n            }\r\n            else {\r\n                stride = 1; // codecov: unreachable - strideArg is always type AstNodeType.NUMBER due to FunctionPlugin argument checking+coersion\r\n            }\r\n        }\r\n        if (window > array.width || window > array.height\r\n            || stride > window\r\n            || (array.width - window) % stride !== 0 || (array.height - window) % stride !== 0) {\r\n            return ArraySize.error();\r\n        }\r\n        return arraySizeForPoolFunction(array, window, stride);\r\n    }\r\n    medianpoolArraySize(ast, state) {\r\n        return this.maxpoolArraySize(ast, state);\r\n    }\r\n    transpose(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRANSPOSE'), (matrix) => {\r\n            const input = matrix.rawData();\r\n            const inputSize = matrix.size;\r\n            const result = [];\r\n            for (let i = 0; i < inputSize.width; ++i) {\r\n                result[i] = [];\r\n                for (let j = 0; j < inputSize.height; ++j) {\r\n                    result[i][j] = input[j][i];\r\n                }\r\n            }\r\n            return SimpleRangeValue.onlyValues(result);\r\n        });\r\n    }\r\n    transposeArraySize(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MMULT');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const [size] = subChecks;\r\n        return new ArraySize(size.height, size.width);\r\n    }\r\n    createKernel(kernel, outputSize) {\r\n        return function (...args) {\r\n            const result = [];\r\n            for (let y = 0; y < outputSize.height; ++y) {\r\n                result.push([]);\r\n                for (let x = 0; x < outputSize.width; ++x) {\r\n                    result[y][x] = kernel.apply({ thread: { x, y } }, args);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n}\r\nMatrixPlugin.implementedFunctions = {\r\n    'MMULT': {\r\n        method: 'mmult',\r\n        arraySizeMethod: 'mmultArraySize',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'TRANSPOSE': {\r\n        method: 'transpose',\r\n        arraySizeMethod: 'transposeArraySize',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'MAXPOOL': {\r\n        method: 'maxpool',\r\n        arraySizeMethod: 'maxpoolArraySize',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'MEDIANPOOL': {\r\n        method: 'medianpool',\r\n        arraySizeMethod: 'medianpoolArraySize',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\r\nexport class MedianPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to MEDIAN(Number1, Number2, ...).\r\n     *\r\n     * Returns a median of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    median(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MEDIAN'), (...args) => {\r\n            const values = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (values instanceof CellError) {\r\n                return values;\r\n            }\r\n            if (values.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            values.sort((a, b) => (a - b));\r\n            if (values.length % 2 === 0) {\r\n                return (values[(values.length / 2) - 1] + values[values.length / 2]) / 2;\r\n            }\r\n            else {\r\n                return values[Math.floor(values.length / 2)];\r\n            }\r\n        });\r\n    }\r\n    large(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LARGE'), (range, n) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            vals.sort((a, b) => a - b);\r\n            n = Math.trunc(n);\r\n            if (n > vals.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return vals[vals.length - n];\r\n        });\r\n    }\r\n    small(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SMALL'), (range, n) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            vals.sort((a, b) => a - b);\r\n            n = Math.trunc(n);\r\n            if (n > vals.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return vals[n - 1];\r\n        });\r\n    }\r\n}\r\nMedianPlugin.implementedFunctions = {\r\n    'MEDIAN': {\r\n        method: 'median',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'LARGE': {\r\n        method: 'large',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'SMALL': {\r\n        method: 'small',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class ModuloPlugin extends FunctionPlugin {\r\n    mod(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MOD'), (dividend, divisor) => {\r\n            if (divisor === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            else {\r\n                return dividend % divisor;\r\n            }\r\n        });\r\n    }\r\n}\r\nModuloPlugin.implementedFunctions = {\r\n    'MOD': {\r\n        method: 'mod',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { SheetsNotEqual } from '../../errors';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceBooleanToNumber } from '../ArithmeticHelper';\r\nimport { EmptyValue, getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../../SimpleRangeValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nfunction zeroForInfinite(value) {\r\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nclass MomentsAggregate {\r\n    constructor(sumsq, sum, count) {\r\n        this.sumsq = sumsq;\r\n        this.sum = sum;\r\n        this.count = count;\r\n    }\r\n    static single(arg) {\r\n        return new MomentsAggregate(arg * arg, arg, 1);\r\n    }\r\n    compose(other) {\r\n        return new MomentsAggregate(this.sumsq + other.sumsq, this.sum + other.sum, this.count + other.count);\r\n    }\r\n    averageValue() {\r\n        if (this.count > 0) {\r\n            return this.sum / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    varSValue() {\r\n        if (this.count > 1) {\r\n            return (this.sumsq - (this.sum * this.sum) / this.count) / (this.count - 1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    varPValue() {\r\n        if (this.count > 0) {\r\n            return (this.sumsq - (this.sum * this.sum) / this.count) / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nMomentsAggregate.empty = new MomentsAggregate(0, 0, 0);\r\nexport class NumericAggregationPlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.addWithEpsilonRaw = (left, right) => this.arithmeticHelper.addWithEpsilonRaw(left, right);\r\n    }\r\n    /**\r\n     * Corresponds to SUM(Number1, Number2, ...).\r\n     *\r\n     * Returns a sum of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sum(ast, state) {\r\n        return this.doSum(ast.args, state);\r\n    }\r\n    sumsq(ast, state) {\r\n        return this.reduce(ast.args, state, 0, 'SUMSQ', this.addWithEpsilonRaw, (arg) => Math.pow(getRawValue(arg), 2), strictlyNumbers);\r\n    }\r\n    /**\r\n     * Corresponds to MAX(Number1, Number2, ...).\r\n     *\r\n     * Returns a max of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    max(ast, state) {\r\n        return this.doMax(ast.args, state);\r\n    }\r\n    maxa(ast, state) {\r\n        const value = this.reduce(ast.args, state, Number.NEGATIVE_INFINITY, 'MAXA', (left, right) => Math.max(left, right), getRawValue, numbersBooleans);\r\n        return zeroForInfinite(value);\r\n    }\r\n    /**\r\n     * Corresponds to MIN(Number1, Number2, ...).\r\n     *\r\n     * Returns a min of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    min(ast, state) {\r\n        return this.doMin(ast.args, state);\r\n    }\r\n    mina(ast, state) {\r\n        const value = this.reduce(ast.args, state, Number.POSITIVE_INFINITY, 'MINA', (left, right) => Math.min(left, right), getRawValue, numbersBooleans);\r\n        return zeroForInfinite(value);\r\n    }\r\n    count(ast, state) {\r\n        return this.doCount(ast.args, state);\r\n    }\r\n    counta(ast, state) {\r\n        return this.doCounta(ast.args, state);\r\n    }\r\n    average(ast, state) {\r\n        return this.doAverage(ast.args, state);\r\n    }\r\n    averagea(ast, state) {\r\n        var _a;\r\n        const result = this.reduce(ast.args, state, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => left.compose(right), (arg) => MomentsAggregate.single(getRawValue(arg)), numbersBooleans);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    vars(ast, state) {\r\n        return this.doVarS(ast.args, state);\r\n    }\r\n    varp(ast, state) {\r\n        return this.doVarP(ast.args, state);\r\n    }\r\n    vara(ast, state) {\r\n        var _a;\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    varpa(ast, state) {\r\n        var _a;\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    stdevs(ast, state) {\r\n        return this.doStdevS(ast.args, state);\r\n    }\r\n    stdevp(ast, state) {\r\n        return this.doStdevP(ast.args, state);\r\n    }\r\n    stdeva(ast, state) {\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varSValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    stdevpa(ast, state) {\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varPValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    product(ast, state) {\r\n        return this.doProduct(ast.args, state);\r\n    }\r\n    subtotal(ast, state) {\r\n        if (ast.args.length < 2) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        const functionType = this.coerceToType(this.evaluateAst(ast.args[0], state), { argumentType: FunctionArgumentType.NUMBER }, state);\r\n        const args = ast.args.slice(1);\r\n        switch (functionType) {\r\n            case 1:\r\n            case 101:\r\n                return this.doAverage(args, state);\r\n            case 2:\r\n            case 102:\r\n                return this.doCount(args, state);\r\n            case 3:\r\n            case 103:\r\n                return this.doCounta(args, state);\r\n            case 4:\r\n            case 104:\r\n                return this.doMax(args, state);\r\n            case 5:\r\n            case 105:\r\n                return this.doMin(args, state);\r\n            case 6:\r\n            case 106:\r\n                return this.doProduct(args, state);\r\n            case 7:\r\n            case 107:\r\n                return this.doStdevS(args, state);\r\n            case 8:\r\n            case 108:\r\n                return this.doStdevP(args, state);\r\n            case 9:\r\n            case 109:\r\n                return this.doSum(args, state);\r\n            case 10:\r\n            case 110:\r\n                return this.doVarS(args, state);\r\n            case 11:\r\n            case 111:\r\n                return this.doVarP(args, state);\r\n            default:\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\r\n        }\r\n    }\r\n    reduceAggregate(args, state) {\r\n        return this.reduce(args, state, MomentsAggregate.empty, '_AGGREGATE', (left, right) => {\r\n            return left.compose(right);\r\n        }, (arg) => {\r\n            return MomentsAggregate.single(getRawValue(arg));\r\n        }, strictlyNumbers);\r\n    }\r\n    reduceAggregateA(args, state) {\r\n        return this.reduce(args, state, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => {\r\n            return left.compose(right);\r\n        }, (arg) => {\r\n            return MomentsAggregate.single(getRawValue(arg));\r\n        }, numbersBooleans);\r\n    }\r\n    doAverage(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doVarS(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doVarP(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doStdevS(args, state) {\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varSValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    doStdevP(args, state) {\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varPValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    doCount(args, state) {\r\n        return this.reduce(args, state, 0, 'COUNT', (left, right) => left + right, getRawValue, (arg) => (isExtendedNumber(arg)) ? 1 : 0);\r\n    }\r\n    doCounta(args, state) {\r\n        return this.reduce(args, state, 0, 'COUNTA', (left, right) => left + right, getRawValue, (arg) => (arg === EmptyValue) ? 0 : 1);\r\n    }\r\n    doMax(args, state) {\r\n        const value = this.reduce(args, state, Number.NEGATIVE_INFINITY, 'MAX', (left, right) => Math.max(left, right), getRawValue, strictlyNumbers);\r\n        return zeroForInfinite(value);\r\n    }\r\n    doMin(args, state) {\r\n        const value = this.reduce(args, state, Number.POSITIVE_INFINITY, 'MIN', (left, right) => Math.min(left, right), getRawValue, strictlyNumbers);\r\n        return zeroForInfinite(value);\r\n    }\r\n    doSum(args, state) {\r\n        return this.reduce(args, state, 0, 'SUM', this.addWithEpsilonRaw, getRawValue, strictlyNumbers);\r\n    }\r\n    doProduct(args, state) {\r\n        return this.reduce(args, state, 1, 'PRODUCT', (left, right) => left * right, getRawValue, strictlyNumbers);\r\n    }\r\n    /**\r\n     * Reduces procedure arguments with given reducing function\r\n     *\r\n     * @param args\r\n     * @param state\r\n     * @param initialAccValue - \"neutral\" value (equivalent of 0)\r\n     * @param functionName - function name to use as cache key\r\n     * @param reducingFunction - reducing function\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    reduce(args, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\r\n        if (args.length < 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        return args.reduce((acc, arg) => {\r\n            if (acc instanceof CellError) {\r\n                return acc;\r\n            }\r\n            if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\r\n                const val = this.evaluateRange(arg, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction);\r\n                if (val instanceof CellError) {\r\n                    return val;\r\n                }\r\n                return reducingFunction(val, acc);\r\n            }\r\n            let value;\r\n            value = this.evaluateAst(arg, state);\r\n            if (value instanceof SimpleRangeValue) {\r\n                const coercedRangeValues = Array.from(value.valuesFromTopLeftCorner())\r\n                    .map(coercionFunction)\r\n                    .filter((arg) => (arg !== undefined));\r\n                return coercedRangeValues\r\n                    .map((arg) => {\r\n                    if (arg instanceof CellError) {\r\n                        return arg;\r\n                    }\r\n                    else {\r\n                        return mapFunction(arg);\r\n                    }\r\n                })\r\n                    .reduce((left, right) => {\r\n                    if (left instanceof CellError) {\r\n                        return left;\r\n                    }\r\n                    else if (right instanceof CellError) {\r\n                        return right;\r\n                    }\r\n                    else {\r\n                        return reducingFunction(left, right);\r\n                    }\r\n                }, acc);\r\n            }\r\n            else if (arg.type === AstNodeType.CELL_REFERENCE) {\r\n                value = coercionFunction(value);\r\n                if (value === undefined) {\r\n                    return acc;\r\n                }\r\n            }\r\n            else {\r\n                value = this.coerceScalarToNumberOrError(value);\r\n                value = coercionFunction(value);\r\n                if (value === undefined) {\r\n                    return acc;\r\n                }\r\n            }\r\n            if (value instanceof CellError) {\r\n                return value;\r\n            }\r\n            return reducingFunction(acc, mapFunction(value));\r\n        }, initialAccValue);\r\n    }\r\n    /**\r\n     * Performs range operation on given range\r\n     *\r\n     * @param ast - cell range ast\r\n     * @param state\r\n     * @param initialAccValue - initial accumulator value for reducing function\r\n     * @param functionName - function name to use as cache key\r\n     * @param reducingFunction - reducing function\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    evaluateRange(ast, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\r\n        let range;\r\n        try {\r\n            range = AbsoluteCellRange.fromAst(ast, state.formulaAddress);\r\n        }\r\n        catch (err) {\r\n            if (err instanceof SheetsNotEqual) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        }\r\n        const rangeVertex = this.dependencyGraph.getRange(range.start, range.end);\r\n        if (rangeVertex === undefined) {\r\n            throw new Error('Range does not exists in graph');\r\n        }\r\n        let value = rangeVertex.getFunctionValue(functionName);\r\n        if (value === undefined) {\r\n            const rangeValues = this.getRangeValues(functionName, range, rangeVertex, mapFunction, coercionFunction);\r\n            value = rangeValues.reduce((arg1, arg2) => {\r\n                if (arg1 instanceof CellError) {\r\n                    return arg1;\r\n                }\r\n                else if (arg2 instanceof CellError) {\r\n                    return arg2;\r\n                }\r\n                else {\r\n                    return reducingFunction(arg1, arg2);\r\n                }\r\n            }, initialAccValue);\r\n            rangeVertex.setFunctionValue(functionName, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Returns list of values for given range and function name\r\n     *\r\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\r\n     * and values of cells that are not present in smaller range\r\n     *\r\n     * @param functionName - function name (e.g. SUM)\r\n     * @param range - cell range\r\n     * @param rangeVertex\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    getRangeValues(functionName, range, rangeVertex, mapFunction, coercionFunction) {\r\n        const rangeResult = [];\r\n        const { smallerRangeVertex, restRange } = this.dependencyGraph.rangeMapping.findSmallerRange(range);\r\n        let actualRange;\r\n        if (smallerRangeVertex !== undefined && this.dependencyGraph.existsEdge(smallerRangeVertex, rangeVertex)) {\r\n            const cachedValue = smallerRangeVertex.getFunctionValue(functionName);\r\n            if (cachedValue !== undefined) {\r\n                rangeResult.push(cachedValue);\r\n            }\r\n            else {\r\n                for (const cellFromRange of smallerRangeVertex.range.addresses(this.dependencyGraph)) {\r\n                    const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\r\n                    if (val instanceof CellError) {\r\n                        rangeResult.push(val);\r\n                    }\r\n                    else if (val !== undefined) {\r\n                        rangeResult.push(mapFunction(val));\r\n                    }\r\n                }\r\n            }\r\n            actualRange = restRange;\r\n        }\r\n        else {\r\n            actualRange = range;\r\n        }\r\n        for (const cellFromRange of actualRange.addresses(this.dependencyGraph)) {\r\n            const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\r\n            if (val instanceof CellError) {\r\n                rangeResult.push(val);\r\n            }\r\n            else if (val !== undefined) {\r\n                rangeResult.push(mapFunction(val));\r\n            }\r\n        }\r\n        return rangeResult;\r\n    }\r\n}\r\nNumericAggregationPlugin.implementedFunctions = {\r\n    'SUM': {\r\n        method: 'sum',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SUMSQ': {\r\n        method: 'sumsq',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MAX': {\r\n        method: 'max',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MIN': {\r\n        method: 'min',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MAXA': {\r\n        method: 'maxa',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MINA': {\r\n        method: 'mina',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'COUNT': {\r\n        method: 'count',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'COUNTA': {\r\n        method: 'counta',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'AVERAGE': {\r\n        method: 'average',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'AVERAGEA': {\r\n        method: 'averagea',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'PRODUCT': {\r\n        method: 'product',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VAR.S': {\r\n        method: 'vars',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VAR.P': {\r\n        method: 'varp',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VARA': {\r\n        method: 'vara',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VARPA': {\r\n        method: 'varpa',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEV.S': {\r\n        method: 'stdevs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEV.P': {\r\n        method: 'stdevp',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEVA': {\r\n        method: 'stdeva',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEVPA': {\r\n        method: 'stdevpa',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SUBTOTAL': {\r\n        method: 'subtotal',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    }\r\n};\r\nNumericAggregationPlugin.aliases = {\r\n    VAR: 'VAR.S',\r\n    VARP: 'VAR.P',\r\n    STDEV: 'STDEV.S',\r\n    STDEVP: 'STDEV.P',\r\n    VARS: 'VAR.S',\r\n    STDEVS: 'STDEV.S',\r\n};\r\nfunction strictlyNumbers(arg) {\r\n    if (isExtendedNumber(arg) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction numbersBooleans(arg) {\r\n    if (typeof arg === 'boolean') {\r\n        return coerceBooleanToNumber(arg);\r\n    }\r\n    else if (isExtendedNumber(arg) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else if (typeof arg === 'string') {\r\n        return 0;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class PowerPlugin extends FunctionPlugin {\r\n    power(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('POWER'), Math.pow);\r\n    }\r\n}\r\nPowerPlugin.implementedFunctions = {\r\n    'POWER': {\r\n        method: 'power',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class RadiansPlugin extends FunctionPlugin {\r\n    radians(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RADIANS'), (arg) => arg * (Math.PI / 180));\r\n    }\r\n}\r\nRadiansPlugin.implementedFunctions = {\r\n    'RADIANS': {\r\n        method: 'radians',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { padLeft } from '../../format/format';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nconst MAX_LENGTH = 10;\r\nconst DECIMAL_NUMBER_OF_BITS = 255;\r\nconst MIN_BASE = 2;\r\nconst MAX_BASE = 36;\r\nconst ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport class RadixConversionPlugin extends FunctionPlugin {\r\n    dec2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2BIN'), (value, places) => decimalToBaseWithExactPadding(value, 2, places));\r\n    }\r\n    dec2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2OCT'), (value, places) => decimalToBaseWithExactPadding(value, 8, places));\r\n    }\r\n    dec2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2HEX'), (value, places) => decimalToBaseWithExactPadding(value, 16, places));\r\n    }\r\n    bin2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2DEC'), (binary) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return twoComplementToDecimal(binaryWithSign, 2);\r\n        });\r\n    }\r\n    bin2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2OCT'), (binary, places) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 8, places);\r\n        });\r\n    }\r\n    bin2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2HEX'), (binary, places) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 16, places);\r\n        });\r\n    }\r\n    oct2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2DEC'), (octal) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return twoComplementToDecimal(octalWithSign, 8);\r\n        });\r\n    }\r\n    oct2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2BIN'), (octal, places) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 2, places);\r\n        });\r\n    }\r\n    oct2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2HEX'), (octal, places) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 16, places);\r\n        });\r\n    }\r\n    hex2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2DEC'), (hexadecimal) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return twoComplementToDecimal(hexadecimalWithSign, 16);\r\n        });\r\n    }\r\n    hex2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2BIN'), (hexadecimal, places) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 2, places);\r\n        });\r\n    }\r\n    hex2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2OCT'), (hexadecimal, places) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 8, places);\r\n        });\r\n    }\r\n    base(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BASE'), decimalToBaseWithMinimumPadding);\r\n    }\r\n    decimal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DECIMAL'), (arg, base) => {\r\n            const input = coerceStringToBase(arg, base, DECIMAL_NUMBER_OF_BITS);\r\n            if (input === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return parseInt(input, base);\r\n        });\r\n    }\r\n}\r\nRadixConversionPlugin.implementedFunctions = {\r\n    'DEC2BIN': {\r\n        method: 'dec2bin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'DEC2OCT': {\r\n        method: 'dec2oct',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'DEC2HEX': {\r\n        method: 'dec2hex',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'BIN2DEC': {\r\n        method: 'bin2dec',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ],\r\n    },\r\n    'BIN2OCT': {\r\n        method: 'bin2oct',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'BIN2HEX': {\r\n        method: 'bin2hex',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'OCT2DEC': {\r\n        method: 'oct2dec',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ],\r\n    },\r\n    'OCT2BIN': {\r\n        method: 'oct2bin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'OCT2HEX': {\r\n        method: 'oct2hex',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'HEX2DEC': {\r\n        method: 'hex2dec',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ],\r\n    },\r\n    'HEX2BIN': {\r\n        method: 'hex2bin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'HEX2OCT': {\r\n        method: 'hex2oct',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'DECIMAL': {\r\n        method: 'decimal',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\r\n        ],\r\n    },\r\n    'BASE': {\r\n        method: 'base',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true, minValue: 0, maxValue: DECIMAL_NUMBER_OF_BITS },\r\n        ],\r\n    },\r\n};\r\nfunction coerceStringToBase(value, base, maxLength) {\r\n    const baseAlphabet = ALPHABET.substr(0, base);\r\n    const regex = new RegExp(`^[${baseAlphabet}]+$`);\r\n    if (value.length > maxLength || !regex.test(value)) {\r\n        return undefined;\r\n    }\r\n    return value;\r\n}\r\nfunction decimalToBaseWithExactPadding(value, base, places) {\r\n    if (value > maxValFromBase(base)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLarge);\r\n    }\r\n    if (value < minValFromBase(base)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseSmall);\r\n    }\r\n    const result = decimalToRadixComplement(value, base);\r\n    if (places === undefined || value < 0) {\r\n        return result;\r\n    }\r\n    else if (result.length > places) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLong);\r\n    }\r\n    else {\r\n        return padLeft(result, places);\r\n    }\r\n}\r\nfunction minValFromBase(base) {\r\n    return -Math.pow(base, MAX_LENGTH) / 2;\r\n}\r\nfunction maxValFromBase(base) {\r\n    return -minValFromBase(base) - 1;\r\n}\r\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\r\n    const result = decimalToRadixComplement(value, base);\r\n    if (places !== undefined && places > result.length) {\r\n        return padLeft(result, places);\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\nfunction decimalToRadixComplement(value, base) {\r\n    const offset = value < 0 ? Math.pow(base, MAX_LENGTH) : 0;\r\n    return (value + offset).toString(base).toUpperCase();\r\n}\r\nfunction twoComplementToDecimal(value, base) {\r\n    const parsed = parseInt(value, base);\r\n    const offset = Math.pow(base, MAX_LENGTH);\r\n    return (parsed >= offset / 2) ? parsed - offset : parsed;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class RandomPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to RAND()\r\n     *\r\n     * Returns a pseudo-random floating-point random number\r\n     * in the range [0,1).\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    rand(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RAND'), Math.random);\r\n    }\r\n    randbetween(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RANDBETWEEN'), (lower, upper) => {\r\n            if (upper < lower) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            lower = Math.ceil(lower);\r\n            upper = Math.floor(upper) + 1;\r\n            if (lower === upper) {\r\n                upper += 1;\r\n            }\r\n            return lower + Math.floor(Math.random() * (upper - lower));\r\n        });\r\n    }\r\n}\r\nRandomPlugin.implementedFunctions = {\r\n    'RAND': {\r\n        method: 'rand',\r\n        parameters: [],\r\n        isVolatile: true,\r\n    },\r\n    'RANDBETWEEN': {\r\n        method: 'randbetween',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        isVolatile: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport function findNextOddNumber(arg) {\r\n    const ceiled = Math.ceil(arg);\r\n    return (ceiled % 2 === 1) ? ceiled : ceiled + 1;\r\n}\r\nexport function findNextEvenNumber(arg) {\r\n    const ceiled = Math.ceil(arg);\r\n    return (ceiled % 2 === 0) ? ceiled : ceiled + 1;\r\n}\r\nexport class RoundingPlugin extends FunctionPlugin {\r\n    roundup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.ceil(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.ceil(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    rounddown(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.floor(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.floor(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    round(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUND'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.round(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.round(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    intFunc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INT'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -Math.floor(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return Math.floor(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    even(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EVEN'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -findNextEvenNumber(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return findNextEvenNumber(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    odd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ODD'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -findNextOddNumber(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return findNextOddNumber(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    ceilingmath(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING.MATH'), (value, significance, mode) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            if (mode === 1 && value < 0) {\r\n                significance = -significance;\r\n            }\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    ceiling(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING'), (value, significance) => {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            if (significance === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            if ((value > 0) && (significance < 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    ceilingprecise(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING.PRECISE'), (value, significance) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    floormath(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR.MATH'), (value, significance, mode) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            if (mode === 1 && value < 0) {\r\n                significance *= -1;\r\n            }\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n    floor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR'), (value, significance) => {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            if (significance === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            if ((value > 0) && (significance < 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n    floorprecise(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR.PRECISE'), (value, significance) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n}\r\nRoundingPlugin.implementedFunctions = {\r\n    'ROUNDUP': {\r\n        method: 'roundup',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'ROUNDDOWN': {\r\n        method: 'rounddown',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'ROUND': {\r\n        method: 'round',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'INT': {\r\n        method: 'intFunc',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n    'EVEN': {\r\n        method: 'even',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n    'ODD': {\r\n        method: 'odd',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n    'CEILING.MATH': {\r\n        method: 'ceilingmath',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'CEILING': {\r\n        method: 'ceiling',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'CEILING.PRECISE': {\r\n        method: 'ceilingprecise',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ],\r\n    },\r\n    'FLOOR.MATH': {\r\n        method: 'floormath',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'FLOOR': {\r\n        method: 'floor',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'FLOOR.PRECISE': {\r\n        method: 'floorprecise',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ],\r\n    },\r\n};\r\nRoundingPlugin.aliases = {\r\n    'ISO.CEILING': 'CEILING.PRECISE',\r\n    'TRUNC': 'ROUNDDOWN',\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class SqrtPlugin extends FunctionPlugin {\r\n    sqrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SQRT'), Math.sqrt);\r\n    }\r\n}\r\nSqrtPlugin.implementedFunctions = {\r\n    'SQRT': {\r\n        method: 'sqrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { Condition, CriterionFunctionCompute } from '../CriterionFunctionCompute';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nclass AverageResult {\r\n    constructor(sum, count) {\r\n        this.sum = sum;\r\n        this.count = count;\r\n    }\r\n    static single(arg) {\r\n        return new AverageResult(arg, 1);\r\n    }\r\n    compose(other) {\r\n        return new AverageResult(this.sum + other.sum, this.count + other.count);\r\n    }\r\n    averageValue() {\r\n        if (this.count > 0) {\r\n            return this.sum / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nAverageResult.empty = new AverageResult(0, 0);\r\n/** Computes key for criterion function cache */\r\nfunction conditionalAggregationFunctionCacheKey(functionName) {\r\n    return (conditions) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const conditionsStrings = conditions.map((c) => `${c.conditionRange.range.sheet},${c.conditionRange.range.start.col},${c.conditionRange.range.start.row}`);\r\n        return [functionName, ...conditionsStrings].join(',');\r\n    };\r\n}\r\nfunction zeroForInfinite(value) {\r\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction mapToRawScalarValue(arg) {\r\n    if (arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg);\r\n    }\r\n    return undefined;\r\n}\r\nexport class ConditionalAggregationPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to SUMIF(Range, Criterion, SumRange)\r\n     *\r\n     * Range is the range to which criterion is to be applied.\r\n     * Criterion is the criteria used to choose which cells will be included in sum.\r\n     * SumRange is the range on which adding will be performed.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sumif(ast, state) {\r\n        const functionName = 'SUMIF';\r\n        const computeFn = (conditionRange, criterion, values) => this.computeConditionalAggregationFunction(values !== null && values !== void 0 ? values : conditionRange, [conditionRange, criterion], functionName, 0, (left, right) => this.arithmeticHelper.nonstrictadd(left, right), mapToRawScalarValue);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    sumifs(ast, state) {\r\n        const functionName = 'SUMIFS';\r\n        const computeFn = (values, ...args) => this.computeConditionalAggregationFunction(values, args, functionName, 0, (left, right) => this.arithmeticHelper.nonstrictadd(left, right), mapToRawScalarValue);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    averageif(ast, state) {\r\n        const functionName = 'AVERAGEIF';\r\n        const computeFn = (conditionRange, criterion, values) => {\r\n            const averageResult = this.computeConditionalAggregationFunction(values !== null && values !== void 0 ? values : conditionRange, [conditionRange, criterion], functionName, AverageResult.empty, (left, right) => left.compose(right), (arg) => isExtendedNumber(arg) ? AverageResult.single(getRawValue(arg)) : AverageResult.empty);\r\n            if (averageResult instanceof CellError) {\r\n                return averageResult;\r\n            }\r\n            else {\r\n                return averageResult.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    /**\r\n     * Corresponds to COUNTIF(Range, Criterion)\r\n     *\r\n     * Range is the range to which criterion is to be applied.\r\n     * Criterion is the criteria used to choose which cells will be included in sum.\r\n     *\r\n     * Returns number of cells on which criteria evaluate to true.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    countif(ast, state) {\r\n        const functionName = 'COUNTIF';\r\n        const computeFn = (conditionRange, criterion) => this.computeConditionalAggregationFunction(conditionRange, [conditionRange, criterion], functionName, 0, (left, right) => left + right, () => 1);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    countifs(ast, state) {\r\n        const functionName = 'COUNTIFS';\r\n        const computeFn = (...args) => this.computeConditionalAggregationFunction(args[0], args, functionName, 0, (left, right) => left + right, () => 1);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    minifs(ast, state) {\r\n        const functionName = 'MINIFS';\r\n        const composeFunction = (left, right) => {\r\n            if (right === undefined || left === undefined) {\r\n                return right === undefined ? left : right;\r\n            }\r\n            return Math.min(left, right);\r\n        };\r\n        const computeFn = (values, ...args) => {\r\n            const minResult = this.computeConditionalAggregationFunction(values, args, functionName, Number.POSITIVE_INFINITY, composeFunction, mapToRawScalarValue);\r\n            return zeroForInfinite(minResult);\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    maxifs(ast, state) {\r\n        const functionName = 'MAXIFS';\r\n        const composeFunction = (left, right) => {\r\n            if (right === undefined || left === undefined) {\r\n                return right === undefined ? left : right;\r\n            }\r\n            return Math.max(left, right);\r\n        };\r\n        const computeFn = (values, ...args) => {\r\n            const maxResult = this.computeConditionalAggregationFunction(values, args, functionName, Number.NEGATIVE_INFINITY, composeFunction, mapToRawScalarValue);\r\n            return zeroForInfinite(maxResult);\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    computeConditionalAggregationFunction(valuesRange, conditionArgs, functionName, reduceInitialValue, composeFunction, mapFunction) {\r\n        const conditions = [];\r\n        for (let i = 0; i < conditionArgs.length; i += 2) {\r\n            const conditionArg = conditionArgs[i];\r\n            const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(conditionArgs[i + 1], this.arithmeticHelper);\r\n            if (criterionPackage === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\r\n            }\r\n            conditions.push(new Condition(conditionArg, criterionPackage));\r\n        }\r\n        return new CriterionFunctionCompute(this.interpreter, conditionalAggregationFunctionCacheKey(functionName), reduceInitialValue, composeFunction, mapFunction).compute(valuesRange, conditions);\r\n    }\r\n}\r\nConditionalAggregationPlugin.implementedFunctions = {\r\n    SUMIF: {\r\n        method: 'sumif',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n            { argumentType: FunctionArgumentType.RANGE, optionalArg: true },\r\n        ],\r\n    },\r\n    COUNTIF: {\r\n        method: 'countif',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n        ],\r\n    },\r\n    AVERAGEIF: {\r\n        method: 'averageif',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n            { argumentType: FunctionArgumentType.RANGE, optionalArg: true },\r\n        ],\r\n    },\r\n    SUMIFS: {\r\n        method: 'sumifs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    COUNTIFS: {\r\n        method: 'countifs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    MINIFS: {\r\n        method: 'minifs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    MAXIFS: {\r\n        method: 'maxifs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { split } from '../generatorUtils';\r\nimport { getRawValue } from './InterpreterValue';\r\nconst findSmallerRangeForMany = (dependencyGraph, conditionRanges, valuesRange) => {\r\n    if (valuesRange.end.row > valuesRange.start.row) {\r\n        const valuesRangeEndRowLess = simpleCellAddress(valuesRange.end.sheet, valuesRange.end.col, valuesRange.end.row - 1);\r\n        const rowLessVertex = dependencyGraph.getRange(valuesRange.start, valuesRangeEndRowLess);\r\n        if (rowLessVertex !== undefined) {\r\n            return {\r\n                smallerRangeVertex: rowLessVertex,\r\n                restValuesRange: valuesRange.withStart(simpleCellAddress(valuesRange.start.sheet, valuesRange.start.col, valuesRange.end.row)),\r\n                restConditionRanges: conditionRanges.map((conditionRange) => conditionRange.withStart(simpleCellAddress(conditionRange.start.sheet, conditionRange.start.col, conditionRange.end.row))),\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        restValuesRange: valuesRange,\r\n        restConditionRanges: conditionRanges,\r\n    };\r\n};\r\nexport class CriterionFunctionCompute {\r\n    constructor(interpreter, cacheKey, reduceInitialValue, composeFunction, mapFunction) {\r\n        this.interpreter = interpreter;\r\n        this.cacheKey = cacheKey;\r\n        this.reduceInitialValue = reduceInitialValue;\r\n        this.composeFunction = composeFunction;\r\n        this.mapFunction = mapFunction;\r\n        this.dependencyGraph = this.interpreter.dependencyGraph;\r\n    }\r\n    compute(simpleValuesRange, conditions) {\r\n        for (const condition of conditions) {\r\n            if (!condition.conditionRange.sameDimensionsAs(simpleValuesRange)) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\r\n            }\r\n        }\r\n        const valuesRangeVertex = this.tryToGetRangeVertexForRangeValue(simpleValuesRange);\r\n        const conditionsVertices = conditions.map((c) => this.tryToGetRangeVertexForRangeValue(c.conditionRange));\r\n        if (valuesRangeVertex && conditionsVertices.every((e) => e !== undefined)) {\r\n            const fullCriterionString = conditions.map((c) => c.criterionPackage.raw).join(',');\r\n            const cachedResult = this.findAlreadyComputedValueInCache(valuesRangeVertex, this.cacheKey(conditions), fullCriterionString);\r\n            if (cachedResult !== undefined) {\r\n                this.interpreter.stats.incrementCriterionFunctionFullCacheUsed();\r\n                return cachedResult;\r\n            }\r\n            const cache = this.buildNewCriterionCache(this.cacheKey(conditions), conditions.map((c) => c.conditionRange.range), simpleValuesRange.range);\r\n            if (!cache.has(fullCriterionString)) {\r\n                cache.set(fullCriterionString, [\r\n                    this.evaluateRangeValue(simpleValuesRange, conditions),\r\n                    conditions.map((condition) => condition.criterionPackage.lambda),\r\n                ]);\r\n            }\r\n            valuesRangeVertex.setCriterionFunctionValues(this.cacheKey(conditions), cache);\r\n            conditionsVertices.forEach(range => {\r\n                if (range !== undefined) {\r\n                    range.addDependentCacheRange(valuesRangeVertex);\r\n                }\r\n            });\r\n            return cache.get(fullCriterionString)[0];\r\n        }\r\n        else {\r\n            return this.evaluateRangeValue(simpleValuesRange, conditions);\r\n        }\r\n    }\r\n    tryToGetRangeVertexForRangeValue(rangeValue) {\r\n        const maybeRange = rangeValue.range;\r\n        if (maybeRange === undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.dependencyGraph.getRange(maybeRange.start, maybeRange.end);\r\n        }\r\n    }\r\n    reduceFunction(iterable) {\r\n        let acc = this.reduceInitialValue;\r\n        for (const val of iterable) {\r\n            acc = this.composeFunction(acc, val);\r\n        }\r\n        return acc;\r\n    }\r\n    findAlreadyComputedValueInCache(rangeVertex, cacheKey, criterionString) {\r\n        return rangeVertex.getCriterionFunctionValue(cacheKey, criterionString);\r\n    }\r\n    evaluateRangeValue(simpleValuesRange, conditions) {\r\n        const criterionLambdas = conditions.map((condition) => condition.criterionPackage.lambda);\r\n        const values = Array.from(simpleValuesRange.valuesFromTopLeftCorner()).map(this.mapFunction)[Symbol.iterator]();\r\n        const conditionsIterators = conditions.map((condition) => condition.conditionRange.iterateValuesFromTopLeftCorner());\r\n        const filteredValues = ifFilter(criterionLambdas, conditionsIterators, values);\r\n        return this.reduceFunction(filteredValues);\r\n    }\r\n    buildNewCriterionCache(cacheKey, simpleConditionRanges, simpleValuesRange) {\r\n        const currentRangeVertex = this.dependencyGraph.getRange(simpleValuesRange.start, simpleValuesRange.end);\r\n        const { smallerRangeVertex, restConditionRanges, restValuesRange } = findSmallerRangeForMany(this.dependencyGraph, simpleConditionRanges, simpleValuesRange);\r\n        let smallerCache;\r\n        if (smallerRangeVertex !== undefined && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\r\n            smallerCache = smallerRangeVertex.getCriterionFunctionValues(cacheKey);\r\n        }\r\n        else {\r\n            smallerCache = new Map();\r\n        }\r\n        const newCache = new Map();\r\n        smallerCache.forEach(([value, criterionLambdas], key) => {\r\n            const filteredValues = ifFilter(criterionLambdas, restConditionRanges.map((rcr) => getRangeValues(this.dependencyGraph, rcr)), Array.from(getRangeValues(this.dependencyGraph, restValuesRange)).map(this.mapFunction)[Symbol.iterator]());\r\n            const newCacheValue = this.composeFunction(value, this.reduceFunction(filteredValues));\r\n            this.interpreter.stats.incrementCriterionFunctionPartialCacheUsed();\r\n            newCache.set(key, [newCacheValue, criterionLambdas]);\r\n        });\r\n        return newCache;\r\n    }\r\n}\r\nexport class Condition {\r\n    constructor(conditionRange, criterionPackage) {\r\n        this.conditionRange = conditionRange;\r\n        this.criterionPackage = criterionPackage;\r\n    }\r\n}\r\nfunction* getRangeValues(dependencyGraph, cellRange) {\r\n    for (const cellFromRange of cellRange.addresses(dependencyGraph)) {\r\n        yield getRawValue(dependencyGraph.getScalarValue(cellFromRange));\r\n    }\r\n}\r\nfunction* ifFilter(criterionLambdas, conditionalIterables, computableIterable) {\r\n    for (const computable of computableIterable) {\r\n        const conditionalSplits = conditionalIterables.map((conditionalIterable) => split(conditionalIterable));\r\n        if (!conditionalSplits.every((cs) => Object.prototype.hasOwnProperty.call(cs, 'value'))) {\r\n            return;\r\n        }\r\n        const conditionalFirsts = conditionalSplits.map((cs) => getRawValue(cs.value));\r\n        if (zip(conditionalFirsts, criterionLambdas).every(([conditionalFirst, criterionLambda]) => criterionLambda(conditionalFirst))) {\r\n            yield computable;\r\n        }\r\n        conditionalIterables = conditionalSplits.map((cs) => cs.rest);\r\n    }\r\n}\r\nfunction zip(arr1, arr2) {\r\n    const result = [];\r\n    for (let i = 0; i < Math.min(arr1.length, arr2.length); i++) {\r\n        result.push([arr1[i], arr2[i]]);\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nexport function* empty() {\r\n}\r\nexport function split(iterable) {\r\n    const iterator = iterable[Symbol.iterator]();\r\n    const { done, value } = iterator.next();\r\n    if (done) {\r\n        return { rest: empty() };\r\n    }\r\n    else {\r\n        return { value, rest: iterator };\r\n    }\r\n}\r\nexport function first(iterable) {\r\n    const iterator = iterable[Symbol.iterator]();\r\n    const { done, value } = iterator.next();\r\n    if (!done) {\r\n        return value;\r\n    }\r\n    return undefined;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class SumprodPlugin extends FunctionPlugin {\r\n    sumproduct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMPRODUCT'), (...args) => {\r\n            const width = args[0].width();\r\n            const height = args[0].height();\r\n            for (const arg of args) {\r\n                if (arg.width() !== width || arg.height() !== height) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\r\n                }\r\n            }\r\n            let ret = 0;\r\n            const iterators = args.map(arg => arg.iterateValuesFromTopLeftCorner());\r\n            for (let i = 0; i < width * height; i++) {\r\n                let acc = 1;\r\n                for (const it of iterators) {\r\n                    const val = it.next().value;\r\n                    if (val instanceof CellError) {\r\n                        return val;\r\n                    }\r\n                    const coercedVal = this.coerceScalarToNumberOrError(val);\r\n                    if (isExtendedNumber(coercedVal)) {\r\n                        acc *= getRawValue(coercedVal);\r\n                    }\r\n                    else {\r\n                        acc = 0;\r\n                    }\r\n                }\r\n                ret += acc;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nSumprodPlugin.implementedFunctions = {\r\n    'SUMPRODUCT': {\r\n        method: 'sumproduct',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing text-specific functions\r\n */\r\nexport class TextPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to CONCATENATE(value1, [value2, ...])\r\n     *\r\n     * Concatenates provided arguments to one string.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    concatenate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONCATENATE'), (...args) => {\r\n            return ''.concat(...args);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to SPLIT(string, index)\r\n     *\r\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    split(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SPLIT'), (stringToSplit, indexToUse) => {\r\n            const splittedString = stringToSplit.split(' ');\r\n            if (indexToUse >= splittedString.length || indexToUse < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\r\n            }\r\n            return splittedString[indexToUse];\r\n        });\r\n    }\r\n    len(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LEN'), (arg) => {\r\n            return arg.length;\r\n        });\r\n    }\r\n    lower(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOWER'), (arg) => {\r\n            return arg.toLowerCase();\r\n        });\r\n    }\r\n    trim(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRIM'), (arg) => {\r\n            return arg.replace(/^ +| +$/g, '').replace(/ +/g, ' ');\r\n        });\r\n    }\r\n    proper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PROPER'), (arg) => {\r\n            return arg.replace(/\\p{L}+/gu, word => word.charAt(0).toUpperCase() + word.substring(1).toLowerCase());\r\n        });\r\n    }\r\n    clean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CLEAN'), (arg) => {\r\n            // eslint-disable-next-line no-control-regex\r\n            return arg.replace(/[\\u0000-\\u001F]/g, '');\r\n        });\r\n    }\r\n    exact(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXACT'), (left, right) => {\r\n            return left === right;\r\n        });\r\n    }\r\n    rept(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('REPT'), (text, count) => {\r\n            if (count < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeCount);\r\n            }\r\n            return text.repeat(count);\r\n        });\r\n    }\r\n    right(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RIGHT'), (text, length) => {\r\n            if (length < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            else if (length === 0) {\r\n                return '';\r\n            }\r\n            return text.slice(-length);\r\n        });\r\n    }\r\n    left(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LEFT'), (text, length) => {\r\n            if (length < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.slice(0, length);\r\n        });\r\n    }\r\n    mid(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MID'), (text, startPosition, numberOfChars) => {\r\n            if (startPosition < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (numberOfChars < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.substring(startPosition - 1, startPosition + numberOfChars - 1);\r\n        });\r\n    }\r\n    replace(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('REPLACE'), (text, startPosition, numberOfChars, newText) => {\r\n            if (startPosition < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (numberOfChars < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.substring(0, startPosition - 1) + newText + text.substring(startPosition + numberOfChars - 1);\r\n        });\r\n    }\r\n    search(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SEARCH'), (pattern, text, startIndex) => {\r\n            if (startIndex < 1 || startIndex > text.length) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LengthBounds);\r\n            }\r\n            const normalizedPattern = pattern.toLowerCase();\r\n            const normalizedText = text.substring(startIndex - 1).toLowerCase();\r\n            const index = this.arithmeticHelper.requiresRegex(normalizedPattern)\r\n                ? this.arithmeticHelper.searchString(normalizedPattern, normalizedText)\r\n                : normalizedText.indexOf(normalizedPattern);\r\n            return index > -1 ? index + startIndex : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\r\n        });\r\n    }\r\n    substitute(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUBSTITUTE'), (text, oldText, newText, occurrence) => {\r\n            const oldTextRegexp = new RegExp(oldText, 'g');\r\n            if (occurrence === undefined) {\r\n                return text.replace(oldTextRegexp, newText);\r\n            }\r\n            if (occurrence < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            let match;\r\n            let i = 0;\r\n            while ((match = oldTextRegexp.exec(text)) !== null) {\r\n                if (occurrence === ++i) {\r\n                    return text.substring(0, match.index) + newText + text.substring(oldTextRegexp.lastIndex);\r\n                }\r\n            }\r\n            return text;\r\n        });\r\n    }\r\n    find(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FIND'), (pattern, text, startIndex) => {\r\n            if (startIndex < 1 || startIndex > text.length) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\r\n            }\r\n            const shiftedText = text.substring(startIndex - 1);\r\n            const index = shiftedText.indexOf(pattern) + startIndex;\r\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\r\n        });\r\n    }\r\n    t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T'), (arg) => {\r\n            if (arg instanceof CellError) {\r\n                return arg;\r\n            }\r\n            return typeof arg === 'string' ? arg : '';\r\n        });\r\n    }\r\n    upper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('UPPER'), (arg) => {\r\n            return arg.toUpperCase();\r\n        });\r\n    }\r\n}\r\nTextPlugin.implementedFunctions = {\r\n    'CONCATENATE': {\r\n        method: 'concatenate',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'EXACT': {\r\n        method: 'exact',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'SPLIT': {\r\n        method: 'split',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ]\r\n    },\r\n    'LEN': {\r\n        method: 'len',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'LOWER': {\r\n        method: 'lower',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'MID': {\r\n        method: 'mid',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ]\r\n    },\r\n    'TRIM': {\r\n        method: 'trim',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'T': {\r\n        method: 't',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.SCALAR }\r\n        ]\r\n    },\r\n    'PROPER': {\r\n        method: 'proper',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'CLEAN': {\r\n        method: 'clean',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'REPT': {\r\n        method: 'rept',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ]\r\n    },\r\n    'RIGHT': {\r\n        method: 'right',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'LEFT': {\r\n        method: 'left',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'REPLACE': {\r\n        method: 'replace',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n    'SEARCH': {\r\n        method: 'search',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'SUBSTITUTE': {\r\n        method: 'substitute',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true }\r\n        ]\r\n    },\r\n    'FIND': {\r\n        method: 'find',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.STRING },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'UPPER': {\r\n        method: 'upper',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nimport { PI } from './MathConstantsPlugin';\r\n/**\r\n * Interpreter plugin containing trigonometric functions\r\n */\r\nexport class TrigonometryPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to ACOS(value)\r\n     *\r\n     * Returns the arc cosine (or inverse cosine) of a number.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    acos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOS'), Math.acos);\r\n    }\r\n    asin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ASIN'), Math.asin);\r\n    }\r\n    cos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COS'), Math.cos);\r\n    }\r\n    sin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SIN'), Math.sin);\r\n    }\r\n    tan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TAN'), Math.tan);\r\n    }\r\n    atan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATAN'), Math.atan);\r\n    }\r\n    atan2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATAN2'), (x, y) => {\r\n            if (x === 0 && y === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.atan2(y, x);\r\n        });\r\n    }\r\n    cot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COT'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tan(arg)));\r\n    }\r\n    acot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOT'), (arg) => (arg === 0) ? PI / 2 : Math.atan(1 / arg));\r\n    }\r\n    sec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SEC'), (arg) => 1 / Math.cos(arg));\r\n    }\r\n    csc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CSC'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sin(arg)));\r\n    }\r\n    sinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SINH'), Math.sinh);\r\n    }\r\n    asinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ASINH'), Math.asinh);\r\n    }\r\n    cosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COSH'), Math.cosh);\r\n    }\r\n    acosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOSH'), Math.acosh);\r\n    }\r\n    tanh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TANH'), Math.tanh);\r\n    }\r\n    atanh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATANH'), Math.atanh);\r\n    }\r\n    coth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COTH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tanh(arg)));\r\n    }\r\n    acoth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOTH'), (arg) => (arg === 0) ? new CellError(ErrorType.NUM, ErrorMessage.NonZero) : Math.atanh(1 / arg));\r\n    }\r\n    sech(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SECH'), (arg) => 1 / Math.cosh(arg));\r\n    }\r\n    csch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CSCH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sinh(arg)));\r\n    }\r\n}\r\nTrigonometryPlugin.implementedFunctions = {\r\n    'ACOS': {\r\n        method: 'acos',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ASIN': {\r\n        method: 'asin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'COS': {\r\n        method: 'cos',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'SIN': {\r\n        method: 'sin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'TAN': {\r\n        method: 'tan',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ATAN': {\r\n        method: 'atan',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ATAN2': {\r\n        method: 'atan2',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ]\r\n    },\r\n    'COT': {\r\n        method: 'cot',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'SEC': {\r\n        method: 'sec',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'CSC': {\r\n        method: 'csc',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'SINH': {\r\n        method: 'sinh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'COSH': {\r\n        method: 'cosh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'TANH': {\r\n        method: 'tanh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'COTH': {\r\n        method: 'coth',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'SECH': {\r\n        method: 'sech',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'CSCH': {\r\n        method: 'csch',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ACOT': {\r\n        method: 'acot',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ASINH': {\r\n        method: 'asinh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ACOSH': {\r\n        method: 'acosh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ATANH': {\r\n        method: 'atanh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'ACOTH': {\r\n        method: 'acoth',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { RowSearchStrategy } from '../../Lookup/RowSearchStrategy';\r\nimport { StatType } from '../../statistics';\r\nimport { zeroIfEmpty } from '../ArithmeticHelper';\r\nimport { SimpleRangeValue } from '../../SimpleRangeValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class LookupPlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.rowSearch = new RowSearchStrategy(this.dependencyGraph);\r\n    }\r\n    /**\r\n     * Corresponds to VLOOKUP(key, range, index, [sorted])\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    vlookup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('VLOOKUP'), (key, rangeValue, index, sorted) => {\r\n            const range = rangeValue.range;\r\n            if (range === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (index < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (index > range.width()) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\r\n            }\r\n            return this.doVlookup(zeroIfEmpty(key), rangeValue, index - 1, sorted);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to HLOOKUP(key, range, index, [sorted])\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    hlookup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HLOOKUP'), (key, rangeValue, index, sorted) => {\r\n            const range = rangeValue.range;\r\n            if (range === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (index < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (index > range.height()) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\r\n            }\r\n            return this.doHlookup(zeroIfEmpty(key), rangeValue, index - 1, sorted);\r\n        });\r\n    }\r\n    match(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MATCH'), (key, rangeValue, type) => {\r\n            return this.doMatch(zeroIfEmpty(key), rangeValue, type);\r\n        });\r\n    }\r\n    searchInRange(key, range, sorted, searchStrategy) {\r\n        if (!sorted && typeof key === 'string' && this.arithmeticHelper.requiresRegex(key)) {\r\n            return searchStrategy.advancedFind(this.arithmeticHelper.eqMatcherFunction(key), range);\r\n        }\r\n        else {\r\n            const searchOptions = sorted ? { ordering: 'asc' } : { ordering: 'none', matchExactly: true };\r\n            return searchStrategy.find(key, range, searchOptions);\r\n        }\r\n    }\r\n    doVlookup(key, rangeValue, index, sorted) {\r\n        this.dependencyGraph.stats.start(StatType.VLOOKUP);\r\n        const range = rangeValue.range;\r\n        let searchedRange;\r\n        if (range === undefined) {\r\n            searchedRange = SimpleRangeValue.onlyValues(rangeValue.data.map((arg) => [arg[0]]));\r\n        }\r\n        else {\r\n            searchedRange = SimpleRangeValue.onlyRange(AbsoluteCellRange.spanFrom(range.start, 1, range.height()), this.dependencyGraph);\r\n        }\r\n        const rowIndex = this.searchInRange(key, searchedRange, sorted, this.columnSearch);\r\n        this.dependencyGraph.stats.end(StatType.VLOOKUP);\r\n        if (rowIndex === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        let value;\r\n        if (range === undefined) {\r\n            value = rangeValue.data[rowIndex][index];\r\n        }\r\n        else {\r\n            const address = simpleCellAddress(range.sheet, range.start.col + index, range.start.row + rowIndex);\r\n            value = this.dependencyGraph.getCellValue(address);\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n        }\r\n        return value;\r\n    }\r\n    doHlookup(key, rangeValue, index, sorted) {\r\n        const range = rangeValue.range;\r\n        let searchedRange;\r\n        if (range === undefined) {\r\n            searchedRange = SimpleRangeValue.onlyValues([rangeValue.data[0]]);\r\n        }\r\n        else {\r\n            searchedRange = SimpleRangeValue.onlyRange(AbsoluteCellRange.spanFrom(range.start, range.width(), 1), this.dependencyGraph);\r\n        }\r\n        const colIndex = this.searchInRange(key, searchedRange, sorted, this.rowSearch);\r\n        if (colIndex === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        let value;\r\n        if (range === undefined) {\r\n            value = rangeValue.data[index][colIndex];\r\n        }\r\n        else {\r\n            const address = simpleCellAddress(range.sheet, range.start.col + colIndex, range.start.row + index);\r\n            value = this.dependencyGraph.getCellValue(address);\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n        }\r\n        return value;\r\n    }\r\n    doMatch(key, rangeValue, type) {\r\n        if (![-1, 0, 1].includes(type)) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\r\n        }\r\n        if (rangeValue.width() > 1 && rangeValue.height() > 1) {\r\n            return new CellError(ErrorType.NA);\r\n        }\r\n        const searchStrategy = rangeValue.width() === 1 ? this.columnSearch : this.rowSearch;\r\n        const searchOptions = type === 0\r\n            ? { ordering: 'none', matchExactly: true }\r\n            : { ordering: type === -1 ? 'desc' : 'asc' };\r\n        const index = searchStrategy.find(key, rangeValue, searchOptions);\r\n        if (index === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        return index + 1;\r\n    }\r\n}\r\nLookupPlugin.implementedFunctions = {\r\n    'VLOOKUP': {\r\n        method: 'vlookup',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.BOOLEAN, defaultValue: true },\r\n        ]\r\n    },\r\n    'HLOOKUP': {\r\n        method: 'hlookup',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.BOOLEAN, defaultValue: true },\r\n        ]\r\n    },\r\n    'MATCH': {\r\n        method: 'match',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { AdvancedFind } from './AdvancedFind';\r\nexport class RowSearchStrategy extends AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        super(dependencyGraph);\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    find(searchKey, rangeValue, searchOptions) {\r\n        return this.basicFind(searchKey, rangeValue, 'col', searchOptions);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue } from '../InterpreterValue';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class RomanPlugin extends FunctionPlugin {\r\n    roman(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROMAN'), (val, mode) => {\r\n            val = Math.trunc(val);\r\n            if (mode === false) {\r\n                mode = 4;\r\n            }\r\n            else if (mode === true) {\r\n                mode = 0;\r\n            }\r\n            mode = getRawValue(this.coerceScalarToNumberOrError(mode));\r\n            if (mode instanceof CellError) {\r\n                return mode;\r\n            }\r\n            mode = Math.trunc(mode);\r\n            if (mode < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueSmall);\r\n            }\r\n            if (mode > 4) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueLarge);\r\n            }\r\n            return romanMode(val, mode);\r\n        });\r\n    }\r\n    arabic(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARABIC'), (inputString) => {\r\n            inputString = inputString.trim().toUpperCase();\r\n            let minusSign = false;\r\n            if (inputString.startsWith('-')) {\r\n                inputString = inputString.slice(1);\r\n                minusSign = true;\r\n                if (inputString === '') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\r\n                }\r\n            }\r\n            const work = { input: inputString, acc: 0 };\r\n            eatToken(work, { token: 'MMM', val: 3000 }, { token: 'MM', val: 2000 }, { token: 'M', val: 1000 });\r\n            eatToken(work, { token: 'IM', val: 999 }, { token: 'VM', val: 995 }, { token: 'XM', val: 990 }, { token: 'LM', val: 950 }, { token: 'CM', val: 900 });\r\n            eatToken(work, { token: 'D', val: 500 }, { token: 'ID', val: 499 }, { token: 'VD', val: 495 }, { token: 'XD', val: 490 }, { token: 'LD', val: 450 }, { token: 'CD', val: 400 });\r\n            eatToken(work, { token: 'CCC', val: 300 }, { token: 'CC', val: 200 }, { token: 'C', val: 100 });\r\n            eatToken(work, { token: 'IC', val: 99 }, { token: 'VC', val: 95 }, { token: 'XC', val: 90 });\r\n            eatToken(work, { token: 'L', val: 50 }, { token: 'IL', val: 49 }, { token: 'VL', val: 45 }, { token: 'XL', val: 40 });\r\n            eatToken(work, { token: 'XXX', val: 30 }, { token: 'XX', val: 20 }, { token: 'X', val: 10 });\r\n            eatToken(work, { token: 'IX', val: 9 });\r\n            eatToken(work, { token: 'V', val: 5 }, { token: 'IV', val: 4 });\r\n            eatToken(work, { token: 'III', val: 3 }, { token: 'II', val: 2 }, { token: 'I', val: 1 });\r\n            if (work.input !== '') {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\r\n            }\r\n            else {\r\n                return minusSign ? -work.acc : work.acc;\r\n            }\r\n        });\r\n    }\r\n}\r\nRomanPlugin.implementedFunctions = {\r\n    'ROMAN': {\r\n        method: 'roman',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1, lessThan: 4000 },\r\n            { argumentType: FunctionArgumentType.NOERROR, optionalArg: true, defaultValue: 0 }\r\n        ],\r\n    },\r\n    'ARABIC': {\r\n        method: 'arabic',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING },\r\n        ],\r\n    },\r\n};\r\nfunction eatToken(inputAcc, ...tokens) {\r\n    for (const token of tokens) {\r\n        if (inputAcc.input.startsWith(token.token)) {\r\n            inputAcc.input = inputAcc.input.slice(token.token.length);\r\n            inputAcc.acc += token.val;\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction romanMode(input, mode) {\r\n    const work = { val: input % 1000, acc: 'M'.repeat(Math.floor(input / 1000)) };\r\n    if (mode === 4) {\r\n        absorb(work, 'IM', 999, 1000);\r\n        absorb(work, 'ID', 499, 500);\r\n    }\r\n    if (mode >= 3) {\r\n        absorb(work, 'VM', 995, 1000);\r\n        absorb(work, 'VD', 495, 500);\r\n    }\r\n    if (mode >= 2) {\r\n        absorb(work, 'XM', 990, 1000);\r\n        absorb(work, 'XD', 490, 500);\r\n    }\r\n    if (mode >= 1) {\r\n        absorb(work, 'LM', 950, 1000);\r\n        absorb(work, 'LD', 450, 500);\r\n    }\r\n    absorb(work, 'CM', 900, 1000);\r\n    absorb(work, 'CD', 400, 500);\r\n    absorb(work, 'D', 500, 900);\r\n    work.acc += 'C'.repeat(Math.floor(work.val / 100));\r\n    work.val %= 100;\r\n    if (mode >= 2) {\r\n        absorb(work, 'IC', 99, 100);\r\n        absorb(work, 'IL', 49, 50);\r\n    }\r\n    if (mode >= 1) {\r\n        absorb(work, 'VC', 95, 100);\r\n        absorb(work, 'VL', 45, 50);\r\n    }\r\n    absorb(work, 'XC', 90, 100);\r\n    absorb(work, 'XL', 40, 50);\r\n    absorb(work, 'L', 50, 90);\r\n    work.acc += 'X'.repeat(Math.floor(work.val / 10));\r\n    work.val %= 10;\r\n    absorb(work, 'IX', 9, 10);\r\n    absorb(work, 'IV', 4, 5);\r\n    absorb(work, 'V', 5, 9);\r\n    work.acc += 'I'.repeat(work.val);\r\n    return work.acc;\r\n}\r\nfunction absorb(valAcc, token, lower, upper) {\r\n    if (valAcc.val >= lower && valAcc.val < upper) {\r\n        valAcc.val -= lower;\r\n        valAcc.acc += token;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class SimpleArithmerticPlugin extends FunctionPlugin {\r\n    add(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.ADD'), this.arithmeticHelper.addWithEpsilon);\r\n    }\r\n    concat(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.CONCAT'), this.arithmeticHelper.concat);\r\n    }\r\n    divide(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.DIVIDE'), this.arithmeticHelper.divide);\r\n    }\r\n    eq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.EQ'), this.arithmeticHelper.eq);\r\n    }\r\n    gt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.GT'), this.arithmeticHelper.gt);\r\n    }\r\n    gte(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.GTE'), this.arithmeticHelper.geq);\r\n    }\r\n    lt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.LT'), this.arithmeticHelper.lt);\r\n    }\r\n    lte(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.LTE'), this.arithmeticHelper.leq);\r\n    }\r\n    minus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.MINUS'), this.arithmeticHelper.subtract);\r\n    }\r\n    multiply(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.MULTIPLY'), this.arithmeticHelper.multiply);\r\n    }\r\n    ne(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.NE'), this.arithmeticHelper.neq);\r\n    }\r\n    pow(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.POW'), this.arithmeticHelper.pow);\r\n    }\r\n    uminus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UMINUS'), this.arithmeticHelper.unaryMinus);\r\n    }\r\n    upercent(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UNARY_PERCENT'), this.arithmeticHelper.unaryPercent);\r\n    }\r\n    uplus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UPLUS'), this.arithmeticHelper.unaryPlus);\r\n    }\r\n}\r\nSimpleArithmerticPlugin.implementedFunctions = {\r\n    'HF.ADD': {\r\n        method: 'add',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.CONCAT': {\r\n        method: 'concat',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.STRING, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.STRING, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.DIVIDE': {\r\n        method: 'divide',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.EQ': {\r\n        method: 'eq',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.GT': {\r\n        method: 'gt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.GTE': {\r\n        method: 'gte',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.LT': {\r\n        method: 'lt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.LTE': {\r\n        method: 'lte',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.MINUS': {\r\n        method: 'minus',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.MULTIPLY': {\r\n        method: 'multiply',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.NE': {\r\n        method: 'ne',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.POW': {\r\n        method: 'pow',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UMINUS': {\r\n        method: 'uminus',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UNARY_PERCENT': {\r\n        method: 'upercent',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UPLUS': {\r\n        method: 'uplus',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { besseli, besselj, besselk, bessely } from './3rdparty/bessel/bessel';\r\nimport { beta, binomial, centralF, chisquare, erf, erfc, exponential, gamma, gammafn, gammaln, hypgeom, lognormal, negbin, normal, normalci, poisson, studentt, tci, weibull } from './3rdparty/jstat/jstat';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class StatisticalPlugin extends FunctionPlugin {\r\n    erf(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ERF'), (lowerBound, upperBound) => {\r\n            if (upperBound === undefined) {\r\n                return erf(lowerBound);\r\n            }\r\n            else {\r\n                return erf(upperBound) - erf(lowerBound);\r\n            }\r\n        });\r\n    }\r\n    erfc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ERFC'), erfc);\r\n    }\r\n    expondist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXPON.DIST'), (x, lambda, cumulative) => {\r\n            if (cumulative) {\r\n                return exponential.cdf(x, lambda);\r\n            }\r\n            else {\r\n                return exponential.pdf(x, lambda);\r\n            }\r\n        });\r\n    }\r\n    fisher(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FISHER'), (x) => Math.log((1 + x) / (1 - x)) / 2);\r\n    }\r\n    fisherinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FISHERINV'), (y) => 1 - 2 / (Math.exp(2 * y) + 1));\r\n    }\r\n    gamma(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA'), gammafn);\r\n    }\r\n    gammadist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA.DIST'), (value, alphaVal, betaVal, cumulative) => {\r\n            if (cumulative) {\r\n                return gamma.cdf(value, alphaVal, betaVal);\r\n            }\r\n            else {\r\n                return gamma.pdf(value, alphaVal, betaVal);\r\n            }\r\n        });\r\n    }\r\n    gammaln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMALN'), gammaln);\r\n    }\r\n    gammainv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA.INV'), gamma.inv);\r\n    }\r\n    gauss(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAUSS'), (z) => normal.cdf(z, 0, 1) - 0.5);\r\n    }\r\n    betadist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BETA.DIST'), (x, alphaVal, betaVal, cumulative, A, B) => {\r\n            if (x <= A) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n            }\r\n            else if (x >= B) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            x = (x - A) / (B - A);\r\n            if (cumulative) {\r\n                return beta.cdf(x, alphaVal, betaVal);\r\n            }\r\n            else {\r\n                return beta.pdf(x, alphaVal, betaVal);\r\n            }\r\n        });\r\n    }\r\n    betainv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BETA.INV'), (x, alphaVal, betaVal, A, B) => {\r\n            if (A >= B) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            else {\r\n                return beta.inv(x, alphaVal, betaVal) * (B - A) + A;\r\n            }\r\n        });\r\n    }\r\n    binomialdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BINOM.DIST'), (succ, trials, prob, cumulative) => {\r\n            if (succ > trials) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            succ = Math.trunc(succ);\r\n            trials = Math.trunc(trials);\r\n            if (cumulative) {\r\n                return binomial.cdf(succ, trials, prob);\r\n            }\r\n            else {\r\n                return binomial.pdf(succ, trials, prob);\r\n            }\r\n        });\r\n    }\r\n    binomialinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BINOM.INV'), (trials, prob, alpha) => {\r\n            trials = Math.trunc(trials);\r\n            let lower = -1;\r\n            let upper = trials;\r\n            while (upper > lower + 1) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (binomial.cdf(mid, trials, prob) >= alpha) {\r\n                    upper = mid;\r\n                }\r\n                else {\r\n                    lower = mid;\r\n                }\r\n            }\r\n            return upper;\r\n        });\r\n    }\r\n    besselifn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELI'), (x, n) => besseli(x, Math.trunc(n)));\r\n    }\r\n    besseljfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELJ'), (x, n) => besselj(x, Math.trunc(n)));\r\n    }\r\n    besselkfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELK'), (x, n) => besselk(x, Math.trunc(n)));\r\n    }\r\n    besselyfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELY'), (x, n) => bessely(x, Math.trunc(n)));\r\n    }\r\n    chisqdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST'), (x, deg, cumulative) => {\r\n            deg = Math.trunc(deg);\r\n            if (cumulative) {\r\n                return chisquare.cdf(x, deg);\r\n            }\r\n            else {\r\n                return chisquare.pdf(x, deg);\r\n            }\r\n        });\r\n    }\r\n    chisqdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST.RT'), (x, deg) => 1 - chisquare.cdf(x, Math.trunc(deg)));\r\n    }\r\n    chisqinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.INV'), (p, deg) => chisquare.inv(p, Math.trunc(deg)));\r\n    }\r\n    chisqinvrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.INV.RT'), (p, deg) => chisquare.inv(1.0 - p, Math.trunc(deg)));\r\n    }\r\n    fdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.DIST'), (x, deg1, deg2, cumulative) => {\r\n            deg1 = Math.trunc(deg1);\r\n            deg2 = Math.trunc(deg2);\r\n            if (cumulative) {\r\n                return centralF.cdf(x, deg1, deg2);\r\n            }\r\n            else {\r\n                return centralF.pdf(x, deg1, deg2);\r\n            }\r\n        });\r\n    }\r\n    fdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.DIST.RT'), (x, deg1, deg2) => 1 - centralF.cdf(x, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    finv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.INV'), (p, deg1, deg2) => centralF.inv(p, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    finvrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.INV.RT'), (p, deg1, deg2) => centralF.inv(1.0 - p, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    weibulldist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEIBULL.DIST'), (x, shape, scale, cumulative) => {\r\n            if (cumulative) {\r\n                return weibull.cdf(x, scale, shape);\r\n            }\r\n            else {\r\n                return weibull.pdf(x, scale, shape);\r\n            }\r\n        });\r\n    }\r\n    poissondist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('POISSON.DIST'), (x, mean, cumulative) => {\r\n            x = Math.trunc(x);\r\n            if (cumulative) {\r\n                return poisson.cdf(x, mean);\r\n            }\r\n            else {\r\n                return poisson.pdf(x, mean);\r\n            }\r\n        });\r\n    }\r\n    hypgeomdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HYPGEOM.DIST'), (s, numberS, populationS, numberPop, cumulative) => {\r\n            if (s > numberS || s > populationS || numberS > numberPop || populationS > numberPop) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            if (s + numberPop < populationS + numberS) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            s = Math.trunc(s);\r\n            numberS = Math.trunc(numberS);\r\n            populationS = Math.trunc(populationS);\r\n            numberPop = Math.trunc(numberPop);\r\n            if (cumulative) {\r\n                return hypgeom.cdf(s, numberPop, populationS, numberS);\r\n            }\r\n            else {\r\n                return hypgeom.pdf(s, numberPop, populationS, numberS);\r\n            }\r\n        });\r\n    }\r\n    tdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST'), (x, deg, cumulative) => {\r\n            deg = Math.trunc(deg);\r\n            if (cumulative) {\r\n                return studentt.cdf(x, deg);\r\n            }\r\n            else {\r\n                return studentt.pdf(x, deg);\r\n            }\r\n        });\r\n    }\r\n    tdist2t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST.2T'), (x, deg) => (1 - studentt.cdf(x, Math.trunc(deg))) * 2);\r\n    }\r\n    tdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST.RT'), (x, deg) => 1 - studentt.cdf(x, Math.trunc(deg)));\r\n    }\r\n    tdistold(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TDIST'), (x, deg, mode) => mode * (1 - studentt.cdf(x, Math.trunc(deg))));\r\n    }\r\n    tinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.INV'), (p, deg) => studentt.inv(p, Math.trunc(deg)));\r\n    }\r\n    tinv2t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.INV.2T'), (p, deg) => studentt.inv(1 - p / 2, Math.trunc(deg)));\r\n    }\r\n    lognormdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOGNORM.DIST'), (x, mean, stddev, cumulative) => {\r\n            if (cumulative) {\r\n                return lognormal.cdf(x, mean, stddev);\r\n            }\r\n            else {\r\n                return lognormal.pdf(x, mean, stddev);\r\n            }\r\n        });\r\n    }\r\n    lognorminv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOGNORM.INV'), (p, mean, stddev) => lognormal.inv(p, mean, stddev));\r\n    }\r\n    normdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.DIST'), (x, mean, stddev, cumulative) => {\r\n            if (cumulative) {\r\n                return normal.cdf(x, mean, stddev);\r\n            }\r\n            else {\r\n                return normal.pdf(x, mean, stddev);\r\n            }\r\n        });\r\n    }\r\n    norminv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.INV'), (p, mean, stddev) => normal.inv(p, mean, stddev));\r\n    }\r\n    normsdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.S.DIST'), (x, cumulative) => {\r\n            if (cumulative) {\r\n                return normal.cdf(x, 0, 1);\r\n            }\r\n            else {\r\n                return normal.pdf(x, 0, 1);\r\n            }\r\n        });\r\n    }\r\n    normsinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.S.INV'), (p) => normal.inv(p, 0, 1));\r\n    }\r\n    phi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PHI'), (x) => normal.pdf(x, 0, 1));\r\n    }\r\n    negbinomdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NEGBINOM.DIST'), (nf, ns, p, cumulative) => {\r\n            nf = Math.trunc(nf);\r\n            ns = Math.trunc(ns);\r\n            if (cumulative) {\r\n                return negbin.cdf(nf, ns, p);\r\n            }\r\n            else {\r\n                return negbin.pdf(nf, ns, p);\r\n            }\r\n        });\r\n    }\r\n    confidencenorm(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.NORM'), \r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        (alpha, stddev, size) => normalci(1, alpha, stddev, Math.trunc(size))[1] - 1);\r\n    }\r\n    confidencet(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.T'), (alpha, stddev, size) => {\r\n            size = Math.trunc(size);\r\n            if (size === 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            return tci(1, alpha, stddev, size)[1] - 1;\r\n        });\r\n    }\r\n    standardize(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('STANDARDIZE'), (x, mean, stddev) => (x - mean) / stddev);\r\n    }\r\n}\r\nStatisticalPlugin.implementedFunctions = {\r\n    'ERF': {\r\n        method: 'erf',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true },\r\n        ]\r\n    },\r\n    'ERFC': {\r\n        method: 'erfc',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'EXPON.DIST': {\r\n        method: 'expondist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'FISHER': {\r\n        method: 'fisher',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: -1, lessThan: 1 }\r\n        ]\r\n    },\r\n    'FISHERINV': {\r\n        method: 'fisherinv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'GAMMA': {\r\n        method: 'gamma',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'GAMMA.DIST': {\r\n        method: 'gammadist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'GAMMALN': {\r\n        method: 'gammaln',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 }\r\n        ]\r\n    },\r\n    'GAMMA.INV': {\r\n        method: 'gammainv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, lessThan: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'GAUSS': {\r\n        method: 'gauss',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'BETA.DIST': {\r\n        method: 'betadist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'BETA.INV': {\r\n        method: 'betainv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'BINOM.DIST': {\r\n        method: 'binomialdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'BINOM.INV': {\r\n        method: 'binomialinv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n        ]\r\n    },\r\n    'BESSELI': {\r\n        method: 'besselifn',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELJ': {\r\n        method: 'besseljfn',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELK': {\r\n        method: 'besselkfn',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELY': {\r\n        method: 'besselyfn',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'CHISQ.DIST': {\r\n        method: 'chisqdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1, maxValue: 1e10 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'CHISQ.DIST.RT': {\r\n        method: 'chisqdistrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1, maxValue: 1e10 },\r\n        ]\r\n    },\r\n    'CHISQ.INV': {\r\n        method: 'chisqinv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1, maxValue: 1e10 },\r\n        ]\r\n    },\r\n    'CHISQ.INV.RT': {\r\n        method: 'chisqinvrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.DIST': {\r\n        method: 'fdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'F.DIST.RT': {\r\n        method: 'fdistrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.INV': {\r\n        method: 'finv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.INV.RT': {\r\n        method: 'finvrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'WEIBULL.DIST': {\r\n        method: 'weibulldist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'POISSON.DIST': {\r\n        method: 'poissondist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'HYPGEOM.DIST': {\r\n        method: 'hypgeomdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'T.DIST': {\r\n        method: 'tdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'T.DIST.2T': {\r\n        method: 'tdist2t',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'T.DIST.RT': {\r\n        method: 'tdistrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'TDIST': {\r\n        method: 'tdistold',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1, maxValue: 2 },\r\n        ]\r\n    },\r\n    'T.INV': {\r\n        method: 'tinv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'T.INV.2T': {\r\n        method: 'tinv2t',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'LOGNORM.DIST': {\r\n        method: 'lognormdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'LOGNORM.INV': {\r\n        method: 'lognorminv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'NORM.DIST': {\r\n        method: 'normdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'NORM.INV': {\r\n        method: 'norminv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'NORM.S.DIST': {\r\n        method: 'normsdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'NORM.S.INV': {\r\n        method: 'normsinv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n        ]\r\n    },\r\n    'PHI': {\r\n        method: 'phi',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER }\r\n        ]\r\n    },\r\n    'NEGBINOM.DIST': {\r\n        method: 'negbinomdist',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: FunctionArgumentType.BOOLEAN },\r\n        ]\r\n    },\r\n    'CONFIDENCE.NORM': {\r\n        method: 'confidencenorm',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'CONFIDENCE.T': {\r\n        method: 'confidencet',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'STANDARDIZE': {\r\n        method: 'standardize',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, greaterThan: 0 },\r\n        ],\r\n    },\r\n};\r\nStatisticalPlugin.aliases = {\r\n    NEGBINOMDIST: 'NEGBINOM.DIST',\r\n    EXPONDIST: 'EXPON.DIST',\r\n    BETADIST: 'BETA.DIST',\r\n    NORMDIST: 'NORM.DIST',\r\n    NORMINV: 'NORM.INV',\r\n    NORMSDIST: 'NORM.S.DIST',\r\n    NORMSINV: 'NORM.S.INV',\r\n    LOGNORMDIST: 'LOGNORM.DIST',\r\n    LOGINV: 'LOGNORM.INV',\r\n    TINV: 'T.INV.2T',\r\n    HYPGEOMDIST: 'HYPGEOM.DIST',\r\n    POISSON: 'POISSON.DIST',\r\n    WEIBULL: 'WEIBULL.DIST',\r\n    FINV: 'F.INV.RT',\r\n    FDIST: 'F.DIST.RT',\r\n    CHIDIST: 'CHISQ.DIST.RT',\r\n    CHIINV: 'CHISQ.INV.RT',\r\n    GAMMADIST: 'GAMMA.DIST',\r\n    'GAMMALN.PRECISE': 'GAMMALN',\r\n    GAMMAINV: 'GAMMA.INV',\r\n    BETAINV: 'BETA.INV',\r\n    BINOMDIST: 'BINOM.DIST',\r\n    CONFIDENCE: 'CONFIDENCE.NORM',\r\n    CRITBINOM: 'BINOM.INV',\r\n    WEIBULLDIST: 'WEIBULL.DIST',\r\n    TINV2T: 'T.INV.2T',\r\n    TDISTRT: 'T.DIST.RT',\r\n    TDIST2T: 'T.DIST.2T',\r\n    FINVRT: 'F.INV.RT',\r\n    FDISTRT: 'F.DIST.RT',\r\n    CHIDISTRT: 'CHISQ.DIST.RT',\r\n    CHIINVRT: 'CHISQ.INV.RT',\r\n    LOGNORMINV: 'LOGNORM.INV',\r\n    POISSONDIST: 'POISSON.DIST',\r\n};\r\n","/**\r\n * @license\r\n bessel.js (C) 2013-present SheetJS -- http://sheetjs.com\r\n\r\n Apache License\r\n Version 2.0, January 2004\r\n http://www.apache.org/licenses/\r\n\r\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n 1. Definitions.\r\n\r\n \"License\" shall mean the terms and conditions for use, reproduction,\r\n and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n \"Licensor\" shall mean the copyright owner or entity authorized by\r\n the copyright owner that is granting the License.\r\n\r\n \"Legal Entity\" shall mean the union of the acting entity and all\r\n other entities that control, are controlled by, or are under common\r\n control with that entity. For the purposes of this definition,\r\n \"control\" means (i) the power, direct or indirect, to cause the\r\n direction or management of such entity, whether by contract or\r\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n exercising permissions granted by this License.\r\n\r\n \"Source\" form shall mean the preferred form for making modifications,\r\n including but not limited to software source code, documentation\r\n source, and configuration files.\r\n\r\n \"Object\" form shall mean any form resulting from mechanical\r\n transformation or translation of a Source form, including but\r\n not limited to compiled object code, generated documentation,\r\n and conversions to other media types.\r\n\r\n \"Work\" shall mean the work of authorship, whether in Source or\r\n Object form, made available under the License, as indicated by a\r\n copyright notice that is included in or attached to the work\r\n (an example is provided in the Appendix below).\r\n\r\n \"Derivative Works\" shall mean any work, whether in Source or Object\r\n form, that is based on (or derived from) the Work and for which the\r\n editorial revisions, annotations, elaborations, or other modifications\r\n represent, as a whole, an original work of authorship. For the purposes\r\n of this License, Derivative Works shall not include works that remain\r\n separable from, or merely link (or bind by name) to the interfaces of,\r\n the Work and Derivative Works thereof.\r\n\r\n \"Contribution\" shall mean any work of authorship, including\r\n the original version of the Work and any modifications or additions\r\n to that Work or Derivative Works thereof, that is intentionally\r\n submitted to Licensor for inclusion in the Work by the copyright owner\r\n or by an individual or Legal Entity authorized to submit on behalf of\r\n the copyright owner. For the purposes of this definition, \"submitted\"\r\n means any form of electronic, verbal, or written communication sent\r\n to the Licensor or its representatives, including but not limited to\r\n communication on electronic mailing lists, source code control systems,\r\n and issue tracking systems that are managed by, or on behalf of, the\r\n Licensor for the purpose of discussing and improving the Work, but\r\n excluding communication that is conspicuously marked or otherwise\r\n designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n on behalf of whom a Contribution has been received by Licensor and\r\n subsequently incorporated within the Work.\r\n\r\n 2. Grant of Copyright License. Subject to the terms and conditions of\r\n this License, each Contributor hereby grants to You a perpetual,\r\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n copyright license to reproduce, prepare Derivative Works of,\r\n publicly display, publicly perform, sublicense, and distribute the\r\n Work and such Derivative Works in Source or Object form.\r\n\r\n 3. Grant of Patent License. Subject to the terms and conditions of\r\n this License, each Contributor hereby grants to You a perpetual,\r\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n (except as stated in this section) patent license to make, have made,\r\n use, offer to sell, sell, import, and otherwise transfer the Work,\r\n where such license applies only to those patent claims licensable\r\n by such Contributor that are necessarily infringed by their\r\n Contribution(s) alone or by combination of their Contribution(s)\r\n with the Work to which such Contribution(s) was submitted. If You\r\n institute patent litigation against any entity (including a\r\n cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n or a Contribution incorporated within the Work constitutes direct\r\n or contributory patent infringement, then any patent licenses\r\n granted to You under this License for that Work shall terminate\r\n as of the date such litigation is filed.\r\n\r\n 4. Redistribution. You may reproduce and distribute copies of the\r\n Work or Derivative Works thereof in any medium, with or without\r\n modifications, and in Source or Object form, provided that You\r\n meet the following conditions:\r\n\r\n (a) You must give any other recipients of the Work or\r\n Derivative Works a copy of this License; and\r\n\r\n (b) You must cause any modified files to carry prominent notices\r\n stating that You changed the files; and\r\n\r\n (c) You must retain, in the Source form of any Derivative Works\r\n that You distribute, all copyright, patent, trademark, and\r\n attribution notices from the Source form of the Work,\r\n excluding those notices that do not pertain to any part of\r\n the Derivative Works; and\r\n\r\n (d) If the Work includes a \"NOTICE\" text file as part of its\r\n distribution, then any Derivative Works that You distribute must\r\n include a readable copy of the attribution notices contained\r\n within such NOTICE file, excluding those notices that do not\r\n pertain to any part of the Derivative Works, in at least one\r\n of the following places: within a NOTICE text file distributed\r\n as part of the Derivative Works; within the Source form or\r\n documentation, if provided along with the Derivative Works; or,\r\n within a display generated by the Derivative Works, if and\r\n wherever such third-party notices normally appear. The contents\r\n of the NOTICE file are for informational purposes only and\r\n do not modify the License. You may add Your own attribution\r\n notices within Derivative Works that You distribute, alongside\r\n or as an addendum to the NOTICE text from the Work, provided\r\n that such additional attribution notices cannot be construed\r\n as modifying the License.\r\n\r\n You may add Your own copyright statement to Your modifications and\r\n may provide additional or different license terms and conditions\r\n for use, reproduction, or distribution of Your modifications, or\r\n for any such Derivative Works as a whole, provided Your use,\r\n reproduction, and distribution of the Work otherwise complies with\r\n the conditions stated in this License.\r\n\r\n 5. Submission of Contributions. Unless You explicitly state otherwise,\r\n any Contribution intentionally submitted for inclusion in the Work\r\n by You to the Licensor shall be under the terms and conditions of\r\n this License, without any additional terms or conditions.\r\n Notwithstanding the above, nothing herein shall supersede or modify\r\n the terms of any separate license agreement you may have executed\r\n with Licensor regarding such Contributions.\r\n\r\n 6. Trademarks. This License does not grant permission to use the trade\r\n names, trademarks, service marks, or product names of the Licensor,\r\n except as required for reasonable and customary use in describing the\r\n origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n 7. Disclaimer of Warranty. Unless required by applicable law or\r\n agreed to in writing, Licensor provides the Work (and each\r\n Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n implied, including, without limitation, any warranties or conditions\r\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n PARTICULAR PURPOSE. You are solely responsible for determining the\r\n appropriateness of using or redistributing the Work and assume any\r\n risks associated with Your exercise of permissions under this License.\r\n\r\n 8. Limitation of Liability. In no event and under no legal theory,\r\n whether in tort (including negligence), contract, or otherwise,\r\n unless required by applicable law (such as deliberate and grossly\r\n negligent acts) or agreed to in writing, shall any Contributor be\r\n liable to You for damages, including any direct, indirect, special,\r\n incidental, or consequential damages of any character arising as a\r\n result of this License or out of the use or inability to use the\r\n Work (including but not limited to damages for loss of goodwill,\r\n work stoppage, computer failure or malfunction, or any and all\r\n other commercial damages or losses), even if such Contributor\r\n has been advised of the possibility of such damages.\r\n\r\n 9. Accepting Warranty or Additional Liability. While redistributing\r\n the Work or Derivative Works thereof, You may choose to offer,\r\n and charge a fee for, acceptance of support, warranty, indemnity,\r\n or other liability obligations and/or rights consistent with this\r\n License. However, in accepting such obligations, You may act only\r\n on Your own behalf and on Your sole responsibility, not on behalf\r\n of any other Contributor, and only if You agree to indemnify,\r\n defend, and hold each Contributor harmless for any liability\r\n incurred by, or claims asserted against, such Contributor by reason\r\n of your accepting any such warranty or additional liability.\r\n\r\n END OF TERMS AND CONDITIONS\r\n\r\n APPENDIX: How to apply the Apache License to your work.\r\n\r\n To apply the Apache License to your work, attach the following\r\n boilerplate notice, with the fields enclosed by brackets \"{}\"\r\n replaced with your own identifying information. (Don't include\r\n the brackets!)  The text should be enclosed in the appropriate\r\n comment syntax for the file format. We also recommend that a\r\n file or class name and description of purpose be included on the\r\n same \"printed page\" as the copyright notice for easier\r\n identification within third-party archives.\r\n\r\n Copyright (C) 2013-present   SheetJS LLC\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n\r\n */\r\nvar M = Math;\r\n// @ts-ignore\r\nfunction _horner(arr, v) {\r\n    for (var i = 0, z = 0; i < arr.length; ++i) {\r\n        z = v * z + arr[i];\r\n    }\r\n    return z;\r\n}\r\n// @ts-ignore\r\nfunction _bessel_iter(x, n, f0, f1, sign) {\r\n    if (n === 0) {\r\n        return f0;\r\n    }\r\n    if (n === 1) {\r\n        return f1;\r\n    }\r\n    var tdx = 2 / x, f2 = f1;\r\n    for (var o = 1; o < n; ++o) {\r\n        f2 = f1 * o * tdx + sign * f0;\r\n        f0 = f1;\r\n        f1 = f2;\r\n    }\r\n    return f2;\r\n}\r\n// @ts-ignore\r\nfunction _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {\r\n    // @ts-ignore\r\n    return function bessel(x, n) {\r\n        if (nonzero) {\r\n            if (x === 0) {\r\n                return (nonzero == 1 ? -Infinity : Infinity);\r\n            }\r\n            else if (x < 0) {\r\n                return NaN;\r\n            }\r\n        }\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (n < 0) {\r\n            return NaN;\r\n        }\r\n        n |= 0;\r\n        var b0 = bessel0(x), b1 = bessel1(x);\r\n        return _bessel_iter(x, n, b0, b1, sign);\r\n    };\r\n}\r\nexport var besselj = (function () {\r\n    var W = 0.636619772; // 2 / Math.PI\r\n    var b0_a1a = [57568490574.0, -13362590354.0, 651619640.7, -11214424.18, 77392.33017, -184.9052456].reverse();\r\n    var b0_a2a = [57568490411.0, 1029532985.0, 9494680.718, 59272.64853, 267.8532712, 1.0].reverse();\r\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\r\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x;\r\n        if (x < 8) {\r\n            a1 = _horner(b0_a1a, y);\r\n            a2 = _horner(b0_a2a, y);\r\n            a = a1 / a2;\r\n        }\r\n        else {\r\n            var xx = x - 0.785398164;\r\n            y = 64 / y;\r\n            a1 = _horner(b0_a1b, y);\r\n            a2 = _horner(b0_a2b, y);\r\n            a = M.sqrt(W / x) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    var b1_a1a = [72362614232.0, -7895059235.0, 242396853.1, -2972611.439, 15704.48260, -30.16036606].reverse();\r\n    var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();\r\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\r\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = M.abs(x) - 2.356194491;\r\n        if (Math.abs(x) < 8) {\r\n            a1 = x * _horner(b1_a1a, y);\r\n            a2 = _horner(b1_a2a, y);\r\n            a = a1 / a2;\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b1_a1b, y);\r\n            a2 = _horner(b1_a2b, y);\r\n            a = M.sqrt(W / M.abs(x)) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / M.abs(x));\r\n            if (x < 0) {\r\n                a = -a;\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n    // @ts-ignore\r\n    return function besselj(x, n) {\r\n        n = Math.round(n);\r\n        if (!isFinite(x)) {\r\n            return isNaN(x) ? x : 0;\r\n        }\r\n        if (n < 0) {\r\n            return ((n % 2) ? -1 : 1) * besselj(x, -n);\r\n        }\r\n        if (x < 0) {\r\n            return ((n % 2) ? -1 : 1) * besselj(-x, n);\r\n        }\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (x === 0) {\r\n            return 0;\r\n        }\r\n        var ret = 0.0;\r\n        if (x > n) {\r\n            ret = _bessel_iter(x, n, bessel0(x), bessel1(x), -1);\r\n        }\r\n        else {\r\n            var m = 2 * M.floor((n + M.floor(M.sqrt(40 * n))) / 2);\r\n            var jsum = false;\r\n            var bjp = 0.0, sum = 0.0;\r\n            var bj = 1.0, bjm = 0.0;\r\n            var tox = 2 / x;\r\n            for (var j = m; j > 0; j--) {\r\n                bjm = j * tox * bj - bjp;\r\n                bjp = bj;\r\n                bj = bjm;\r\n                if (M.abs(bj) > 1E10) {\r\n                    bj *= 1E-10;\r\n                    bjp *= 1E-10;\r\n                    ret *= 1E-10;\r\n                    sum *= 1E-10;\r\n                }\r\n                if (jsum) {\r\n                    sum += bj;\r\n                }\r\n                jsum = !jsum;\r\n                if (j == n) {\r\n                    ret = bjp;\r\n                }\r\n            }\r\n            sum = 2.0 * sum - bj;\r\n            ret /= sum;\r\n        }\r\n        return ret;\r\n    };\r\n})();\r\nexport var bessely = (function () {\r\n    var W = 0.636619772;\r\n    var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();\r\n    var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();\r\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\r\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 0.785398164;\r\n        if (x < 8) {\r\n            a1 = _horner(b0_a1a, y);\r\n            a2 = _horner(b0_a2a, y);\r\n            a = a1 / a2 + W * besselj(x, 0) * M.log(x);\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b0_a1b, y);\r\n            a2 = _horner(b0_a2b, y);\r\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();\r\n    var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();\r\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\r\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 2.356194491;\r\n        if (x < 8) {\r\n            a1 = x * _horner(b1_a1a, y);\r\n            a2 = _horner(b1_a2a, y);\r\n            a = a1 / a2 + W * (besselj(x, 1) * M.log(x) - 1 / x);\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b1_a1b, y);\r\n            a2 = _horner(b1_a2b, y);\r\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);\r\n})();\r\nexport var besseli = (function () {\r\n    var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();\r\n    var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        if (x <= 3.75) {\r\n            return _horner(b0_a, x * x / (3.75 * 3.75));\r\n        }\r\n        return M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b0_b, 3.75 / M.abs(x));\r\n    }\r\n    var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();\r\n    var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        if (x < 3.75) {\r\n            return x * _horner(b1_a, x * x / (3.75 * 3.75));\r\n        }\r\n        return (x < 0 ? -1 : 1) * M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b1_b, 3.75 / M.abs(x));\r\n    }\r\n    // @ts-ignore\r\n    return function besseli(x, n) {\r\n        n = Math.round(n);\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (n < 0) {\r\n            return NaN;\r\n        }\r\n        if (M.abs(x) === 0) {\r\n            return 0;\r\n        }\r\n        if (x == Infinity) {\r\n            return Infinity;\r\n        }\r\n        var ret = 0.0, j, tox = 2 / M.abs(x), bip = 0.0, bi = 1.0, bim = 0.0;\r\n        var m = 2 * M.round((n + M.round(M.sqrt(40 * n))) / 2);\r\n        for (j = m; j > 0; j--) {\r\n            bim = j * tox * bi + bip;\r\n            bip = bi;\r\n            bi = bim;\r\n            if (M.abs(bi) > 1E10) {\r\n                bi *= 1E-10;\r\n                bip *= 1E-10;\r\n                ret *= 1E-10;\r\n            }\r\n            if (j == n) {\r\n                ret = bip;\r\n            }\r\n        }\r\n        ret *= besseli(x, 0) / bi;\r\n        return x < 0 && (n % 2) ? -ret : ret;\r\n    };\r\n})();\r\nexport var besselk = (function () {\r\n    var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();\r\n    var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        if (x <= 2) {\r\n            return -M.log(x / 2) * besseli(x, 0) + _horner(b0_a, x * x / 4);\r\n        }\r\n        return M.exp(-x) / M.sqrt(x) * _horner(b0_b, 2 / x);\r\n    }\r\n    var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();\r\n    var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        if (x <= 2) {\r\n            return M.log(x / 2) * besseli(x, 1) + (1 / x) * _horner(b1_a, x * x / 4);\r\n        }\r\n        return M.exp(-x) / M.sqrt(x) * _horner(b1_b, 2 / x);\r\n    }\r\n    return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);\r\n})();\r\n","/**\r\n * @license\r\n Copyright (c) 2013 jStat\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\nexport function erf(x) {\r\n    const cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\r\n        -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\r\n        4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\r\n        1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\r\n        6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\r\n        -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\r\n        -6.886027e-12, 8.94487e-13, 3.13092e-13,\r\n        -1.12708e-13, 3.81e-16, 7.106e-15,\r\n        -1.523e-15, -9.4e-17, 1.21e-16,\r\n        -2.8e-17];\r\n    let j = cof.length - 1;\r\n    let isneg = false;\r\n    let d = 0;\r\n    let dd = 0;\r\n    let t, ty, tmp, res;\r\n    if (x === 0) {\r\n        return 0;\r\n    }\r\n    if (x < 0) {\r\n        x = -x;\r\n        isneg = true;\r\n    }\r\n    t = 2 / (2 + x);\r\n    ty = 4 * t - 2;\r\n    for (; j > 0; j--) {\r\n        tmp = d;\r\n        d = ty * d - dd + cof[j];\r\n        dd = tmp;\r\n    }\r\n    res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\r\n    return isneg ? res - 1 : 1 - res;\r\n}\r\nexport function erfc(x) {\r\n    return 1 - erf(x);\r\n}\r\nfunction erfcinv(p) {\r\n    let j = 0;\r\n    let x, err, t, pp;\r\n    if (p >= 2) {\r\n        return -100;\r\n    }\r\n    if (p <= 0) {\r\n        return 100;\r\n    }\r\n    pp = (p < 1) ? p : 2 - p;\r\n    t = Math.sqrt(-2 * Math.log(pp / 2));\r\n    x = -0.70711 * ((2.30753 + t * 0.27061) /\r\n        (1 + t * (0.99229 + t * 0.04481)) - t);\r\n    for (; j < 2; j++) {\r\n        err = erfc(x) - pp;\r\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\r\n    }\r\n    return (p < 1) ? x : -x;\r\n}\r\nexport const exponential = {\r\n    pdf: (x, rate) => {\r\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\r\n    },\r\n    cdf: (x, rate) => {\r\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\r\n    },\r\n};\r\nexport function gammafn(x) {\r\n    const p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\r\n        629.3311553128184, 866.9662027904133, -31451.272968848367,\r\n        -36144.413418691176, 66456.14382024054\r\n    ];\r\n    const q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\r\n        -3107.771671572311, 22538.118420980151, 4755.8462775278811,\r\n        -134659.9598649693, -115132.2596755535];\r\n    let fact = false;\r\n    let n = 0;\r\n    let xden = 0;\r\n    let xnum = 0;\r\n    let y = x;\r\n    let i, z, yi, res;\r\n    if (x > 171.6243769536076) {\r\n        return Infinity;\r\n    }\r\n    if (y <= 0) {\r\n        res = y % 1;\r\n        if (res) {\r\n            fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\r\n            y = 1 - y;\r\n        }\r\n        else {\r\n            return Infinity;\r\n        }\r\n    }\r\n    yi = y;\r\n    if (y < 1) {\r\n        z = y++;\r\n    }\r\n    else {\r\n        z = (y -= n = (y | 0) - 1) - 1;\r\n    }\r\n    for (i = 0; i < 8; ++i) {\r\n        xnum = (xnum + p[i]) * z;\r\n        xden = xden * z + q[i];\r\n    }\r\n    res = xnum / xden + 1;\r\n    if (yi < y) {\r\n        res /= yi;\r\n    }\r\n    else if (yi > y) {\r\n        for (i = 0; i < n; ++i) {\r\n            res *= y;\r\n            y++;\r\n        }\r\n    }\r\n    if (fact) {\r\n        res = fact / res;\r\n    }\r\n    return res;\r\n}\r\nexport const gamma = {\r\n    pdf: function pdf(x, shape, scale) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return (x === 0 && shape === 1) ? 1 / scale :\r\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\r\n                gammaln(shape) - shape * Math.log(scale));\r\n    },\r\n    cdf: function cdf(x, shape, scale) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return lowRegGamma(shape, x / scale);\r\n    },\r\n    inv: function (p, shape, scale) {\r\n        return gammapinv(p, shape) * scale;\r\n    }\r\n};\r\nexport function gammaln(x) {\r\n    let j = 0;\r\n    const cof = [\r\n        76.18009172947146, -86.50532032941677, 24.01409824083091,\r\n        -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\r\n    ];\r\n    let ser = 1.000000000190015;\r\n    let xx, y, tmp;\r\n    tmp = (y = xx = x) + 5.5;\r\n    tmp -= (xx + 0.5) * Math.log(tmp);\r\n    for (; j < 6; j++) {\r\n        ser += cof[j] / ++y;\r\n    }\r\n    return Math.log(2.5066282746310005 * ser / xx) - tmp;\r\n}\r\nfunction lowRegGamma(a, x) {\r\n    const aln = gammaln(a);\r\n    let ap = a;\r\n    let sum = 1 / a;\r\n    let del = sum;\r\n    let b = x + 1 - a;\r\n    let c = 1 / 1.0e-30;\r\n    let d = 1 / b;\r\n    let h = d;\r\n    let i = 1;\r\n    // calculate maximum number of itterations required for a\r\n    const ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\r\n    let an;\r\n    if (x < 0 || a <= 0) {\r\n        return NaN;\r\n    }\r\n    else if (x < a + 1) {\r\n        for (; i <= ITMAX; i++) {\r\n            sum += del *= x / ++ap;\r\n        }\r\n        return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\r\n    }\r\n    for (; i <= ITMAX; i++) {\r\n        an = -i * (i - a);\r\n        b += 2;\r\n        d = an * d + b;\r\n        c = b + an / c;\r\n        d = 1 / d;\r\n        h *= d * c;\r\n    }\r\n    return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\r\n}\r\nfunction gammapinv(p, a) {\r\n    let j = 0;\r\n    const a1 = a - 1;\r\n    const EPS = 1e-8;\r\n    const gln = gammaln(a);\r\n    let x, err, t, u, pp;\r\n    let lna1;\r\n    let afac;\r\n    if (p >= 1) {\r\n        return Math.max(100, a + 100 * Math.sqrt(a));\r\n    }\r\n    if (p <= 0) {\r\n        return 0;\r\n    }\r\n    if (a > 1) {\r\n        lna1 = Math.log(a1);\r\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5) {\r\n            x = -x;\r\n        }\r\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\r\n    }\r\n    else {\r\n        t = 1 - a * (0.253 + a * 0.12);\r\n        if (p < t) {\r\n            x = Math.pow(p / t, 1 / a);\r\n        }\r\n        else {\r\n            x = 1 - Math.log(1 - (p - t) / (1 - t));\r\n        }\r\n    }\r\n    for (; j < 12; j++) {\r\n        if (x <= 0) {\r\n            return 0;\r\n        }\r\n        err = lowRegGamma(a, x) - p;\r\n        if (a > 1) {\r\n            t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\r\n        }\r\n        else {\r\n            t = Math.exp(-x + a1 * Math.log(x) - gln);\r\n        }\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\r\n        if (x <= 0) {\r\n            x = 0.5 * (x + t);\r\n        }\r\n        if (Math.abs(t) < EPS * x) {\r\n            break;\r\n        }\r\n    }\r\n    return x;\r\n}\r\nexport const normal = {\r\n    pdf: function pdf(x, mean, std) {\r\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) -\r\n            Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\r\n    },\r\n    cdf: function cdf(x, mean, std) {\r\n        return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * std * std)));\r\n    },\r\n    inv: function (p, mean, std) {\r\n        return -1.41421356237309505 * std * erfcinv(2 * p) + mean;\r\n    }\r\n};\r\nexport const beta = {\r\n    pdf: function pdf(x, alpha, beta) {\r\n        // PDF is zero outside the support\r\n        if (x > 1 || x < 0) {\r\n            return 0;\r\n        }\r\n        // PDF is one for the uniform case\r\n        if (alpha == 1 && beta == 1) {\r\n            return 1;\r\n        }\r\n        if (alpha < 512 && beta < 512) {\r\n            return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\r\n                betafn(alpha, beta);\r\n        }\r\n        else {\r\n            return Math.exp((alpha - 1) * Math.log(x) +\r\n                (beta - 1) * Math.log(1 - x) -\r\n                betaln(alpha, beta));\r\n        }\r\n    },\r\n    cdf: function cdf(x, alpha, beta) {\r\n        return (x > 1 || x < 0) ? +(x > 1) : ibeta(x, alpha, beta);\r\n    },\r\n    inv: function inv(x, alpha, beta) {\r\n        return ibetainv(x, alpha, beta);\r\n    },\r\n};\r\nfunction betafn(x, y) {\r\n    // ensure arguments are positive\r\n    if (x <= 0 || y <= 0) {\r\n        return undefined;\r\n    }\r\n    // make sure x + y doesn't exceed the upper limit of usable values\r\n    return (x + y > 170)\r\n        ? Math.exp(betaln(x, y))\r\n        : gammafn(x) * gammafn(y) / gammafn(x + y);\r\n}\r\nfunction betaln(x, y) {\r\n    return gammaln(x) + gammaln(y) - gammaln(x + y);\r\n}\r\nfunction ibetainv(p, a, b) {\r\n    var EPS = 1e-8;\r\n    var a1 = a - 1;\r\n    var b1 = b - 1;\r\n    var j = 0;\r\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\r\n    if (p <= 0) {\r\n        return 0;\r\n    }\r\n    if (p >= 1) {\r\n        return 1;\r\n    }\r\n    if (a >= 1 && b >= 1) {\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5) {\r\n            x = -x;\r\n        }\r\n        al = (x * x - 3) / 6;\r\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\r\n        w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\r\n            (al + 5 / 6 - 2 / (3 * h));\r\n        x = a / (a + b * Math.exp(2 * w));\r\n    }\r\n    else {\r\n        lna = Math.log(a / (a + b));\r\n        lnb = Math.log(b / (a + b));\r\n        t = Math.exp(a * lna) / a;\r\n        u = Math.exp(b * lnb) / b;\r\n        w = t + u;\r\n        if (p < t / w) {\r\n            x = Math.pow(a * w * p, 1 / a);\r\n        }\r\n        else {\r\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\r\n        }\r\n    }\r\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\r\n    for (; j < 10; j++) {\r\n        if (x === 0 || x === 1) {\r\n            return x;\r\n        }\r\n        // @ts-ignore\r\n        err = ibeta(x, a, b) - p;\r\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\r\n        if (x <= 0) {\r\n            x = 0.5 * (x + t);\r\n        }\r\n        if (x >= 1) {\r\n            x = 0.5 * (x + t + 1);\r\n        }\r\n        if (Math.abs(t) < EPS * x && j > 0) {\r\n            break;\r\n        }\r\n    }\r\n    return x;\r\n}\r\nfunction ibeta(x, a, b) {\r\n    // Factors in front of the continued fraction.\r\n    var bt = (x === 0 || x === 1) ? 0 :\r\n        Math.exp(gammaln(a + b) - gammaln(a) -\r\n            gammaln(b) + a * Math.log(x) + b *\r\n            Math.log(1 - x));\r\n    if (x < 0 || x > 1) {\r\n        return false;\r\n    }\r\n    if (x < (a + 1) / (a + b + 2)) \r\n    // Use continued fraction directly.\r\n    {\r\n        return bt * betacf(x, a, b) / a;\r\n    }\r\n    // else use continued fraction after making the symmetry transformation.\r\n    return 1 - bt * betacf(1 - x, b, a) / b;\r\n}\r\nfunction betacf(x, a, b) {\r\n    var fpmin = 1e-30;\r\n    var m = 1;\r\n    var qab = a + b;\r\n    var qap = a + 1;\r\n    var qam = a - 1;\r\n    var c = 1;\r\n    var d = 1 - qab * x / qap;\r\n    var m2, aa, del, h;\r\n    // These q's will be used in factors that occur in the coefficients\r\n    if (Math.abs(d) < fpmin) {\r\n        d = fpmin;\r\n    }\r\n    d = 1 / d;\r\n    h = d;\r\n    for (; m <= 100; m++) {\r\n        m2 = 2 * m;\r\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\r\n        // One step (the even one) of the recurrence\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin) {\r\n            d = fpmin;\r\n        }\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin) {\r\n            c = fpmin;\r\n        }\r\n        d = 1 / d;\r\n        h *= d * c;\r\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\r\n        // Next step of the recurrence (the odd one)\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin) {\r\n            d = fpmin;\r\n        }\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin) {\r\n            c = fpmin;\r\n        }\r\n        d = 1 / d;\r\n        del = d * c;\r\n        h *= del;\r\n        if (Math.abs(del - 1.0) < 3e-7) {\r\n            break;\r\n        }\r\n    }\r\n    return h;\r\n}\r\nexport const binomial = {\r\n    pdf: function (k, n, p) {\r\n        return (p === 0 || p === 1) ?\r\n            ((n * p) === k ? 1 : 0) :\r\n            combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\r\n    },\r\n    cdf: function (x, n, p) {\r\n        var betacdf;\r\n        var eps = 1e-10;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        if (x >= n) {\r\n            return 1;\r\n        }\r\n        if (p < 0 || p > 1 || n <= 0) {\r\n            return NaN;\r\n        }\r\n        x = Math.floor(x);\r\n        var z = p;\r\n        var a = x + 1;\r\n        var b = n - x;\r\n        var s = a + b;\r\n        var bt = Math.exp(gammaln(s) - gammaln(b) -\r\n            gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\r\n        if (z < (a + 1) / (s + 2)) {\r\n            betacdf = bt * betinc(z, a, b, eps);\r\n        }\r\n        else {\r\n            betacdf = 1 - bt * betinc(1 - z, b, a, eps);\r\n        }\r\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\r\n    }\r\n};\r\nfunction betinc(x, a, b, eps) {\r\n    var a0 = 0;\r\n    var b0 = 1;\r\n    var a1 = 1;\r\n    var b1 = 1;\r\n    var m9 = 0;\r\n    var a2 = 0;\r\n    var c9;\r\n    while (Math.abs((a1 - a2) / a1) > eps) {\r\n        a2 = a1;\r\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\r\n        a0 = a1 + c9 * a0;\r\n        b0 = b1 + c9 * b0;\r\n        m9 = m9 + 1;\r\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\r\n        a1 = a0 + c9 * a1;\r\n        b1 = b0 + c9 * b1;\r\n        a0 = a0 / b1;\r\n        b0 = b0 / b1;\r\n        a1 = a1 / b1;\r\n        b1 = 1;\r\n    }\r\n    return a1 / a;\r\n}\r\nfunction combination(n, m) {\r\n    // make sure n or m don't exceed the upper limit of usable values\r\n    return (n > 170 || m > 170)\r\n        ? Math.exp(combinationln(n, m))\r\n        : (factorial(n) / factorial(m)) / factorial(n - m);\r\n}\r\nfunction combinationln(n, m) {\r\n    return factorialln(n) - factorialln(m) - factorialln(n - m);\r\n}\r\n// natural log factorial of n\r\nexport function factorialln(n) {\r\n    return n < 0 ? NaN : gammaln(n + 1);\r\n}\r\n// factorial of n\r\nexport function factorial(n) {\r\n    return n < 0 ? NaN : gammafn(n + 1);\r\n}\r\nexport const chisquare = {\r\n    pdf: function pdf(x, dof) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return (x === 0 && dof === 2) ? 0.5 :\r\n            Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\r\n                Math.log(2) - gammaln(dof / 2));\r\n    },\r\n    cdf: function cdf(x, dof) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return lowRegGamma(dof / 2, x / 2);\r\n    },\r\n    inv: function (p, dof) {\r\n        return 2 * gammapinv(p, 0.5 * dof);\r\n    }\r\n};\r\nexport const centralF = {\r\n    // This implementation of the pdf function avoids float overflow\r\n    // See the way that R calculates this value:\r\n    // https://svn.r-project.org/R/trunk/src/nmath/df.c\r\n    pdf: function pdf(x, df1, df2) {\r\n        var p, q, f;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        if (df1 <= 2) {\r\n            if (x === 0 && df1 < 2) {\r\n                return Infinity;\r\n            }\r\n            if (x === 0 && df1 === 2) {\r\n                return 1;\r\n            }\r\n            return (1 / betafn(df1 / 2, df2 / 2)) *\r\n                Math.pow(df1 / df2, df1 / 2) *\r\n                Math.pow(x, (df1 / 2) - 1) *\r\n                Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\r\n        }\r\n        p = (df1 * x) / (df2 + x * df1);\r\n        q = df2 / (df2 + x * df1);\r\n        f = df1 * q / 2.0;\r\n        return f * binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\r\n    },\r\n    cdf: function cdf(x, df1, df2) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\r\n    },\r\n    inv: function inv(x, df1, df2) {\r\n        return df2 / (df1 * (1 / ibetainv(x, df1 / 2, df2 / 2) - 1));\r\n    },\r\n};\r\nexport const weibull = {\r\n    pdf: function pdf(x, scale, shape) {\r\n        if (x < 0 || scale < 0 || shape < 0) {\r\n            return 0;\r\n        }\r\n        return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\r\n            Math.exp(-(Math.pow((x / scale), shape)));\r\n    },\r\n    cdf: function cdf(x, scale, shape) {\r\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\r\n    },\r\n};\r\nexport const poisson = {\r\n    pdf: function pdf(k, l) {\r\n        if (l < 0 || (k % 1) !== 0 || k < 0) {\r\n            return 0;\r\n        }\r\n        return Math.pow(l, k) * Math.exp(-l) / factorial(k);\r\n    },\r\n    cdf: function cdf(x, l) {\r\n        var k = 0;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        var sum = 0;\r\n        for (; k <= x; k++) {\r\n            sum += poisson.pdf(k, l);\r\n        }\r\n        return sum;\r\n    },\r\n};\r\nexport const hypgeom = {\r\n    pdf: function pdf(k, N, m, n) {\r\n        // Hypergeometric PDF.\r\n        // A simplification of the CDF algorithm below.\r\n        // k = number of successes drawn\r\n        // N = population size\r\n        // m = number of successes in population\r\n        // n = number of items drawn from population\r\n        // if(k !== k | 0) {\r\n        //   return false;\r\n        // } else\r\n        if (k < 0 || k < m - (N - n)) {\r\n            // It's impossible to have this few successes drawn.\r\n            return 0;\r\n        }\r\n        else if (k > n || k > m) {\r\n            // It's impossible to have this many successes drawn.\r\n            return 0;\r\n        }\r\n        else if (m * 2 > N) {\r\n            // More than half the population is successes.\r\n            if (n * 2 > N) {\r\n                // More than half the population is sampled.\r\n                return hypgeom.pdf(N - m - n + k, N, N - m, N - n);\r\n            }\r\n            else {\r\n                // Half or less of the population is sampled.\r\n                return hypgeom.pdf(n - k, N, N - m, n);\r\n            }\r\n        }\r\n        else if (n * 2 > N) {\r\n            // Half or less is successes.\r\n            return hypgeom.pdf(m - k, N, m, N - n);\r\n        }\r\n        else if (m < n) {\r\n            // We want to have the number of things sampled to be less than the\r\n            // successes available. So swap the definitions of successful and sampled.\r\n            return hypgeom.pdf(k, N, n, m);\r\n        }\r\n        else {\r\n            // If we get here, half or less of the population was sampled, half or\r\n            // less of it was successes, and we had fewer sampled things than\r\n            // successes. Now we can do this complicated iterative algorithm in an\r\n            // efficient way.\r\n            // The basic premise of the algorithm is that we partially normalize our\r\n            // intermediate product to keep it in a numerically good region, and then\r\n            // finish the normalization at the end.\r\n            // This variable holds the scaled probability of the current number of\r\n            // successes.\r\n            var scaledPDF = 1;\r\n            // This keeps track of how much we have normalized.\r\n            var samplesDone = 0;\r\n            for (var i = 0; i < k; i++) {\r\n                // For every possible number of successes up to that observed...\r\n                while (scaledPDF > 1 && samplesDone < n) {\r\n                    // Intermediate result is growing too big. Apply some of the\r\n                    // normalization to shrink everything.\r\n                    scaledPDF *= 1 - (m / (N - samplesDone));\r\n                    // Say we've normalized by this sample already.\r\n                    samplesDone++;\r\n                }\r\n                // Work out the partially-normalized hypergeometric PDF for the next\r\n                // number of successes\r\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\r\n            }\r\n            for (; samplesDone < n; samplesDone++) {\r\n                // Apply all the rest of the normalization\r\n                scaledPDF *= 1 - (m / (N - samplesDone));\r\n            }\r\n            // Bound answer sanely before returning.\r\n            return Math.min(1, Math.max(0, scaledPDF));\r\n        }\r\n    },\r\n    cdf: function cdf(x, N, m, n) {\r\n        // Hypergeometric CDF.\r\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\r\n        // and comes from his hypergeometric test calculator at\r\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\r\n        // x = number of successes drawn\r\n        // N = population size\r\n        // m = number of successes in population\r\n        // n = number of items drawn from population\r\n        if (x < 0 || x < m - (N - n)) {\r\n            // It's impossible to have this few successes drawn or fewer.\r\n            return 0;\r\n        }\r\n        else if (x >= n || x >= m) {\r\n            // We will always have this many successes or fewer.\r\n            return 1;\r\n        }\r\n        else if (m * 2 > N) {\r\n            // More than half the population is successes.\r\n            if (n * 2 > N) {\r\n                // More than half the population is sampled.\r\n                return cdf(N - m - n + x, N, N - m, N - n);\r\n            }\r\n            else {\r\n                // Half or less of the population is sampled.\r\n                return 1 - hypgeom.cdf(n - x - 1, N, N - m, n);\r\n            }\r\n        }\r\n        else if (n * 2 > N) {\r\n            // Half or less is successes.\r\n            return 1 - hypgeom.cdf(m - x - 1, N, m, N - n);\r\n        }\r\n        else if (m < n) {\r\n            // We want to have the number of things sampled to be less than the\r\n            // successes available. So swap the definitions of successful and sampled.\r\n            return hypgeom.cdf(x, N, n, m);\r\n        }\r\n        else {\r\n            // If we get here, half or less of the population was sampled, half or\r\n            // less of it was successes, and we had fewer sampled things than\r\n            // successes. Now we can do this complicated iterative algorithm in an\r\n            // efficient way.\r\n            // The basic premise of the algorithm is that we partially normalize our\r\n            // intermediate sum to keep it in a numerically good region, and then\r\n            // finish the normalization at the end.\r\n            // Holds the intermediate, scaled total CDF.\r\n            var scaledCDF = 1;\r\n            // This variable holds the scaled probability of the current number of\r\n            // successes.\r\n            var scaledPDF = 1;\r\n            // This keeps track of how much we have normalized.\r\n            var samplesDone = 0;\r\n            for (var i = 0; i < x; i++) {\r\n                // For every possible number of successes up to that observed...\r\n                while (scaledCDF > 1 && samplesDone < n) {\r\n                    // Intermediate result is growing too big. Apply some of the\r\n                    // normalization to shrink everything.\r\n                    var factor = 1 - (m / (N - samplesDone));\r\n                    scaledPDF *= factor;\r\n                    scaledCDF *= factor;\r\n                    // Say we've normalized by this sample already.\r\n                    samplesDone++;\r\n                }\r\n                // Work out the partially-normalized hypergeometric PDF for the next\r\n                // number of successes\r\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\r\n                // Add to the CDF answer.\r\n                scaledCDF += scaledPDF;\r\n            }\r\n            for (; samplesDone < n; samplesDone++) {\r\n                // Apply all the rest of the normalization\r\n                scaledCDF *= 1 - (m / (N - samplesDone));\r\n            }\r\n            // Bound answer sanely before returning.\r\n            return Math.min(1, Math.max(0, scaledCDF));\r\n        }\r\n    }\r\n};\r\nexport const studentt = {\r\n    pdf: function pdf(x, dof) {\r\n        dof = dof > 1e100 ? 1e100 : dof;\r\n        return (1 / (Math.sqrt(dof) * betafn(0.5, dof / 2))) *\r\n            Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\r\n    },\r\n    cdf: function cdf(x, dof) {\r\n        var dof2 = dof / 2;\r\n        return ibeta((x + Math.sqrt(x * x + dof)) /\r\n            (2 * Math.sqrt(x * x + dof)), dof2, dof2);\r\n    },\r\n    inv: function (p, dof) {\r\n        var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\r\n        x = Math.sqrt(dof * (1 - x) / x);\r\n        return (p > 0.5) ? x : -x;\r\n    },\r\n};\r\nexport const lognormal = {\r\n    pdf: function pdf(x, mu, sigma) {\r\n        if (x <= 0) {\r\n            return 0;\r\n        }\r\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\r\n            Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\r\n            (2 * sigma * sigma));\r\n    },\r\n    cdf: function cdf(x, mu, sigma) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return 0.5 +\r\n            (0.5 * erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\r\n    },\r\n    inv: function (p, mu, sigma) {\r\n        return Math.exp(-1.41421356237309505 * sigma * erfcinv(2 * p) + mu);\r\n    },\r\n};\r\nexport const negbin = {\r\n    pdf: function pdf(k, r, p) {\r\n        if (k !== k >>> 0) {\r\n            return false;\r\n        }\r\n        if (k < 0) {\r\n            return 0;\r\n        }\r\n        return combination(k + r - 1, r - 1) *\r\n            Math.pow(1 - p, k) * Math.pow(p, r);\r\n    },\r\n    cdf: function cdf(x, r, p) {\r\n        var sum = 0, k = 0;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        for (; k <= x; k++) {\r\n            sum += negbin.pdf(k, r, p);\r\n        }\r\n        return sum;\r\n    }\r\n};\r\nfunction sum(arr) {\r\n    var sum = 0;\r\n    var i = arr.length;\r\n    while (--i >= 0) {\r\n        sum += arr[i];\r\n    }\r\n    return sum;\r\n}\r\nexport function mean(arr) {\r\n    return sum(arr) / arr.length;\r\n}\r\nexport function sumsqerr(arr) {\r\n    var meanv = mean(arr);\r\n    var sum = 0;\r\n    var i = arr.length;\r\n    var tmp;\r\n    while (--i >= 0) {\r\n        tmp = arr[i] - meanv;\r\n        sum += tmp * tmp;\r\n    }\r\n    return sum;\r\n}\r\nexport function variance(arr, flag) {\r\n    return sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\r\n}\r\nexport function stdev(arr, flag) {\r\n    return Math.sqrt(variance(arr, flag));\r\n}\r\n// 2 different parameter setups\r\n// (value, alpha, sd, n)\r\n// (value, alpha, array)\r\nexport function normalci() {\r\n    var args = [].slice.call(arguments), ans = new Array(2), change;\r\n    if (args.length === 4) {\r\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) *\r\n            args[2] / Math.sqrt(args[3]));\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) * stdev(args[2]) / Math.sqrt(args[2].length));\r\n    }\r\n    ans[0] = args[0] - change;\r\n    ans[1] = args[0] + change;\r\n    return ans;\r\n}\r\nexport function tci() {\r\n    var args = [].slice.call(arguments), ans = new Array(2), change;\r\n    if (args.length === 4) {\r\n        change = Math.abs(studentt.inv(args[1] / 2, args[3] - 1) *\r\n            args[2] / Math.sqrt(args[3]));\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        change = Math.abs(studentt.inv(args[1] / 2, args[2].length - 1) * stdev(args[2], true) / Math.sqrt(args[2].length));\r\n    }\r\n    ans[0] = args[0] - change;\r\n    ans[1] = args[0] + change;\r\n    return ans;\r\n}\r\nfunction product(arr) {\r\n    var prod = 1;\r\n    var i = arr.length;\r\n    while (--i >= 0) {\r\n        prod *= arr[i];\r\n    }\r\n    return prod;\r\n}\r\nexport function geomean(arr) {\r\n    return Math.pow(product(arr), 1 / arr.length);\r\n}\r\nexport function covariance(arr1, arr2) {\r\n    var u = mean(arr1);\r\n    var v = mean(arr2);\r\n    var arr1Len = arr1.length;\r\n    var sq_dev = new Array(arr1Len);\r\n    var i;\r\n    for (i = 0; i < arr1Len; i++) {\r\n        sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\r\n    }\r\n    return sum(sq_dev) / (arr1Len - 1);\r\n}\r\nexport function corrcoeff(arr1, arr2) {\r\n    return covariance(arr1, arr2) /\r\n        stdev(arr1, 1) /\r\n        stdev(arr2, 1);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class MathPlugin extends FunctionPlugin {\r\n    fact(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FACT'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            let ret = 1;\r\n            for (let i = 1; i <= arg; i++) {\r\n                ret *= i;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    factdouble(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FACTDOUBLE'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            let ret = 1;\r\n            for (let i = arg; i >= 1; i -= 2) {\r\n                ret *= i;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    combin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMBIN'), (n, m) => {\r\n            if (m > n) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            n = Math.trunc(n);\r\n            m = Math.trunc(m);\r\n            return combin(n, m);\r\n        });\r\n    }\r\n    combina(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMBINA'), (n, m) => {\r\n            n = Math.trunc(n);\r\n            m = Math.trunc(m);\r\n            if (n + m - 1 >= 1030) {\r\n                //Product #2 does not enforce this\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            if (n === 0 && m === 0) {\r\n                return 1;\r\n            }\r\n            return combin(n + m - 1, m);\r\n        });\r\n    }\r\n    gcd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GCD'), (...args) => {\r\n            const processedArgs = this.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\r\n            if (processedArgs instanceof CellError) {\r\n                return processedArgs;\r\n            }\r\n            let ret = 0;\r\n            for (const val of processedArgs) {\r\n                if (val < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret = binaryGCD(ret, Math.trunc(val));\r\n            }\r\n            if (ret > Number.MAX_SAFE_INTEGER) {\r\n                //inconsistency with product #1\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    lcm(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LCM'), (...args) => {\r\n            const processedArgs = this.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\r\n            if (processedArgs instanceof CellError) {\r\n                return processedArgs;\r\n            }\r\n            let ret = 1;\r\n            for (const val of processedArgs) {\r\n                if (val < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret = binaryLCM(ret, Math.trunc(val));\r\n            }\r\n            if (ret > Number.MAX_SAFE_INTEGER) {\r\n                //inconsistency with product #1\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    mround(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MROUND'), (nom, denom) => {\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if ((nom > 0 && denom < 0) || (nom < 0 && denom > 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.round(nom / denom) * denom;\r\n        });\r\n    }\r\n    multinomial(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MULTINOMIAL'), (...args) => {\r\n            let n = 0;\r\n            let ans = 1;\r\n            for (let arg of args) {\r\n                if (arg < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                arg = Math.trunc(arg);\r\n                for (let i = 1; i <= arg; i++) {\r\n                    ans *= (n + i) / i;\r\n                }\r\n                n += arg;\r\n            }\r\n            return Math.round(ans);\r\n        });\r\n    }\r\n    quotient(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('QUOTIENT'), (nom, denom) => {\r\n            if (denom === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.trunc(nom / denom);\r\n        });\r\n    }\r\n    seriessum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SERIESSUM'), (x, n, m, range) => {\r\n            const coefs = this.arithmeticHelper.manyToOnlyNumbersDropNulls(range.valuesFromTopLeftCorner());\r\n            if (coefs instanceof CellError) {\r\n                return coefs;\r\n            }\r\n            let ret = 0;\r\n            coefs.reverse();\r\n            for (const coef of coefs) {\r\n                ret *= Math.pow(x, m);\r\n                ret += coef;\r\n            }\r\n            return ret * Math.pow(x, n);\r\n        });\r\n    }\r\n    sign(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SIGN'), (arg) => {\r\n            if (arg > 0) {\r\n                return 1;\r\n            }\r\n            else if (arg < 0) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n    sumx2my2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMX2MY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX, 2) - Math.pow(valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    sumx2py2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMX2PY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX, 2) + Math.pow(valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    sumxmy2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMXMY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX - valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nMathPlugin.implementedFunctions = {\r\n    'FACT': {\r\n        method: 'fact',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 170 }\r\n        ]\r\n    },\r\n    'FACTDOUBLE': {\r\n        method: 'factdouble',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, maxValue: 288 }\r\n        ]\r\n    },\r\n    'COMBIN': {\r\n        method: 'combin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0, lessThan: 1030 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 }\r\n        ]\r\n    },\r\n    'COMBINA': {\r\n        method: 'combina',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 },\r\n            { argumentType: FunctionArgumentType.NUMBER, minValue: 0 }\r\n        ]\r\n    },\r\n    'GCD': {\r\n        method: 'gcd',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1\r\n    },\r\n    'LCM': {\r\n        method: 'lcm',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1\r\n    },\r\n    'MROUND': {\r\n        method: 'mround',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'MULTINOMIAL': {\r\n        method: 'multinomial',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'QUOTIENT': {\r\n        method: 'quotient',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'SERIESSUM': {\r\n        method: 'seriessum',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'SIGN': {\r\n        method: 'sign',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'SUMX2MY2': {\r\n        method: 'sumx2my2',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'SUMX2PY2': {\r\n        method: 'sumx2py2',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'SUMXMY2': {\r\n        method: 'sumxmy2',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n};\r\nfunction combin(n, m) {\r\n    if (2 * m > n) {\r\n        m = n - m;\r\n    }\r\n    let ret = 1;\r\n    for (let i = 1; i <= m; i++) {\r\n        ret *= (n - m + i) / i;\r\n    }\r\n    return Math.round(ret);\r\n}\r\nfunction binaryGCD(a, b) {\r\n    if (a < b) {\r\n        [a, b] = [b, a];\r\n    }\r\n    while (b > 0) {\r\n        [a, b] = [b, a % b];\r\n    }\r\n    return a;\r\n}\r\nfunction binaryLCM(a, b) {\r\n    if (a === 0 || b === 0) {\r\n        return 0;\r\n    }\r\n    return a * (b / binaryGCD(a, b));\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { coerceComplexToString } from '../ArithmeticHelper';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class ComplexPlugin extends FunctionPlugin {\r\n    complex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMPLEX'), (re, im, unit) => {\r\n            if (unit !== 'i' && unit !== 'j') {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ShouldBeIorJ);\r\n            }\r\n            return coerceComplexToString([re, im], unit);\r\n        });\r\n    }\r\n    imabs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMABS'), abs);\r\n    }\r\n    imaginary(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMAGINARY'), ([_re, im]) => im);\r\n    }\r\n    imreal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMREAL'), ([re, _im]) => re);\r\n    }\r\n    imargument(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMARGUMENT'), ([re, im]) => {\r\n            if (re === 0 && im === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.atan2(im, re);\r\n        });\r\n    }\r\n    imconjugate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCONJUGATE'), ([re, im]) => coerceComplexToString([re, -im]));\r\n    }\r\n    imcos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOS'), (arg) => coerceComplexToString(cos(arg)));\r\n    }\r\n    imcosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOSH'), (arg) => coerceComplexToString(cosh(arg)));\r\n    }\r\n    imcot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOT'), (arg) => coerceComplexToString(div(cos(arg), sin(arg))));\r\n    }\r\n    imcsc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCSC'), (arg) => coerceComplexToString(div([1, 0], sin(arg))));\r\n    }\r\n    imcsch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCSCH'), (arg) => coerceComplexToString(div([1, 0], sinh(arg))));\r\n    }\r\n    imsec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSEC'), (arg) => coerceComplexToString(div([1, 0], cos(arg))));\r\n    }\r\n    imsech(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSECH'), (arg) => coerceComplexToString(div([1, 0], cosh(arg))));\r\n    }\r\n    imsin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSIN'), (arg) => coerceComplexToString(sin(arg)));\r\n    }\r\n    imsinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSINH'), (arg) => coerceComplexToString(sinh(arg)));\r\n    }\r\n    imtan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMTAN'), (arg) => coerceComplexToString(div(sin(arg), cos(arg))));\r\n    }\r\n    imdiv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMDIV'), (arg1, arg2) => coerceComplexToString(div(arg1, arg2)));\r\n    }\r\n    improduct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMPRODUCT'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceComplexExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            let prod = [1, 0];\r\n            for (const val of coerced) {\r\n                prod = mul(prod, val);\r\n            }\r\n            return coerceComplexToString(prod);\r\n        });\r\n    }\r\n    imsum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSUM'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceComplexExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            let sum = [0, 0];\r\n            for (const val of coerced) {\r\n                sum = add(sum, val);\r\n            }\r\n            return coerceComplexToString(sum);\r\n        });\r\n    }\r\n    imsub(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSUB'), (arg1, arg2) => coerceComplexToString(sub(arg1, arg2)));\r\n    }\r\n    imexp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMEXP'), (arg) => coerceComplexToString(exp(arg)));\r\n    }\r\n    imln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLN'), (arg) => coerceComplexToString(ln(arg)));\r\n    }\r\n    imlog10(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLOG10'), (arg) => {\r\n            const [re, im] = ln(arg);\r\n            const c = Math.log(10);\r\n            return coerceComplexToString([re / c, im / c]);\r\n        });\r\n    }\r\n    imlog2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLOG2'), (arg) => {\r\n            const [re, im] = ln(arg);\r\n            const c = Math.log(2);\r\n            return coerceComplexToString([re / c, im / c]);\r\n        });\r\n    }\r\n    impower(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMPOWER'), (arg, n) => coerceComplexToString(power(arg, n)));\r\n    }\r\n    imsqrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSQRT'), (arg) => coerceComplexToString(power(arg, 0.5)));\r\n    }\r\n}\r\nComplexPlugin.implementedFunctions = {\r\n    'COMPLEX': {\r\n        method: 'complex',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.STRING, defaultValue: 'i' },\r\n        ],\r\n    },\r\n    'IMABS': {\r\n        method: 'imabs',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMAGINARY': {\r\n        method: 'imaginary',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMREAL': {\r\n        method: 'imreal',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMARGUMENT': {\r\n        method: 'imargument',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCONJUGATE': {\r\n        method: 'imconjugate',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOS': {\r\n        method: 'imcos',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOSH': {\r\n        method: 'imcosh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOT': {\r\n        method: 'imcot',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCSC': {\r\n        method: 'imcsc',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCSCH': {\r\n        method: 'imcsch',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSEC': {\r\n        method: 'imsec',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSECH': {\r\n        method: 'imsech',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSIN': {\r\n        method: 'imsin',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSINH': {\r\n        method: 'imsinh',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMTAN': {\r\n        method: 'imtan',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMDIV': {\r\n        method: 'imdiv',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMPRODUCT': {\r\n        method: 'improduct',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IMSUM': {\r\n        method: 'imsum',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IMSUB': {\r\n        method: 'imsub',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMEXP': {\r\n        method: 'imexp',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLN': {\r\n        method: 'imln',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLOG10': {\r\n        method: 'imlog10',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLOG2': {\r\n        method: 'imlog2',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n    'IMPOWER': {\r\n        method: 'impower',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n        ],\r\n    },\r\n    'IMSQRT': {\r\n        method: 'imsqrt',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.COMPLEX },\r\n        ],\r\n    },\r\n};\r\nfunction add([re1, im1], [re2, im2]) {\r\n    return [re1 + re2, im1 + im2];\r\n}\r\nfunction sub([re1, im1], [re2, im2]) {\r\n    return [re1 - re2, im1 - im2];\r\n}\r\nfunction mul([re1, im1], [re2, im2]) {\r\n    return [re1 * re2 - im1 * im2, re1 * im2 + re2 * im1];\r\n}\r\nfunction div([re1, im1], [re2, im2]) {\r\n    const denom = Math.pow(re2, 2) + Math.pow(im2, 2);\r\n    const [nomRe, nomIm] = mul([re1, im1], [re2, -im2]);\r\n    return [nomRe / denom, nomIm / denom];\r\n}\r\nfunction cos([re, im]) {\r\n    return [Math.cos(re) * Math.cosh(im), -Math.sin(re) * Math.sinh(im)];\r\n}\r\nfunction cosh([re, im]) {\r\n    return [Math.cosh(re) * Math.cos(im), Math.sinh(re) * Math.sin(im)];\r\n}\r\nfunction sin([re, im]) {\r\n    return [Math.sin(re) * Math.cosh(im), Math.cos(re) * Math.sinh(im)];\r\n}\r\nfunction sinh([re, im]) {\r\n    return [Math.sinh(re) * Math.cos(im), Math.cosh(re) * Math.sin(im)];\r\n}\r\nfunction exp([re, im]) {\r\n    return [Math.exp(re) * Math.cos(im), Math.exp(re) * Math.sin(im)];\r\n}\r\nfunction abs([re, im]) {\r\n    return Math.sqrt(re * re + im * im);\r\n}\r\nfunction ln([re, im]) {\r\n    return [Math.log(abs([re, im])), Math.atan2(im, re)];\r\n}\r\nfunction power(arg, n) {\r\n    const [re, im] = ln(arg);\r\n    return exp([n * re, n * im]);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { centralF, chisquare, corrcoeff, covariance, geomean, mean, normal, stdev, studentt, sumsqerr, variance } from './3rdparty/jstat/jstat';\r\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\r\nexport class StatisticalAggregationPlugin extends FunctionPlugin {\r\n    avedev(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('AVEDEV'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const avg = mean(coerced);\r\n            return coerced.reduce((a, b) => a + Math.abs(b - avg), 0) / coerced.length;\r\n        });\r\n    }\r\n    devsq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEVSQ'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return 0;\r\n            }\r\n            return sumsqerr(coerced);\r\n        });\r\n    }\r\n    geomean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GEOMEAN'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            for (const val of coerced) {\r\n                if (val <= 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n            }\r\n            return geomean(coerced);\r\n        });\r\n    }\r\n    harmean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HARMEAN'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            for (const val of coerced) {\r\n                if (val <= 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n            }\r\n            return coerced.length / (coerced.reduce((a, b) => a + 1 / b, 0));\r\n        });\r\n    }\r\n    correl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CORREL'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return corrcoeff(ret[0], ret[1]);\r\n        });\r\n    }\r\n    rsq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RSQ'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return Math.pow(corrcoeff(ret[0], ret[1]), 2);\r\n        });\r\n    }\r\n    covariancep(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COVARIANCE.P'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.OneValue);\r\n            }\r\n            if (n === 1) {\r\n                return 0;\r\n            }\r\n            return covariance(ret[0], ret[1]) * (n - 1) / n;\r\n        });\r\n    }\r\n    covariances(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COVARIANCE.S'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return covariance(ret[0], ret[1]);\r\n        });\r\n    }\r\n    ztest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('Z.TEST'), (range, x, sigma) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            const n = vals.length;\r\n            if (sigma === undefined) {\r\n                if (n < 2) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                sigma = stdev(vals, true);\r\n            }\r\n            if (n < 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.OneValue);\r\n            }\r\n            if (sigma === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return 1 - normal.cdf((mean(vals) - x) / (sigma / Math.sqrt(n)), 0, 1);\r\n        });\r\n    }\r\n    ftest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.TEST'), (dataX, dataY) => {\r\n            const arrX = this.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\r\n            const arrY = this.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\r\n            if (arrX instanceof CellError) {\r\n                return arrX;\r\n            }\r\n            if (arrY instanceof CellError) {\r\n                return arrY;\r\n            }\r\n            if (arrX.length <= 1 || arrY.length <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const vx = variance(arrX, true);\r\n            const vy = variance(arrY, true);\r\n            if (vx === 0 || vy === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const r = vx / vy;\r\n            const v = centralF.cdf(r, arrX.length - 1, arrY.length - 1);\r\n            return 2 * Math.min(v, 1 - v);\r\n        });\r\n    }\r\n    steyx(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('STEYX'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 2) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            return Math.sqrt((sumsqerr(ret[0]) - Math.pow(covariance(ret[0], ret[1]) * (n - 1), 2) / sumsqerr(ret[1])) / (n - 2));\r\n        });\r\n    }\r\n    slope(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SLOPE'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return covariance(ret[0], ret[1]) * (n - 1) / sumsqerr(ret[1]);\r\n        });\r\n    }\r\n    chisqtest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.TEST'), (dataX, dataY) => {\r\n            const r = dataX.height();\r\n            const c = dataX.width();\r\n            if (dataY.height() !== r || dataY.width() !== c) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            if (ret[0].length <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            let sum = 0;\r\n            for (let i = 0; i < ret[0].length; i++) {\r\n                if (ret[1][i] === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                sum += Math.pow(ret[0][i] - ret[1][i], 2) / ret[1][i];\r\n            }\r\n            if (sum < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n            }\r\n            return 1 - chisquare.cdf(sum, (r > 1 && c > 1) ? (r - 1) * (c - 1) : r * c - 1);\r\n        });\r\n    }\r\n    ttest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.TEST'), (dataX, dataY, tails, type) => {\r\n            const arrX = this.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\r\n            const arrY = this.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\r\n            if (arrX instanceof CellError) {\r\n                return arrX;\r\n            }\r\n            if (arrY instanceof CellError) {\r\n                return arrY;\r\n            }\r\n            const n = arrX.length;\r\n            const m = arrY.length;\r\n            if (type === 1) {\r\n                if (m !== n) {\r\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n                }\r\n                if (n <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const sub = Array(n);\r\n                for (let i = 0; i < n; i++) {\r\n                    sub[i] = arrX[i] - arrY[i];\r\n                }\r\n                const s = stdev(sub, true);\r\n                if (s === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs(Math.sqrt(n) * mean(sub) / s);\r\n                return tails * (1 - studentt.cdf(t, n - 1));\r\n            }\r\n            else if (type === 2) {\r\n                if (n <= 1 || m <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const s = (sumsqerr(arrX) + sumsqerr(arrY)) / (n + m - 2);\r\n                if (s === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(s * (1 / n + 1 / m)));\r\n                return tails * (1 - studentt.cdf(t, n + m - 2));\r\n            }\r\n            else { //type === 3\r\n                if (n <= 1 || m <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const sx = variance(arrX, true);\r\n                const sy = variance(arrY, true);\r\n                if (sx === 0 && sy === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(sx / n + sy / m));\r\n                const v = Math.pow(sx / n + sy / m, 2) / (Math.pow(sx / n, 2) / (n - 1) + Math.pow(sy / m, 2) / (m - 1));\r\n                return tails * (1 - studentt.cdf(t, v));\r\n            }\r\n        });\r\n    }\r\n    skew(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SKEW'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            const n = coerced.length;\r\n            if (n < 3) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            const avg = mean(coerced);\r\n            const s = stdev(coerced, true);\r\n            if (s === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) * n / (n - 1) / (n - 2);\r\n        });\r\n    }\r\n    skewp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SKEW.P'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            const n = coerced.length;\r\n            if (n < 3) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            const avg = mean(coerced);\r\n            const s = stdev(coerced, false);\r\n            if (s === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) / n;\r\n        });\r\n    }\r\n}\r\nStatisticalAggregationPlugin.implementedFunctions = {\r\n    'AVEDEV': {\r\n        method: 'avedev',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'DEVSQ': {\r\n        method: 'devsq',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'GEOMEAN': {\r\n        method: 'geomean',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'HARMEAN': {\r\n        method: 'harmean',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'CORREL': {\r\n        method: 'correl',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'RSQ': {\r\n        method: 'rsq',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'COVARIANCE.P': {\r\n        method: 'covariancep',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'COVARIANCE.S': {\r\n        method: 'covariances',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'Z.TEST': {\r\n        method: 'ztest',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.NUMBER },\r\n            { argumentType: FunctionArgumentType.NUMBER, optionalArg: true },\r\n        ],\r\n    },\r\n    'F.TEST': {\r\n        method: 'ftest',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'STEYX': {\r\n        method: 'steyx',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'SLOPE': {\r\n        method: 'slope',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'CHISQ.TEST': {\r\n        method: 'chisqtest',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n        ],\r\n    },\r\n    'T.TEST': {\r\n        method: 'ttest',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.RANGE },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1, maxValue: 2 },\r\n            { argumentType: FunctionArgumentType.INTEGER, minValue: 1, maxValue: 3 },\r\n        ],\r\n    },\r\n    'SKEW': {\r\n        method: 'skew',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SKEW.P': {\r\n        method: 'skewp',\r\n        parameters: [\r\n            { argumentType: FunctionArgumentType.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\nStatisticalAggregationPlugin.aliases = {\r\n    COVAR: 'COVARIANCE.P',\r\n    FTEST: 'F.TEST',\r\n    PEARSON: 'CORREL',\r\n    ZTEST: 'Z.TEST',\r\n    CHITEST: 'CHISQ.TEST',\r\n    TTEST: 'T.TEST',\r\n    COVARIANCEP: 'COVARIANCE.P',\r\n    COVARIANCES: 'COVARIANCE.S',\r\n    SKEWP: 'SKEW.P',\r\n};\r\nfunction parseTwoArrays(dataX, dataY) {\r\n    const xit = dataX.iterateValuesFromTopLeftCorner();\r\n    const yit = dataY.iterateValuesFromTopLeftCorner();\r\n    let x, y;\r\n    const arrX = [];\r\n    const arrY = [];\r\n    while (x = xit.next(), y = yit.next(), !x.done && !y.done) {\r\n        const xval = x.value;\r\n        const yval = y.value;\r\n        if (xval instanceof CellError) {\r\n            return xval;\r\n        }\r\n        else if (yval instanceof CellError) {\r\n            return yval;\r\n        }\r\n        else if (isExtendedNumber(xval) && isExtendedNumber(yval)) {\r\n            arrX.push(getRawValue(xval));\r\n            arrY.push(getRawValue(yval));\r\n        }\r\n    }\r\n    return [arrX, arrY];\r\n}\r\n"],"sourceRoot":""}